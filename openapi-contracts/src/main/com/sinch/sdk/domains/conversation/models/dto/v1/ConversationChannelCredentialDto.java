/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** Enables access to the underlying messaging channel. */
@JsonPropertyOrder({
  ConversationChannelCredentialDto.JSON_PROPERTY_CHANNEL,
  ConversationChannelCredentialDto.JSON_PROPERTY_CALLBACK_SECRET,
  ConversationChannelCredentialDto.JSON_PROPERTY_MMS_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_SMS_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_KAKAOTALK_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_KAKAOTALKCHAT_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_INSTAGRAM_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_STATIC_BEARER,
  ConversationChannelCredentialDto.JSON_PROPERTY_STATIC_TOKEN,
  ConversationChannelCredentialDto.JSON_PROPERTY_TELEGRAM_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_LINE_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_WECHAT_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_APPLEBC_CREDENTIALS,
  ConversationChannelCredentialDto.JSON_PROPERTY_STATE,
  ConversationChannelCredentialDto.JSON_PROPERTY_CHANNEL_KNOWN_ID
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class ConversationChannelCredentialDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_CHANNEL = "channel";
  private ConversationChannelDto channel;
  private boolean channelDefined = false;

  public static final String JSON_PROPERTY_CALLBACK_SECRET = "callback_secret";
  private String callbackSecret;
  private boolean callbackSecretDefined = false;

  public static final String JSON_PROPERTY_MMS_CREDENTIALS = "mms_credentials";
  private MMSCredentialsDto mmsCredentials;
  private boolean mmsCredentialsDefined = false;

  public static final String JSON_PROPERTY_SMS_CREDENTIALS = "sms_credentials";
  private SMSCredentialsDto smsCredentials;
  private boolean smsCredentialsDefined = false;

  public static final String JSON_PROPERTY_KAKAOTALK_CREDENTIALS = "kakaotalk_credentials";
  private KakaoTalkCredentialsDto kakaotalkCredentials;
  private boolean kakaotalkCredentialsDefined = false;

  public static final String JSON_PROPERTY_KAKAOTALKCHAT_CREDENTIALS = "kakaotalkchat_credentials";
  private KakaoTalkChatCredentialsDto kakaotalkchatCredentials;
  private boolean kakaotalkchatCredentialsDefined = false;

  public static final String JSON_PROPERTY_INSTAGRAM_CREDENTIALS = "instagram_credentials";
  private InstagramCredentialsDto instagramCredentials;
  private boolean instagramCredentialsDefined = false;

  public static final String JSON_PROPERTY_STATIC_BEARER = "static_bearer";
  private StaticBearerCredentialDto staticBearer;
  private boolean staticBearerDefined = false;

  public static final String JSON_PROPERTY_STATIC_TOKEN = "static_token";
  private StaticTokenCredentialDto staticToken;
  private boolean staticTokenDefined = false;

  public static final String JSON_PROPERTY_TELEGRAM_CREDENTIALS = "telegram_credentials";
  private TelegramCredentialsDto telegramCredentials;
  private boolean telegramCredentialsDefined = false;

  public static final String JSON_PROPERTY_LINE_CREDENTIALS = "line_credentials";
  private LineCredentialsDto lineCredentials;
  private boolean lineCredentialsDefined = false;

  public static final String JSON_PROPERTY_WECHAT_CREDENTIALS = "wechat_credentials";
  private WeChatCredentialsDto wechatCredentials;
  private boolean wechatCredentialsDefined = false;

  public static final String JSON_PROPERTY_APPLEBC_CREDENTIALS = "applebc_credentials";
  private AppleBcCredentialsDto applebcCredentials;
  private boolean applebcCredentialsDefined = false;

  public static final String JSON_PROPERTY_STATE = "state";
  private ConversationChannelCredentialStateDto state;
  private boolean stateDefined = false;

  public static final String JSON_PROPERTY_CHANNEL_KNOWN_ID = "channel_known_id";
  private String channelKnownId;
  private boolean channelKnownIdDefined = false;

  public ConversationChannelCredentialDto() {}

  public ConversationChannelCredentialDto channel(ConversationChannelDto channel) {
    this.channel = channel;
    this.channelDefined = true;
    return this;
  }

  /**
   * Get channel
   *
   * @return channel
   */
  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public ConversationChannelDto getChannel() {
    return channel;
  }

  @JsonIgnore
  public boolean getChannelDefined() {
    return channelDefined;
  }

  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannel(ConversationChannelDto channel) {
    this.channel = channel;
    this.channelDefined = true;
  }

  public ConversationChannelCredentialDto callbackSecret(String callbackSecret) {
    this.callbackSecret = callbackSecret;
    this.callbackSecretDefined = true;
    return this;
  }

  /**
   * The secret used to verify the channel callbacks for channels which support callback
   * verification. The callback verification is not needed for Sinch-managed channels because the
   * callbacks are not leaving Sinch internal networks. Max length is 256 characters. Note: leaving
   * channel_callback_secret empty for channels with callback verification will disable the
   * verification.
   *
   * @return callbackSecret
   */
  @JsonProperty(JSON_PROPERTY_CALLBACK_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCallbackSecret() {
    return callbackSecret;
  }

  @JsonIgnore
  public boolean getCallbackSecretDefined() {
    return callbackSecretDefined;
  }

  @JsonProperty(JSON_PROPERTY_CALLBACK_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallbackSecret(String callbackSecret) {
    this.callbackSecret = callbackSecret;
    this.callbackSecretDefined = true;
  }

  public ConversationChannelCredentialDto mmsCredentials(MMSCredentialsDto mmsCredentials) {
    this.mmsCredentials = mmsCredentials;
    this.mmsCredentialsDefined = true;
    return this;
  }

  /**
   * Get mmsCredentials
   *
   * @return mmsCredentials
   */
  @JsonProperty(JSON_PROPERTY_MMS_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MMSCredentialsDto getMmsCredentials() {
    return mmsCredentials;
  }

  @JsonIgnore
  public boolean getMmsCredentialsDefined() {
    return mmsCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_MMS_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMmsCredentials(MMSCredentialsDto mmsCredentials) {
    this.mmsCredentials = mmsCredentials;
    this.mmsCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto smsCredentials(SMSCredentialsDto smsCredentials) {
    this.smsCredentials = smsCredentials;
    this.smsCredentialsDefined = true;
    return this;
  }

  /**
   * Get smsCredentials
   *
   * @return smsCredentials
   */
  @JsonProperty(JSON_PROPERTY_SMS_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SMSCredentialsDto getSmsCredentials() {
    return smsCredentials;
  }

  @JsonIgnore
  public boolean getSmsCredentialsDefined() {
    return smsCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_SMS_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSmsCredentials(SMSCredentialsDto smsCredentials) {
    this.smsCredentials = smsCredentials;
    this.smsCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto kakaotalkCredentials(
      KakaoTalkCredentialsDto kakaotalkCredentials) {
    this.kakaotalkCredentials = kakaotalkCredentials;
    this.kakaotalkCredentialsDefined = true;
    return this;
  }

  /**
   * Get kakaotalkCredentials
   *
   * @return kakaotalkCredentials
   */
  @JsonProperty(JSON_PROPERTY_KAKAOTALK_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public KakaoTalkCredentialsDto getKakaotalkCredentials() {
    return kakaotalkCredentials;
  }

  @JsonIgnore
  public boolean getKakaotalkCredentialsDefined() {
    return kakaotalkCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_KAKAOTALK_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKakaotalkCredentials(KakaoTalkCredentialsDto kakaotalkCredentials) {
    this.kakaotalkCredentials = kakaotalkCredentials;
    this.kakaotalkCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto kakaotalkchatCredentials(
      KakaoTalkChatCredentialsDto kakaotalkchatCredentials) {
    this.kakaotalkchatCredentials = kakaotalkchatCredentials;
    this.kakaotalkchatCredentialsDefined = true;
    return this;
  }

  /**
   * Get kakaotalkchatCredentials
   *
   * @return kakaotalkchatCredentials
   */
  @JsonProperty(JSON_PROPERTY_KAKAOTALKCHAT_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public KakaoTalkChatCredentialsDto getKakaotalkchatCredentials() {
    return kakaotalkchatCredentials;
  }

  @JsonIgnore
  public boolean getKakaotalkchatCredentialsDefined() {
    return kakaotalkchatCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_KAKAOTALKCHAT_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKakaotalkchatCredentials(KakaoTalkChatCredentialsDto kakaotalkchatCredentials) {
    this.kakaotalkchatCredentials = kakaotalkchatCredentials;
    this.kakaotalkchatCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto instagramCredentials(
      InstagramCredentialsDto instagramCredentials) {
    this.instagramCredentials = instagramCredentials;
    this.instagramCredentialsDefined = true;
    return this;
  }

  /**
   * Get instagramCredentials
   *
   * @return instagramCredentials
   */
  @JsonProperty(JSON_PROPERTY_INSTAGRAM_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public InstagramCredentialsDto getInstagramCredentials() {
    return instagramCredentials;
  }

  @JsonIgnore
  public boolean getInstagramCredentialsDefined() {
    return instagramCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_INSTAGRAM_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstagramCredentials(InstagramCredentialsDto instagramCredentials) {
    this.instagramCredentials = instagramCredentials;
    this.instagramCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto staticBearer(StaticBearerCredentialDto staticBearer) {
    this.staticBearer = staticBearer;
    this.staticBearerDefined = true;
    return this;
  }

  /**
   * Get staticBearer
   *
   * @return staticBearer
   */
  @JsonProperty(JSON_PROPERTY_STATIC_BEARER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public StaticBearerCredentialDto getStaticBearer() {
    return staticBearer;
  }

  @JsonIgnore
  public boolean getStaticBearerDefined() {
    return staticBearerDefined;
  }

  @JsonProperty(JSON_PROPERTY_STATIC_BEARER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStaticBearer(StaticBearerCredentialDto staticBearer) {
    this.staticBearer = staticBearer;
    this.staticBearerDefined = true;
  }

  public ConversationChannelCredentialDto staticToken(StaticTokenCredentialDto staticToken) {
    this.staticToken = staticToken;
    this.staticTokenDefined = true;
    return this;
  }

  /**
   * Get staticToken
   *
   * @return staticToken
   */
  @JsonProperty(JSON_PROPERTY_STATIC_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public StaticTokenCredentialDto getStaticToken() {
    return staticToken;
  }

  @JsonIgnore
  public boolean getStaticTokenDefined() {
    return staticTokenDefined;
  }

  @JsonProperty(JSON_PROPERTY_STATIC_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStaticToken(StaticTokenCredentialDto staticToken) {
    this.staticToken = staticToken;
    this.staticTokenDefined = true;
  }

  public ConversationChannelCredentialDto telegramCredentials(
      TelegramCredentialsDto telegramCredentials) {
    this.telegramCredentials = telegramCredentials;
    this.telegramCredentialsDefined = true;
    return this;
  }

  /**
   * Get telegramCredentials
   *
   * @return telegramCredentials
   */
  @JsonProperty(JSON_PROPERTY_TELEGRAM_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TelegramCredentialsDto getTelegramCredentials() {
    return telegramCredentials;
  }

  @JsonIgnore
  public boolean getTelegramCredentialsDefined() {
    return telegramCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_TELEGRAM_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTelegramCredentials(TelegramCredentialsDto telegramCredentials) {
    this.telegramCredentials = telegramCredentials;
    this.telegramCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto lineCredentials(LineCredentialsDto lineCredentials) {
    this.lineCredentials = lineCredentials;
    this.lineCredentialsDefined = true;
    return this;
  }

  /**
   * Get lineCredentials
   *
   * @return lineCredentials
   */
  @JsonProperty(JSON_PROPERTY_LINE_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LineCredentialsDto getLineCredentials() {
    return lineCredentials;
  }

  @JsonIgnore
  public boolean getLineCredentialsDefined() {
    return lineCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_LINE_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLineCredentials(LineCredentialsDto lineCredentials) {
    this.lineCredentials = lineCredentials;
    this.lineCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto wechatCredentials(
      WeChatCredentialsDto wechatCredentials) {
    this.wechatCredentials = wechatCredentials;
    this.wechatCredentialsDefined = true;
    return this;
  }

  /**
   * Get wechatCredentials
   *
   * @return wechatCredentials
   */
  @JsonProperty(JSON_PROPERTY_WECHAT_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public WeChatCredentialsDto getWechatCredentials() {
    return wechatCredentials;
  }

  @JsonIgnore
  public boolean getWechatCredentialsDefined() {
    return wechatCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_WECHAT_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWechatCredentials(WeChatCredentialsDto wechatCredentials) {
    this.wechatCredentials = wechatCredentials;
    this.wechatCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto applebcCredentials(
      AppleBcCredentialsDto applebcCredentials) {
    this.applebcCredentials = applebcCredentials;
    this.applebcCredentialsDefined = true;
    return this;
  }

  /**
   * Get applebcCredentials
   *
   * @return applebcCredentials
   */
  @JsonProperty(JSON_PROPERTY_APPLEBC_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AppleBcCredentialsDto getApplebcCredentials() {
    return applebcCredentials;
  }

  @JsonIgnore
  public boolean getApplebcCredentialsDefined() {
    return applebcCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_APPLEBC_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplebcCredentials(AppleBcCredentialsDto applebcCredentials) {
    this.applebcCredentials = applebcCredentials;
    this.applebcCredentialsDefined = true;
  }

  public ConversationChannelCredentialDto state(ConversationChannelCredentialStateDto state) {
    this.state = state;
    this.stateDefined = true;
    return this;
  }

  /**
   * Get state
   *
   * @return state
   */
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ConversationChannelCredentialStateDto getState() {
    return state;
  }

  @JsonIgnore
  public boolean getStateDefined() {
    return stateDefined;
  }

  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(ConversationChannelCredentialStateDto state) {
    this.state = state;
    this.stateDefined = true;
  }

  public ConversationChannelCredentialDto channelKnownId(String channelKnownId) {
    this.channelKnownId = channelKnownId;
    this.channelKnownIdDefined = true;
    return this;
  }

  /**
   * Output only. Additional identifier set by the channel that represents a specific id used by the
   * channel.
   *
   * @return channelKnownId
   */
  @JsonProperty(JSON_PROPERTY_CHANNEL_KNOWN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getChannelKnownId() {
    return channelKnownId;
  }

  @JsonIgnore
  public boolean getChannelKnownIdDefined() {
    return channelKnownIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_CHANNEL_KNOWN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelKnownId(String channelKnownId) {
    this.channelKnownId = channelKnownId;
    this.channelKnownIdDefined = true;
  }

  /** Return true if this ConversationChannelCredential object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationChannelCredentialDto conversationChannelCredential =
        (ConversationChannelCredentialDto) o;
    return Objects.equals(this.channel, conversationChannelCredential.channel)
        && Objects.equals(this.callbackSecret, conversationChannelCredential.callbackSecret)
        && Objects.equals(this.mmsCredentials, conversationChannelCredential.mmsCredentials)
        && Objects.equals(this.smsCredentials, conversationChannelCredential.smsCredentials)
        && Objects.equals(
            this.kakaotalkCredentials, conversationChannelCredential.kakaotalkCredentials)
        && Objects.equals(
            this.kakaotalkchatCredentials, conversationChannelCredential.kakaotalkchatCredentials)
        && Objects.equals(
            this.instagramCredentials, conversationChannelCredential.instagramCredentials)
        && Objects.equals(this.staticBearer, conversationChannelCredential.staticBearer)
        && Objects.equals(this.staticToken, conversationChannelCredential.staticToken)
        && Objects.equals(
            this.telegramCredentials, conversationChannelCredential.telegramCredentials)
        && Objects.equals(this.lineCredentials, conversationChannelCredential.lineCredentials)
        && Objects.equals(this.wechatCredentials, conversationChannelCredential.wechatCredentials)
        && Objects.equals(this.applebcCredentials, conversationChannelCredential.applebcCredentials)
        && Objects.equals(this.state, conversationChannelCredential.state)
        && Objects.equals(this.channelKnownId, conversationChannelCredential.channelKnownId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        channel,
        callbackSecret,
        mmsCredentials,
        smsCredentials,
        kakaotalkCredentials,
        kakaotalkchatCredentials,
        instagramCredentials,
        staticBearer,
        staticToken,
        telegramCredentials,
        lineCredentials,
        wechatCredentials,
        applebcCredentials,
        state,
        channelKnownId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationChannelCredentialDto {\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    callbackSecret: ").append(toIndentedString(callbackSecret)).append("\n");
    sb.append("    mmsCredentials: ").append(toIndentedString(mmsCredentials)).append("\n");
    sb.append("    smsCredentials: ").append(toIndentedString(smsCredentials)).append("\n");
    sb.append("    kakaotalkCredentials: ")
        .append(toIndentedString(kakaotalkCredentials))
        .append("\n");
    sb.append("    kakaotalkchatCredentials: ")
        .append(toIndentedString(kakaotalkchatCredentials))
        .append("\n");
    sb.append("    instagramCredentials: ")
        .append(toIndentedString(instagramCredentials))
        .append("\n");
    sb.append("    staticBearer: ").append(toIndentedString(staticBearer)).append("\n");
    sb.append("    staticToken: ").append(toIndentedString(staticToken)).append("\n");
    sb.append("    telegramCredentials: ")
        .append(toIndentedString(telegramCredentials))
        .append("\n");
    sb.append("    lineCredentials: ").append(toIndentedString(lineCredentials)).append("\n");
    sb.append("    wechatCredentials: ").append(toIndentedString(wechatCredentials)).append("\n");
    sb.append("    applebcCredentials: ").append(toIndentedString(applebcCredentials)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    channelKnownId: ").append(toIndentedString(channelKnownId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
