/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** AppMessageCommonPropsDto */
@JsonPropertyOrder({
  AppMessageCommonPropsDto.JSON_PROPERTY_EXPLICIT_CHANNEL_MESSAGE,
  AppMessageCommonPropsDto.JSON_PROPERTY_ADDITIONAL_PROPERTIES,
  AppMessageCommonPropsDto.JSON_PROPERTY_AGENT,
  AppMessageCommonPropsDto.JSON_PROPERTY_EXPLICIT_CHANNEL_OMNI_MESSAGE
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class AppMessageCommonPropsDto {
  public static final String JSON_PROPERTY_EXPLICIT_CHANNEL_MESSAGE = "explicit_channel_message";
  private Object explicitChannelMessage;
  private boolean explicitChannelMessageDefined = false;

  public static final String JSON_PROPERTY_ADDITIONAL_PROPERTIES = "additionalProperties";
  private AppMessageCommonPropsAdditionalPropertiesDto additionalProperties;
  private boolean additionalPropertiesDefined = false;

  public static final String JSON_PROPERTY_AGENT = "agent";
  private AppMessageCommonPropsAgentDto agent;
  private boolean agentDefined = false;

  public static final String JSON_PROPERTY_EXPLICIT_CHANNEL_OMNI_MESSAGE =
      "explicit_channel_omni_message";
  private Object explicitChannelOmniMessage;
  private boolean explicitChannelOmniMessageDefined = false;

  public AppMessageCommonPropsDto() {}

  public AppMessageCommonPropsDto explicitChannelMessage(Object explicitChannelMessage) {
    this.explicitChannelMessage = explicitChannelMessage;
    this.explicitChannelMessageDefined = true;
    return this;
  }

  /**
   * Optional. Channel specific messages, overriding any transcoding. The key in the map must point
   * to a valid conversation channel as defined by the enum ConversationChannel.
   *
   * @return explicitChannelMessage
   */
  @JsonProperty(JSON_PROPERTY_EXPLICIT_CHANNEL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getExplicitChannelMessage() {
    return explicitChannelMessage;
  }

  @JsonIgnore
  public boolean getExplicitChannelMessageDefined() {
    return explicitChannelMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_EXPLICIT_CHANNEL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExplicitChannelMessage(Object explicitChannelMessage) {
    this.explicitChannelMessage = explicitChannelMessage;
    this.explicitChannelMessageDefined = true;
  }

  public AppMessageCommonPropsDto additionalProperties(
      AppMessageCommonPropsAdditionalPropertiesDto additionalProperties) {
    this.additionalProperties = additionalProperties;
    this.additionalPropertiesDefined = true;
    return this;
  }

  /**
   * Get additionalProperties
   *
   * @return additionalProperties
   */
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AppMessageCommonPropsAdditionalPropertiesDto getAdditionalProperties() {
    return additionalProperties;
  }

  @JsonIgnore
  public boolean getAdditionalPropertiesDefined() {
    return additionalPropertiesDefined;
  }

  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalProperties(
      AppMessageCommonPropsAdditionalPropertiesDto additionalProperties) {
    this.additionalProperties = additionalProperties;
    this.additionalPropertiesDefined = true;
  }

  public AppMessageCommonPropsDto agent(AppMessageCommonPropsAgentDto agent) {
    this.agent = agent;
    this.agentDefined = true;
    return this;
  }

  /**
   * Get agent
   *
   * @return agent
   */
  @JsonProperty(JSON_PROPERTY_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AppMessageCommonPropsAgentDto getAgent() {
    return agent;
  }

  @JsonIgnore
  public boolean getAgentDefined() {
    return agentDefined;
  }

  @JsonProperty(JSON_PROPERTY_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgent(AppMessageCommonPropsAgentDto agent) {
    this.agent = agent;
    this.agentDefined = true;
  }

  public AppMessageCommonPropsDto explicitChannelOmniMessage(Object explicitChannelOmniMessage) {
    this.explicitChannelOmniMessage = explicitChannelOmniMessage;
    this.explicitChannelOmniMessageDefined = true;
    return this;
  }

  /**
   * TBC: Not documented
   *
   * @return explicitChannelOmniMessage
   */
  @JsonProperty(JSON_PROPERTY_EXPLICIT_CHANNEL_OMNI_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getExplicitChannelOmniMessage() {
    return explicitChannelOmniMessage;
  }

  @JsonIgnore
  public boolean getExplicitChannelOmniMessageDefined() {
    return explicitChannelOmniMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_EXPLICIT_CHANNEL_OMNI_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExplicitChannelOmniMessage(Object explicitChannelOmniMessage) {
    this.explicitChannelOmniMessage = explicitChannelOmniMessage;
    this.explicitChannelOmniMessageDefined = true;
  }

  /** Return true if this AppMessageCommonProps object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppMessageCommonPropsDto appMessageCommonProps = (AppMessageCommonPropsDto) o;
    return Objects.equals(this.explicitChannelMessage, appMessageCommonProps.explicitChannelMessage)
        && Objects.equals(this.additionalProperties, appMessageCommonProps.additionalProperties)
        && Objects.equals(this.agent, appMessageCommonProps.agent)
        && Objects.equals(
            this.explicitChannelOmniMessage, appMessageCommonProps.explicitChannelOmniMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        explicitChannelMessage, additionalProperties, agent, explicitChannelOmniMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppMessageCommonPropsDto {\n");
    sb.append("    explicitChannelMessage: ")
        .append(toIndentedString(explicitChannelMessage))
        .append("\n");
    sb.append("    additionalProperties: ")
        .append(toIndentedString(additionalProperties))
        .append("\n");
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    explicitChannelOmniMessage: ")
        .append(toIndentedString(explicitChannelOmniMessage))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
