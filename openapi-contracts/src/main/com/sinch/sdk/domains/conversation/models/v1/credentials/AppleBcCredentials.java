/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.credentials;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * If you are including the AppleBC channel in the &#x60;channel_identifier&#x60; property, you must
 * include this object.
 */
@JsonDeserialize(builder = AppleBcCredentialsImpl.Builder.class)
public interface AppleBcCredentials {

  /**
   * The ID that identifies a Business Chat Account (BCA).
   *
   * @return businessChatAccountId
   */
  String getBusinessChatAccountId();

  /**
   * Merchant ID, required if our client wants to use Apple Pay.
   *
   * @return merchantId
   */
  String getMerchantId();

  /**
   * Certificate reference, required if our client wants to use Apple Pay.
   *
   * @return applePayCertificateReference
   */
  String getApplePayCertificateReference();

  /**
   * Certificate password, required if our client wants to use Apple Pay.
   *
   * @return applePayCertificatePassword
   */
  String getApplePayCertificatePassword();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new AppleBcCredentialsImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param businessChatAccountId see getter
     * @return Current builder
     * @see #getBusinessChatAccountId
     */
    Builder setBusinessChatAccountId(String businessChatAccountId);

    /**
     * see getter
     *
     * @param merchantId see getter
     * @return Current builder
     * @see #getMerchantId
     */
    Builder setMerchantId(String merchantId);

    /**
     * see getter
     *
     * @param applePayCertificateReference see getter
     * @return Current builder
     * @see #getApplePayCertificateReference
     */
    Builder setApplePayCertificateReference(String applePayCertificateReference);

    /**
     * see getter
     *
     * @param applePayCertificatePassword see getter
     * @return Current builder
     * @see #getApplePayCertificatePassword
     */
    Builder setApplePayCertificatePassword(String applePayCertificatePassword);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    AppleBcCredentials build();
  }
}
