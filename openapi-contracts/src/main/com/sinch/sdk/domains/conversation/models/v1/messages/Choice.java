/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.messages;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * A choice is an action the user can take such as buttons for quick replies or other call to
 * actions.
 */
@JsonDeserialize(builder = ChoiceImpl.Builder.class)
public interface Choice {

  /**
   * Get callMessage
   *
   * @return callMessage
   */
  CallMessage getCallMessage();

  /**
   * Get locationMessage
   *
   * @return locationMessage
   */
  LocationMessage getLocationMessage();

  /**
   * Get textMessage
   *
   * @return textMessage
   */
  TextMessage getTextMessage();

  /**
   * Get urlMessage
   *
   * @return urlMessage
   */
  URLMessage getUrlMessage();

  /**
   * An optional field. This data will be returned in the ChoiceResponseMessage. The default is
   * message_id_{text, title}.
   *
   * @return postbackData
   */
  Object getPostbackData();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new ChoiceImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param callMessage see getter
     * @return Current builder
     * @see #getCallMessage
     */
    Builder setCallMessage(CallMessage callMessage);

    /**
     * see getter
     *
     * @param locationMessage see getter
     * @return Current builder
     * @see #getLocationMessage
     */
    Builder setLocationMessage(LocationMessage locationMessage);

    /**
     * see getter
     *
     * @param textMessage see getter
     * @return Current builder
     * @see #getTextMessage
     */
    Builder setTextMessage(TextMessage textMessage);

    /**
     * see getter
     *
     * @param urlMessage see getter
     * @return Current builder
     * @see #getUrlMessage
     */
    Builder setUrlMessage(URLMessage urlMessage);

    /**
     * see getter
     *
     * @param postbackData see getter
     * @return Current builder
     * @see #getPostbackData
     */
    Builder setPostbackData(Object postbackData);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    Choice build();
  }
}
