/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** QueueStatsDto */
@JsonPropertyOrder({
  QueueStatsDto.JSON_PROPERTY_OUTBOUND_SIZE,
  QueueStatsDto.JSON_PROPERTY_OUTBOUND_LIMIT
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class QueueStatsDto {
  public static final String JSON_PROPERTY_OUTBOUND_SIZE = "outbound_size";
  private Long outboundSize;
  private boolean outboundSizeDefined = false;

  public static final String JSON_PROPERTY_OUTBOUND_LIMIT = "outbound_limit";
  private Long outboundLimit;
  private boolean outboundLimitDefined = false;

  public QueueStatsDto() {}

  @JsonCreator
  public QueueStatsDto(
      @JsonProperty(JSON_PROPERTY_OUTBOUND_SIZE) Long outboundSize,
      @JsonProperty(JSON_PROPERTY_OUTBOUND_LIMIT) Long outboundLimit) {
    this();
    this.outboundSize = outboundSize;
    this.outboundSizeDefined = true;
    this.outboundLimit = outboundLimit;
    this.outboundLimitDefined = true;
  }

  /**
   * The current size of the App&#39;s MT queue.
   *
   * @return outboundSize
   */
  @JsonProperty(JSON_PROPERTY_OUTBOUND_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getOutboundSize() {
    return outboundSize;
  }

  @JsonIgnore
  public boolean getOutboundSizeDefined() {
    return outboundSizeDefined;
  }

  /**
   * The limit of the App&#39;s MT queue. The default limit is 500000 messages.
   *
   * @return outboundLimit
   */
  @JsonProperty(JSON_PROPERTY_OUTBOUND_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getOutboundLimit() {
    return outboundLimit;
  }

  @JsonIgnore
  public boolean getOutboundLimitDefined() {
    return outboundLimitDefined;
  }

  /** Return true if this QueueStats object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueueStatsDto queueStats = (QueueStatsDto) o;
    return Objects.equals(this.outboundSize, queueStats.outboundSize)
        && Objects.equals(this.outboundLimit, queueStats.outboundLimit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outboundSize, outboundLimit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueueStatsDto {\n");
    sb.append("    outboundSize: ").append(toIndentedString(outboundSize)).append("\n");
    sb.append("    outboundLimit: ").append(toIndentedString(outboundLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
