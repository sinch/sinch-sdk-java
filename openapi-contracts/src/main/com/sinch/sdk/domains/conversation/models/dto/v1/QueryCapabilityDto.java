/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** QueryCapabilityDto */
@JsonPropertyOrder({
  QueryCapabilityDto.JSON_PROPERTY_APP_ID,
  QueryCapabilityDto.JSON_PROPERTY_RECIPIENT,
  QueryCapabilityDto.JSON_PROPERTY_REQUEST_ID
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class QueryCapabilityDto {
  public static final String JSON_PROPERTY_APP_ID = "app_id";
  private String appId;
  private boolean appIdDefined = false;

  public static final String JSON_PROPERTY_RECIPIENT = "recipient";
  private QueryCapabilityRecipientDto recipient;
  private boolean recipientDefined = false;

  public static final String JSON_PROPERTY_REQUEST_ID = "request_id";
  private String requestId;
  private boolean requestIdDefined = false;

  public QueryCapabilityDto() {}

  public QueryCapabilityDto appId(String appId) {
    this.appId = appId;
    this.appIdDefined = true;
    return this;
  }

  /**
   * The ID of the app to use for capability lookup.
   *
   * @return appId
   */
  @JsonProperty(JSON_PROPERTY_APP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAppId() {
    return appId;
  }

  @JsonIgnore
  public boolean getAppIdDefined() {
    return appIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_APP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAppId(String appId) {
    this.appId = appId;
    this.appIdDefined = true;
  }

  public QueryCapabilityDto recipient(QueryCapabilityRecipientDto recipient) {
    this.recipient = recipient;
    this.recipientDefined = true;
    return this;
  }

  /**
   * Get recipient
   *
   * @return recipient
   */
  @JsonProperty(JSON_PROPERTY_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public QueryCapabilityRecipientDto getRecipient() {
    return recipient;
  }

  @JsonIgnore
  public boolean getRecipientDefined() {
    return recipientDefined;
  }

  @JsonProperty(JSON_PROPERTY_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecipient(QueryCapabilityRecipientDto recipient) {
    this.recipient = recipient;
    this.recipientDefined = true;
  }

  public QueryCapabilityDto requestId(String requestId) {
    this.requestId = requestId;
    this.requestIdDefined = true;
    return this;
  }

  /**
   * ID for the asynchronous response, will be generated if not set. Currently this field is not
   * used for idempotency.
   *
   * @return requestId
   */
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getRequestId() {
    return requestId;
  }

  @JsonIgnore
  public boolean getRequestIdDefined() {
    return requestIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
    this.requestIdDefined = true;
  }

  /** Return true if this QueryCapability object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryCapabilityDto queryCapability = (QueryCapabilityDto) o;
    return Objects.equals(this.appId, queryCapability.appId)
        && Objects.equals(this.recipient, queryCapability.recipient)
        && Objects.equals(this.requestId, queryCapability.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appId, recipient, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryCapabilityDto {\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
