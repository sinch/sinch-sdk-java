/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.app;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * This object contains additional settings related to [delivery report based
 * fallback](../../../../../conversation/keyconcepts/#delivery-report-base-message-fallback). Note
 * that this **paid** functionality is available for open beta testing.
 */
@JsonDeserialize(builder = DeliveryReportBasedFallbackImpl.Builder.class)
public interface DeliveryReportBasedFallback {

  /**
   * Optional. A flag specifying whether this app has enabled fallback message delivery upon no
   * positive delivery report. This feature is applicable only to messages which are sent to a
   * recipient with more than one channel identity. Identities must be defined on channels which
   * support at least the &#39;DELIVERED&#39; message state. **Please note that this functionality
   * requires payment.**
   *
   * @return enabled
   */
  Boolean getEnabled();

  /**
   * Optional. The time, in seconds, after which a message without a positive delivery report will
   * fallback to the next channel. The valid values for this field are [60 - 259200].
   *
   * @return deliveryReportWaitingTime
   */
  Integer getDeliveryReportWaitingTime();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new DeliveryReportBasedFallbackImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param enabled see getter
     * @return Current builder
     * @see #getEnabled
     */
    Builder setEnabled(Boolean enabled);

    /**
     * see getter
     *
     * @param deliveryReportWaitingTime see getter
     * @return Current builder
     * @see #getDeliveryReportWaitingTime
     */
    Builder setDeliveryReportWaitingTime(Integer deliveryReportWaitingTime);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    DeliveryReportBasedFallback build();
  }
}
