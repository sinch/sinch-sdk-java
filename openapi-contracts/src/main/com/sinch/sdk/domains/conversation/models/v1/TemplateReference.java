/*
 * Conversation API | Sinch
 *
 * OpenAPI document version: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.Map;

/** Template (Reference) */
@JsonDeserialize(builder = TemplateReferenceImpl.Builder.class)
public interface TemplateReference
    extends com.sinch.sdk.domains.conversation.models.v1.messages.OmniMessageOverride {

  /**
   * Used to specify what version of a template to use. Required when using <code>
   * omni_channel_override</code> and <code>omni_template</code> fields. This will be used in
   * conjunction with <code>language_code</code>. Note that, when referencing omni-channel templates
   * using the <a href="https://dashboard.sinch.com/">Sinch Customer Dashboard</a>, the latest
   * version of a given omni-template can be identified by populating this field with <code>latest
   * </code>.
   *
   * @return version
   */
  String getVersion();

  /**
   * The BCP-47 language code, such as <code>en_US</code> or <code>sr_Latn</code>. For more
   * information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. English is the
   * default <code>language_code</code>. Note that, while many API calls involving templates accept
   * either the dashed format (<code>en-US</code>) or the underscored format (<code>en_US</code>),
   * some channel specific templates (for example, WhatsApp channel-specific templates) only accept
   * the underscored format. Note that this field is required for WhatsApp channel-specific
   * templates.
   *
   * @return languageCode
   */
  String getLanguageCode();

  /**
   * Required if the template has parameters. Concrete values must be present for all defined
   * parameters in the template. Parameters can be different for different versions and/or languages
   * of the template.
   *
   * @return parameters
   */
  Map<String, String> getParameters();

  /**
   * The ID of the template. Note that, in the case of WhatsApp channel-specific templates, this
   * field must be populated by the name of the template.
   *
   * <p>Field is required
   *
   * @return templateId
   */
  String getTemplateId();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new TemplateReferenceImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param version see getter
     * @return Current builder
     * @see #getVersion
     */
    Builder setVersion(String version);

    /**
     * see getter
     *
     * @param languageCode see getter
     * @return Current builder
     * @see #getLanguageCode
     */
    Builder setLanguageCode(String languageCode);

    /**
     * see getter
     *
     * @param parameters see getter
     * @return Current builder
     * @see #getParameters
     */
    Builder setParameters(Map<String, String> parameters);

    /**
     * see getter
     *
     * @param templateId see getter
     * @return Current builder
     * @see #getTemplateId
     */
    Builder setTemplateId(String templateId);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    TemplateReference build();
  }
}
