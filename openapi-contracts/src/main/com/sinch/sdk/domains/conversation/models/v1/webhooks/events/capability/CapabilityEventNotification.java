/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.webhooks.events.capability;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import com.sinch.sdk.domains.conversation.models.v1.ConversationChannel;
import com.sinch.sdk.domains.conversation.models.v1.Reason;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

/** CapabilityEventNotification */
@JsonDeserialize(builder = CapabilityEventNotificationImpl.Builder.class)
public interface CapabilityEventNotification {

  /**
   * ID generated when submitting the capability request. Can be used to detect duplicates.
   *
   * @return requestId
   */
  String getRequestId();

  /**
   * The ID of the contact.
   *
   * @return contactId
   */
  String getContactId();

  /**
   * Get channel
   *
   * @return channel
   */
  ConversationChannel getChannel();

  /**
   * The channel identity. For example, a phone number for SMS, WhatsApp, and Viber Business.
   *
   * @return identity
   */
  String getIdentity();

  /** Status indicating the recipient's capability on the channel. */
  public class CapabilityStatusEnum extends EnumDynamic<String, CapabilityStatusEnum> {
    public static final CapabilityStatusEnum CAPABILITY_UNKNOWN =
        new CapabilityStatusEnum("CAPABILITY_UNKNOWN");
    public static final CapabilityStatusEnum CAPABILITY_FULL =
        new CapabilityStatusEnum("CAPABILITY_FULL");
    public static final CapabilityStatusEnum CAPABILITY_PARTIAL =
        new CapabilityStatusEnum("CAPABILITY_PARTIAL");
    public static final CapabilityStatusEnum NO_CAPABILITY =
        new CapabilityStatusEnum("NO_CAPABILITY");

    private static final EnumSupportDynamic<String, CapabilityStatusEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(
            CapabilityStatusEnum.class,
            CapabilityStatusEnum::new,
            Arrays.asList(CAPABILITY_UNKNOWN, CAPABILITY_FULL, CAPABILITY_PARTIAL, NO_CAPABILITY));

    private CapabilityStatusEnum(String value) {
      super(value);
    }

    public static Stream<CapabilityStatusEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static CapabilityStatusEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(CapabilityStatusEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * Status indicating the recipient's capability on the channel.
   *
   * @return capabilityStatus
   */
  CapabilityStatusEnum getCapabilityStatus();

  /**
   * When capability_status is set to CAPABILITY_PARTIAL, this field includes a list of the
   * supported channel-specific capabilities reported by the channel.
   *
   * @return channelCapabilities
   */
  List<String> getChannelCapabilities();

  /**
   * Get reason
   *
   * @return reason
   */
  Reason getReason();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new CapabilityEventNotificationImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param requestId see getter
     * @return Current builder
     * @see #getRequestId
     */
    Builder setRequestId(String requestId);

    /**
     * see getter
     *
     * @param contactId see getter
     * @return Current builder
     * @see #getContactId
     */
    Builder setContactId(String contactId);

    /**
     * see getter
     *
     * @param channel see getter
     * @return Current builder
     * @see #getChannel
     */
    Builder setChannel(ConversationChannel channel);

    /**
     * see getter
     *
     * @param identity see getter
     * @return Current builder
     * @see #getIdentity
     */
    Builder setIdentity(String identity);

    /**
     * see getter
     *
     * @param capabilityStatus see getter
     * @return Current builder
     * @see #getCapabilityStatus
     */
    Builder setCapabilityStatus(CapabilityStatusEnum capabilityStatus);

    /**
     * see getter
     *
     * @param channelCapabilities see getter
     * @return Current builder
     * @see #getChannelCapabilities
     */
    Builder setChannelCapabilities(List<String> channelCapabilities);

    /**
     * see getter
     *
     * @param reason see getter
     * @return Current builder
     * @see #getReason
     */
    Builder setReason(Reason reason);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    CapabilityEventNotification build();
  }
}
