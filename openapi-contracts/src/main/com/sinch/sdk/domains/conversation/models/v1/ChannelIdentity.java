/*
 * Conversation API | Sinch
 *
 * OpenAPI document version: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * A unique identity of message recipient on a particular channel. For example, the channel identity
 * on SMS, WHATSAPP or VIBERBM is a MSISDN phone number.
 */
@JsonDeserialize(builder = ChannelIdentityImpl.Builder.class)
public interface ChannelIdentity {

  /**
   * Required if using a channel that uses app-scoped channel identities. Currently, FB Messenger,
   * Viber Bot, Instagram, Apple Messages for Business, LINE, and WeChat use app-scoped channel
   * identities, which means contacts will have different channel identities on different
   * Conversation API apps. These can be thought of as virtual identities that are app-specific and,
   * therefore, the app_id must be included in the API call.
   *
   * @return appId
   */
  String getAppId();

  /**
   * Get channel
   *
   * @return channel
   */
  ConversationChannel getChannel();

  /**
   * The channel identity. This will differ from channel to channel. For example, a phone number for
   * SMS, WhatsApp, and Viber Business.
   *
   * @return identity
   */
  String getIdentity();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new ChannelIdentityImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param appId see getter
     * @return Current builder
     * @see #getAppId
     */
    Builder setAppId(String appId);

    /**
     * see getter
     *
     * @param channel see getter
     * @return Current builder
     * @see #getChannel
     */
    Builder setChannel(ConversationChannel channel);

    /**
     * see getter
     *
     * @param identity see getter
     * @return Current builder
     * @see #getIdentity
     */
    Builder setIdentity(String identity);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    ChannelIdentity build();
  }
}
