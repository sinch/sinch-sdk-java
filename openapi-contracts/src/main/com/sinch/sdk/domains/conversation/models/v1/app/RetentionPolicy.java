/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.app;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * The retention policy configured for the app. For more information about retention policies, see
 * <a href="/docs/conversation/keyconcepts/#retention-policy">Retention Policy</a>.
 */
@JsonDeserialize(builder = RetentionPolicyImpl.Builder.class)
public interface RetentionPolicy {

  /**
   * Get retentionType
   *
   * @return retentionType
   */
  RetentionPolicyType getRetentionType();

  /**
   * Optional. The days before a message or conversation is eligible for deletion. Default value is
   * 180. The ttl_days value has no effect when retention_type is <code>PERSIST_RETENTION_POLICY
   * </code>. The valid values for this field are [1 - 3650]. Note that retention cleanup job runs
   * once every twenty-four hours which can lead to delay i.e., messages and conversations are not
   * deleted on the minute they become eligible for deletion.
   *
   * @return ttlDays
   */
  Long getTtlDays();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new RetentionPolicyImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param retentionType see getter
     * @return Current builder
     * @see #getRetentionType
     */
    Builder setRetentionType(RetentionPolicyType retentionType);

    /**
     * see getter
     *
     * @param ttlDays see getter
     * @return Current builder
     * @see #getTtlDays
     */
    Builder setTtlDays(Long ttlDays);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    RetentionPolicy build();
  }
}
