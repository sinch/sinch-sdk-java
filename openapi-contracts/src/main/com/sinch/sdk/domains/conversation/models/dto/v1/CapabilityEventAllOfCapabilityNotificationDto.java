/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** CapabilityEventAllOfCapabilityNotificationDto */
@JsonPropertyOrder({
  CapabilityEventAllOfCapabilityNotificationDto.JSON_PROPERTY_REQUEST_ID,
  CapabilityEventAllOfCapabilityNotificationDto.JSON_PROPERTY_CONTACT_ID,
  CapabilityEventAllOfCapabilityNotificationDto.JSON_PROPERTY_CHANNEL,
  CapabilityEventAllOfCapabilityNotificationDto.JSON_PROPERTY_IDENTITY,
  CapabilityEventAllOfCapabilityNotificationDto.JSON_PROPERTY_CAPABILITY_STATUS,
  CapabilityEventAllOfCapabilityNotificationDto.JSON_PROPERTY_CHANNEL_CAPABILITIES,
  CapabilityEventAllOfCapabilityNotificationDto.JSON_PROPERTY_REASON
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class CapabilityEventAllOfCapabilityNotificationDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_REQUEST_ID = "request_id";
  private String requestId;
  private boolean requestIdDefined = false;

  public static final String JSON_PROPERTY_CONTACT_ID = "contact_id";
  private String contactId;
  private boolean contactIdDefined = false;

  public static final String JSON_PROPERTY_CHANNEL = "channel";
  private ConversationChannelDto channel;
  private boolean channelDefined = false;

  public static final String JSON_PROPERTY_IDENTITY = "identity";
  private String identity;
  private boolean identityDefined = false;

  /** Status indicating the recipient&#39;s capability on the channel. */
  public enum CapabilityStatusEnum {
    CAPABILITY_UNKNOWN("CAPABILITY_UNKNOWN"),

    CAPABILITY_FULL("CAPABILITY_FULL"),

    CAPABILITY_PARTIAL("CAPABILITY_PARTIAL"),

    NO_CAPABILITY("NO_CAPABILITY"),

    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    CapabilityStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CapabilityStatusEnum fromValue(String value) {
      for (CapabilityStatusEnum b : CapabilityStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_CAPABILITY_STATUS = "capability_status";
  private String capabilityStatus;
  private boolean capabilityStatusDefined = false;

  public static final String JSON_PROPERTY_CHANNEL_CAPABILITIES = "channel_capabilities";
  private List<String> channelCapabilities;
  private boolean channelCapabilitiesDefined = false;

  public static final String JSON_PROPERTY_REASON = "reason";
  private ReasonDto reason;
  private boolean reasonDefined = false;

  public CapabilityEventAllOfCapabilityNotificationDto() {}

  public CapabilityEventAllOfCapabilityNotificationDto requestId(String requestId) {
    this.requestId = requestId;
    this.requestIdDefined = true;
    return this;
  }

  /**
   * ID generated when submitting the capability request. Can be used to detect duplicates.
   *
   * @return requestId
   */
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getRequestId() {
    return requestId;
  }

  @JsonIgnore
  public boolean getRequestIdDefined() {
    return requestIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
    this.requestIdDefined = true;
  }

  public CapabilityEventAllOfCapabilityNotificationDto contactId(String contactId) {
    this.contactId = contactId;
    this.contactIdDefined = true;
    return this;
  }

  /**
   * The ID of the contact.
   *
   * @return contactId
   */
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContactId() {
    return contactId;
  }

  @JsonIgnore
  public boolean getContactIdDefined() {
    return contactIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactId(String contactId) {
    this.contactId = contactId;
    this.contactIdDefined = true;
  }

  public CapabilityEventAllOfCapabilityNotificationDto channel(ConversationChannelDto channel) {
    this.channel = channel;
    this.channelDefined = true;
    return this;
  }

  /**
   * Get channel
   *
   * @return channel
   */
  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ConversationChannelDto getChannel() {
    return channel;
  }

  @JsonIgnore
  public boolean getChannelDefined() {
    return channelDefined;
  }

  @JsonProperty(JSON_PROPERTY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannel(ConversationChannelDto channel) {
    this.channel = channel;
    this.channelDefined = true;
  }

  public CapabilityEventAllOfCapabilityNotificationDto identity(String identity) {
    this.identity = identity;
    this.identityDefined = true;
    return this;
  }

  /**
   * The channel identity. For example, a phone number for SMS, WhatsApp, and Viber Business.
   *
   * @return identity
   */
  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getIdentity() {
    return identity;
  }

  @JsonIgnore
  public boolean getIdentityDefined() {
    return identityDefined;
  }

  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentity(String identity) {
    this.identity = identity;
    this.identityDefined = true;
  }

  public CapabilityEventAllOfCapabilityNotificationDto capabilityStatus(String capabilityStatus) {
    this.capabilityStatus = capabilityStatus;
    this.capabilityStatusDefined = true;
    return this;
  }

  /**
   * Status indicating the recipient&#39;s capability on the channel.
   *
   * @return capabilityStatus
   */
  @JsonProperty(JSON_PROPERTY_CAPABILITY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCapabilityStatus() {
    return capabilityStatus;
  }

  @JsonIgnore
  public boolean getCapabilityStatusDefined() {
    return capabilityStatusDefined;
  }

  @JsonProperty(JSON_PROPERTY_CAPABILITY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapabilityStatus(String capabilityStatus) {
    this.capabilityStatus = capabilityStatus;
    this.capabilityStatusDefined = true;
  }

  public CapabilityEventAllOfCapabilityNotificationDto channelCapabilities(
      List<String> channelCapabilities) {
    this.channelCapabilities = channelCapabilities;
    this.channelCapabilitiesDefined = true;
    return this;
  }

  public CapabilityEventAllOfCapabilityNotificationDto addChannelCapabilitiesItem(
      String channelCapabilitiesItem) {
    if (this.channelCapabilities == null) {
      this.channelCapabilities = new ArrayList<>();
    }
    this.channelCapabilitiesDefined = true;
    this.channelCapabilities.add(channelCapabilitiesItem);
    return this;
  }

  /**
   * When capability_status is set to CAPABILITY_PARTIAL, this field includes a list of the
   * supported channel-specific capabilities reported by the channel.
   *
   * @return channelCapabilities
   */
  @JsonProperty(JSON_PROPERTY_CHANNEL_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getChannelCapabilities() {
    return channelCapabilities;
  }

  @JsonIgnore
  public boolean getChannelCapabilitiesDefined() {
    return channelCapabilitiesDefined;
  }

  @JsonProperty(JSON_PROPERTY_CHANNEL_CAPABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelCapabilities(List<String> channelCapabilities) {
    this.channelCapabilities = channelCapabilities;
    this.channelCapabilitiesDefined = true;
  }

  public CapabilityEventAllOfCapabilityNotificationDto reason(ReasonDto reason) {
    this.reason = reason;
    this.reasonDefined = true;
    return this;
  }

  /**
   * Get reason
   *
   * @return reason
   */
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ReasonDto getReason() {
    return reason;
  }

  @JsonIgnore
  public boolean getReasonDefined() {
    return reasonDefined;
  }

  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(ReasonDto reason) {
    this.reason = reason;
    this.reasonDefined = true;
  }

  /** Return true if this CapabilityEvent_allOf_capability_notification object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CapabilityEventAllOfCapabilityNotificationDto capabilityEventAllOfCapabilityNotification =
        (CapabilityEventAllOfCapabilityNotificationDto) o;
    return Objects.equals(this.requestId, capabilityEventAllOfCapabilityNotification.requestId)
        && Objects.equals(this.contactId, capabilityEventAllOfCapabilityNotification.contactId)
        && Objects.equals(this.channel, capabilityEventAllOfCapabilityNotification.channel)
        && Objects.equals(this.identity, capabilityEventAllOfCapabilityNotification.identity)
        && Objects.equals(
            this.capabilityStatus, capabilityEventAllOfCapabilityNotification.capabilityStatus)
        && Objects.equals(
            this.channelCapabilities,
            capabilityEventAllOfCapabilityNotification.channelCapabilities)
        && Objects.equals(this.reason, capabilityEventAllOfCapabilityNotification.reason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        requestId, contactId, channel, identity, capabilityStatus, channelCapabilities, reason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CapabilityEventAllOfCapabilityNotificationDto {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    capabilityStatus: ").append(toIndentedString(capabilityStatus)).append("\n");
    sb.append("    channelCapabilities: ")
        .append(toIndentedString(channelCapabilities))
        .append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
