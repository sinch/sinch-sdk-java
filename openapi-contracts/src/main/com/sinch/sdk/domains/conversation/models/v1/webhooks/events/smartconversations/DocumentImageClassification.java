/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.webhooks.events.smartconversations;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * An object that identifies a document type within the image, along with a confidence level for
 * that document type.
 */
@JsonDeserialize(builder = DocumentImageClassificationImpl.Builder.class)
public interface DocumentImageClassification {

  /**
   * The document type that the analyzed image most likely contains.
   *
   * @return docType
   */
  String getDocType();

  /**
   * The likelihood that the analyzed image contains the assigned document type. 1 is the maximum
   * value, representing the highest likelihood that the analyzed image contains the assigned
   * document type, and 0 is the minimum value, representing the lowest likelihood that the analyzed
   * image contains the assigned document type.
   *
   * @return confidence
   */
  Float getConfidence();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new DocumentImageClassificationImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param docType see getter
     * @return Current builder
     * @see #getDocType
     */
    Builder setDocType(String docType);

    /**
     * see getter
     *
     * @param confidence see getter
     * @return Current builder
     * @see #getConfidence
     */
    Builder setConfidence(Float confidence);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    DocumentImageClassification build();
  }
}
