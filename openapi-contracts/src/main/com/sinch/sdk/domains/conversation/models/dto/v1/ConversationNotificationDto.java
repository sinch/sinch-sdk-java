/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** Object containing the details of the started / stopped / deleted conversation */
@JsonPropertyOrder({ConversationNotificationDto.JSON_PROPERTY_CONVERSATION})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class ConversationNotificationDto {
  public static final String JSON_PROPERTY_CONVERSATION = "conversation";
  private ConversationDto conversation;
  private boolean conversationDefined = false;

  public ConversationNotificationDto() {}

  public ConversationNotificationDto conversation(ConversationDto conversation) {
    this.conversation = conversation;
    this.conversationDefined = true;
    return this;
  }

  /**
   * Get conversation
   *
   * @return conversation
   */
  @JsonProperty(JSON_PROPERTY_CONVERSATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ConversationDto getConversation() {
    return conversation;
  }

  @JsonIgnore
  public boolean getConversationDefined() {
    return conversationDefined;
  }

  @JsonProperty(JSON_PROPERTY_CONVERSATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConversation(ConversationDto conversation) {
    this.conversation = conversation;
    this.conversationDefined = true;
  }

  /** Return true if this ConversationNotification object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationNotificationDto conversationNotification = (ConversationNotificationDto) o;
    return Objects.equals(this.conversation, conversationNotification.conversation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationNotificationDto {\n");
    sb.append("    conversation: ").append(toIndentedString(conversation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
