/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** OpticalCharacterRecognitionDataDto */
@JsonPropertyOrder({OpticalCharacterRecognitionDataDto.JSON_PROPERTY_DATA})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class OpticalCharacterRecognitionDataDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_DATA = "data";
  private List<String> data;
  private boolean dataDefined = false;

  public OpticalCharacterRecognitionDataDto() {}

  public OpticalCharacterRecognitionDataDto data(List<String> data) {
    this.data = data;
    this.dataDefined = true;
    return this;
  }

  public OpticalCharacterRecognitionDataDto addDataItem(String dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<>();
    }
    this.dataDefined = true;
    this.data.add(dataItem);
    return this;
  }

  /**
   * The data array contains the string(s) identified in one section of an analyzed image.
   *
   * @return data
   */
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getData() {
    return data;
  }

  @JsonIgnore
  public boolean getDataDefined() {
    return dataDefined;
  }

  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(List<String> data) {
    this.data = data;
    this.dataDefined = true;
  }

  /** Return true if this OpticalCharacterRecognitionData object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpticalCharacterRecognitionDataDto opticalCharacterRecognitionData =
        (OpticalCharacterRecognitionDataDto) o;
    return Objects.equals(this.data, opticalCharacterRecognitionData.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpticalCharacterRecognitionDataDto {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
