/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.messages;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/** A message component for interactive messages, containing a product. */
@JsonDeserialize(builder = ProductItemImpl.Builder.class)
public interface ProductItem
    extends com.sinch.sdk.domains.conversation.models.v1.messages.types.list.ListItem<ProductItem> {

  /**
   * Required parameter. The ID for the product.
   *
   * @return id
   */
  String getId();

  /**
   * Required parameter. The marketplace to which the product belongs.
   *
   * @return marketplace
   */
  String getMarketplace();

  /**
   * Output only. The quantity of the chosen product.
   *
   * @return quantity
   */
  Integer getQuantity();

  /**
   * Output only. The price for one unit of the chosen product.
   *
   * @return itemPrice
   */
  Float getItemPrice();

  /**
   * Output only. The currency of the item_price.
   *
   * @return currency
   */
  String getCurrency();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new ProductItemImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param id see getter
     * @return Current builder
     * @see #getId
     */
    Builder setId(String id);

    /**
     * see getter
     *
     * @param marketplace see getter
     * @return Current builder
     * @see #getMarketplace
     */
    Builder setMarketplace(String marketplace);

    /**
     * see getter
     *
     * @param quantity see getter
     * @return Current builder
     * @see #getQuantity
     */
    Builder setQuantity(Integer quantity);

    /**
     * see getter
     *
     * @param itemPrice see getter
     * @return Current builder
     * @see #getItemPrice
     */
    Builder setItemPrice(Float itemPrice);

    /**
     * see getter
     *
     * @param currency see getter
     * @return Current builder
     * @see #getCurrency
     */
    Builder setCurrency(String currency);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    ProductItem build();
  }
}
