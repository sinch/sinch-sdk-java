/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** ListWebhooksResponseDto */
@JsonPropertyOrder({ListWebhooksResponseDto.JSON_PROPERTY_WEBHOOKS})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class ListWebhooksResponseDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_WEBHOOKS = "webhooks";
  private List<WebhookDto> webhooks;
  private boolean webhooksDefined = false;

  public ListWebhooksResponseDto() {}

  public ListWebhooksResponseDto webhooks(List<WebhookDto> webhooks) {
    this.webhooks = webhooks;
    this.webhooksDefined = true;
    return this;
  }

  public ListWebhooksResponseDto addWebhooksItem(WebhookDto webhooksItem) {
    if (this.webhooks == null) {
      this.webhooks = new ArrayList<>();
    }
    this.webhooksDefined = true;
    this.webhooks.add(webhooksItem);
    return this;
  }

  /**
   * List of webhooks belonging to a specific project ID and app ID
   *
   * @return webhooks
   */
  @JsonProperty(JSON_PROPERTY_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<WebhookDto> getWebhooks() {
    return webhooks;
  }

  @JsonIgnore
  public boolean getWebhooksDefined() {
    return webhooksDefined;
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhooks(List<WebhookDto> webhooks) {
    this.webhooks = webhooks;
    this.webhooksDefined = true;
  }

  /** Return true if this ListWebhooksResponse object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListWebhooksResponseDto listWebhooksResponse = (ListWebhooksResponseDto) o;
    return Objects.equals(this.webhooks, listWebhooksResponse.webhooks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(webhooks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListWebhooksResponseDto {\n");
    sb.append("    webhooks: ").append(toIndentedString(webhooks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
