/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** RuntimeErrorDto */
@JsonPropertyOrder({
  RuntimeErrorDto.JSON_PROPERTY_CODE,
  RuntimeErrorDto.JSON_PROPERTY_DETAILS,
  RuntimeErrorDto.JSON_PROPERTY_ERROR,
  RuntimeErrorDto.JSON_PROPERTY_MESSAGE,
  RuntimeErrorDto.JSON_PROPERTY_STATUS
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class RuntimeErrorDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_CODE = "code";
  private Integer code;
  private boolean codeDefined = false;

  public static final String JSON_PROPERTY_DETAILS = "details";
  private List<ProtobufAnyDto> details;
  private boolean detailsDefined = false;

  public static final String JSON_PROPERTY_ERROR = "error";
  private String error;
  private boolean errorDefined = false;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;
  private boolean messageDefined = false;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;
  private boolean statusDefined = false;

  public RuntimeErrorDto() {}

  public RuntimeErrorDto code(Integer code) {
    this.code = code;
    this.codeDefined = true;
    return this;
  }

  /**
   * Get code
   *
   * @return code
   */
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getCode() {
    return code;
  }

  @JsonIgnore
  public boolean getCodeDefined() {
    return codeDefined;
  }

  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(Integer code) {
    this.code = code;
    this.codeDefined = true;
  }

  public RuntimeErrorDto details(List<ProtobufAnyDto> details) {
    this.details = details;
    this.detailsDefined = true;
    return this;
  }

  public RuntimeErrorDto addDetailsItem(ProtobufAnyDto detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.detailsDefined = true;
    this.details.add(detailsItem);
    return this;
  }

  /**
   * Get details
   *
   * @return details
   */
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ProtobufAnyDto> getDetails() {
    return details;
  }

  @JsonIgnore
  public boolean getDetailsDefined() {
    return detailsDefined;
  }

  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(List<ProtobufAnyDto> details) {
    this.details = details;
    this.detailsDefined = true;
  }

  public RuntimeErrorDto error(String error) {
    this.error = error;
    this.errorDefined = true;
    return this;
  }

  /**
   * Get error
   *
   * @return error
   */
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getError() {
    return error;
  }

  @JsonIgnore
  public boolean getErrorDefined() {
    return errorDefined;
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(String error) {
    this.error = error;
    this.errorDefined = true;
  }

  public RuntimeErrorDto message(String message) {
    this.message = message;
    this.messageDefined = true;
    return this;
  }

  /**
   * Get message
   *
   * @return message
   */
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMessage() {
    return message;
  }

  @JsonIgnore
  public boolean getMessageDefined() {
    return messageDefined;
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
    this.messageDefined = true;
  }

  public RuntimeErrorDto status(String status) {
    this.status = status;
    this.statusDefined = true;
    return this;
  }

  /**
   * Get status
   *
   * @return status
   */
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStatus() {
    return status;
  }

  @JsonIgnore
  public boolean getStatusDefined() {
    return statusDefined;
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
    this.statusDefined = true;
  }

  /** Return true if this runtimeError object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuntimeErrorDto runtimeError = (RuntimeErrorDto) o;
    return Objects.equals(this.code, runtimeError.code)
        && Objects.equals(this.details, runtimeError.details)
        && Objects.equals(this.error, runtimeError.error)
        && Objects.equals(this.message, runtimeError.message)
        && Objects.equals(this.status, runtimeError.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, details, error, message, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuntimeErrorDto {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
