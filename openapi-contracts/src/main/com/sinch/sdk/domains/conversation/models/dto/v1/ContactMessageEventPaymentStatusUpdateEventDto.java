/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Objects;

/** Object reflecting the current state of a particular payment flow. */
@JsonPropertyOrder({
  ContactMessageEventPaymentStatusUpdateEventDto.JSON_PROPERTY_REFERENCE_ID,
  ContactMessageEventPaymentStatusUpdateEventDto.JSON_PROPERTY_PAYMENT_STATUS,
  ContactMessageEventPaymentStatusUpdateEventDto.JSON_PROPERTY_PAYMENT_TRANSACTION_STATUS,
  ContactMessageEventPaymentStatusUpdateEventDto.JSON_PROPERTY_PAYMENT_TRANSACTION_ID
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class ContactMessageEventPaymentStatusUpdateEventDto {
  public static final String JSON_PROPERTY_REFERENCE_ID = "reference_id";
  private String referenceId;
  private boolean referenceIdDefined = false;

  /** The stage the payment has reached within the payment flow. */
  public enum PaymentStatusEnum {
    UNKNOWN("PAYMENT_STATUS_UNKNOWN"),

    NEW("PAYMENT_STATUS_NEW"),

    PENDING("PAYMENT_STATUS_PENDING"),

    CAPTURED("PAYMENT_STATUS_CAPTURED"),

    CANCELED("PAYMENT_STATUS_CANCELED"),

    FAILED("PAYMENT_STATUS_FAILED"),

    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    PaymentStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PaymentStatusEnum fromValue(String value) {
      for (PaymentStatusEnum b : PaymentStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_PAYMENT_STATUS = "payment_status";
  private String paymentStatus;
  private boolean paymentStatusDefined = false;

  /** The status of the stage detailed in payment_status. */
  public enum PaymentTransactionStatusEnum {
    UNKNOWN("PAYMENT_STATUS_TRANSACTION_UNKNOWN"),

    PENDING("PAYMENT_STATUS_TRANSACTION_PENDING"),

    FAILED("PAYMENT_STATUS_TRANSACTION_FAILED"),

    SUCCESS("PAYMENT_STATUS_TRANSACTION_SUCCESS"),

    CANCELED("PAYMENT_STATUS_TRANSACTION_CANCELED"),

    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    PaymentTransactionStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PaymentTransactionStatusEnum fromValue(String value) {
      for (PaymentTransactionStatusEnum b : PaymentTransactionStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_PAYMENT_TRANSACTION_STATUS =
      "payment_transaction_status";
  private String paymentTransactionStatus;
  private boolean paymentTransactionStatusDefined = false;

  public static final String JSON_PROPERTY_PAYMENT_TRANSACTION_ID = "payment_transaction_id";
  private String paymentTransactionId;
  private boolean paymentTransactionIdDefined = false;

  public ContactMessageEventPaymentStatusUpdateEventDto() {}

  public ContactMessageEventPaymentStatusUpdateEventDto referenceId(String referenceId) {
    this.referenceId = referenceId;
    this.referenceIdDefined = true;
    return this;
  }

  /**
   * Unique identifier for the corresponding payment of a particular order.
   *
   * @return referenceId
   */
  @JsonProperty(JSON_PROPERTY_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getReferenceId() {
    return referenceId;
  }

  @JsonIgnore
  public boolean getReferenceIdDefined() {
    return referenceIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
    this.referenceIdDefined = true;
  }

  public ContactMessageEventPaymentStatusUpdateEventDto paymentStatus(String paymentStatus) {
    this.paymentStatus = paymentStatus;
    this.paymentStatusDefined = true;
    return this;
  }

  /**
   * The stage the payment has reached within the payment flow.
   *
   * @return paymentStatus
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentStatus() {
    return paymentStatus;
  }

  @JsonIgnore
  public boolean getPaymentStatusDefined() {
    return paymentStatusDefined;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentStatus(String paymentStatus) {
    this.paymentStatus = paymentStatus;
    this.paymentStatusDefined = true;
  }

  public ContactMessageEventPaymentStatusUpdateEventDto paymentTransactionStatus(
      String paymentTransactionStatus) {
    this.paymentTransactionStatus = paymentTransactionStatus;
    this.paymentTransactionStatusDefined = true;
    return this;
  }

  /**
   * The status of the stage detailed in payment_status.
   *
   * @return paymentTransactionStatus
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_TRANSACTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentTransactionStatus() {
    return paymentTransactionStatus;
  }

  @JsonIgnore
  public boolean getPaymentTransactionStatusDefined() {
    return paymentTransactionStatusDefined;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_TRANSACTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentTransactionStatus(String paymentTransactionStatus) {
    this.paymentTransactionStatus = paymentTransactionStatus;
    this.paymentTransactionStatusDefined = true;
  }

  public ContactMessageEventPaymentStatusUpdateEventDto paymentTransactionId(
      String paymentTransactionId) {
    this.paymentTransactionId = paymentTransactionId;
    this.paymentTransactionIdDefined = true;
    return this;
  }

  /**
   * Unique identifier of the payment_transaction_status.
   *
   * @return paymentTransactionId
   */
  @JsonProperty(JSON_PROPERTY_PAYMENT_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentTransactionId() {
    return paymentTransactionId;
  }

  @JsonIgnore
  public boolean getPaymentTransactionIdDefined() {
    return paymentTransactionIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_PAYMENT_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentTransactionId(String paymentTransactionId) {
    this.paymentTransactionId = paymentTransactionId;
    this.paymentTransactionIdDefined = true;
  }

  /** Return true if this ContactMessageEvent_payment_status_update_event object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactMessageEventPaymentStatusUpdateEventDto contactMessageEventPaymentStatusUpdateEvent =
        (ContactMessageEventPaymentStatusUpdateEventDto) o;
    return Objects.equals(this.referenceId, contactMessageEventPaymentStatusUpdateEvent.referenceId)
        && Objects.equals(
            this.paymentStatus, contactMessageEventPaymentStatusUpdateEvent.paymentStatus)
        && Objects.equals(
            this.paymentTransactionStatus,
            contactMessageEventPaymentStatusUpdateEvent.paymentTransactionStatus)
        && Objects.equals(
            this.paymentTransactionId,
            contactMessageEventPaymentStatusUpdateEvent.paymentTransactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceId, paymentStatus, paymentTransactionStatus, paymentTransactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactMessageEventPaymentStatusUpdateEventDto {\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    paymentStatus: ").append(toIndentedString(paymentStatus)).append("\n");
    sb.append("    paymentTransactionStatus: ")
        .append(toIndentedString(paymentTransactionStatus))
        .append("\n");
    sb.append("    paymentTransactionId: ")
        .append(toIndentedString(paymentTransactionId))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
