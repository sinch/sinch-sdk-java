/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** Message originating from an app */
@JsonPropertyOrder({
  AppMessageDto.JSON_PROPERTY_CARD_MESSAGE,
  AppMessageDto.JSON_PROPERTY_CAROUSEL_MESSAGE,
  AppMessageDto.JSON_PROPERTY_CHOICE_MESSAGE,
  AppMessageDto.JSON_PROPERTY_LOCATION_MESSAGE,
  AppMessageDto.JSON_PROPERTY_MEDIA_MESSAGE,
  AppMessageDto.JSON_PROPERTY_TEMPLATE_MESSAGE,
  AppMessageDto.JSON_PROPERTY_TEXT_MESSAGE,
  AppMessageDto.JSON_PROPERTY_LIST_MESSAGE,
  AppMessageDto.JSON_PROPERTY_EXPLICIT_CHANNEL_MESSAGE,
  AppMessageDto.JSON_PROPERTY_ADDITIONAL_PROPERTIES,
  AppMessageDto.JSON_PROPERTY_AGENT,
  AppMessageDto.JSON_PROPERTY_EXPLICIT_CHANNEL_OMNI_MESSAGE
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class AppMessageDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_CARD_MESSAGE = "card_message";
  private CardMessageCardMessageDto cardMessage;
  private boolean cardMessageDefined = false;

  public static final String JSON_PROPERTY_CAROUSEL_MESSAGE = "carousel_message";
  private CarouselMessageCarouselMessageDto carouselMessage;
  private boolean carouselMessageDefined = false;

  public static final String JSON_PROPERTY_CHOICE_MESSAGE = "choice_message";
  private ChoiceMessageChoiceMessageDto choiceMessage;
  private boolean choiceMessageDefined = false;

  public static final String JSON_PROPERTY_LOCATION_MESSAGE = "location_message";
  private LocationMessageLocationMessageDto locationMessage;
  private boolean locationMessageDefined = false;

  public static final String JSON_PROPERTY_MEDIA_MESSAGE = "media_message";
  private MediaMessageMediaMessageDto mediaMessage;
  private boolean mediaMessageDefined = false;

  public static final String JSON_PROPERTY_TEMPLATE_MESSAGE = "template_message";
  private TemplateMessageTemplateMessageDto templateMessage;
  private boolean templateMessageDefined = false;

  public static final String JSON_PROPERTY_TEXT_MESSAGE = "text_message";
  private TextMessageTextMessageDto textMessage;
  private boolean textMessageDefined = false;

  public static final String JSON_PROPERTY_LIST_MESSAGE = "list_message";
  private ListMessageListMessageDto listMessage;
  private boolean listMessageDefined = false;

  public static final String JSON_PROPERTY_EXPLICIT_CHANNEL_MESSAGE = "explicit_channel_message";
  private Object explicitChannelMessage;
  private boolean explicitChannelMessageDefined = false;

  public static final String JSON_PROPERTY_ADDITIONAL_PROPERTIES = "additionalProperties";
  private AppMessageCommonPropsAdditionalPropertiesDto additionalProperties;
  private boolean additionalPropertiesDefined = false;

  public static final String JSON_PROPERTY_AGENT = "agent";
  private AgentDto agent;
  private boolean agentDefined = false;

  public static final String JSON_PROPERTY_EXPLICIT_CHANNEL_OMNI_MESSAGE =
      "explicit_channel_omni_message";
  private Object explicitChannelOmniMessage;
  private boolean explicitChannelOmniMessageDefined = false;

  public AppMessageDto() {}

  public AppMessageDto cardMessage(CardMessageCardMessageDto cardMessage) {
    this.cardMessage = cardMessage;
    this.cardMessageDefined = true;
    return this;
  }

  /**
   * Get cardMessage
   *
   * @return cardMessage
   */
  @JsonProperty(JSON_PROPERTY_CARD_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CardMessageCardMessageDto getCardMessage() {
    return cardMessage;
  }

  @JsonIgnore
  public boolean getCardMessageDefined() {
    return cardMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_CARD_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardMessage(CardMessageCardMessageDto cardMessage) {
    this.cardMessage = cardMessage;
    this.cardMessageDefined = true;
  }

  public AppMessageDto carouselMessage(CarouselMessageCarouselMessageDto carouselMessage) {
    this.carouselMessage = carouselMessage;
    this.carouselMessageDefined = true;
    return this;
  }

  /**
   * Get carouselMessage
   *
   * @return carouselMessage
   */
  @JsonProperty(JSON_PROPERTY_CAROUSEL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CarouselMessageCarouselMessageDto getCarouselMessage() {
    return carouselMessage;
  }

  @JsonIgnore
  public boolean getCarouselMessageDefined() {
    return carouselMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_CAROUSEL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCarouselMessage(CarouselMessageCarouselMessageDto carouselMessage) {
    this.carouselMessage = carouselMessage;
    this.carouselMessageDefined = true;
  }

  public AppMessageDto choiceMessage(ChoiceMessageChoiceMessageDto choiceMessage) {
    this.choiceMessage = choiceMessage;
    this.choiceMessageDefined = true;
    return this;
  }

  /**
   * Get choiceMessage
   *
   * @return choiceMessage
   */
  @JsonProperty(JSON_PROPERTY_CHOICE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ChoiceMessageChoiceMessageDto getChoiceMessage() {
    return choiceMessage;
  }

  @JsonIgnore
  public boolean getChoiceMessageDefined() {
    return choiceMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_CHOICE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChoiceMessage(ChoiceMessageChoiceMessageDto choiceMessage) {
    this.choiceMessage = choiceMessage;
    this.choiceMessageDefined = true;
  }

  public AppMessageDto locationMessage(LocationMessageLocationMessageDto locationMessage) {
    this.locationMessage = locationMessage;
    this.locationMessageDefined = true;
    return this;
  }

  /**
   * Get locationMessage
   *
   * @return locationMessage
   */
  @JsonProperty(JSON_PROPERTY_LOCATION_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LocationMessageLocationMessageDto getLocationMessage() {
    return locationMessage;
  }

  @JsonIgnore
  public boolean getLocationMessageDefined() {
    return locationMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_LOCATION_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationMessage(LocationMessageLocationMessageDto locationMessage) {
    this.locationMessage = locationMessage;
    this.locationMessageDefined = true;
  }

  public AppMessageDto mediaMessage(MediaMessageMediaMessageDto mediaMessage) {
    this.mediaMessage = mediaMessage;
    this.mediaMessageDefined = true;
    return this;
  }

  /**
   * Get mediaMessage
   *
   * @return mediaMessage
   */
  @JsonProperty(JSON_PROPERTY_MEDIA_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MediaMessageMediaMessageDto getMediaMessage() {
    return mediaMessage;
  }

  @JsonIgnore
  public boolean getMediaMessageDefined() {
    return mediaMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_MEDIA_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediaMessage(MediaMessageMediaMessageDto mediaMessage) {
    this.mediaMessage = mediaMessage;
    this.mediaMessageDefined = true;
  }

  public AppMessageDto templateMessage(TemplateMessageTemplateMessageDto templateMessage) {
    this.templateMessage = templateMessage;
    this.templateMessageDefined = true;
    return this;
  }

  /**
   * Get templateMessage
   *
   * @return templateMessage
   */
  @JsonProperty(JSON_PROPERTY_TEMPLATE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TemplateMessageTemplateMessageDto getTemplateMessage() {
    return templateMessage;
  }

  @JsonIgnore
  public boolean getTemplateMessageDefined() {
    return templateMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_TEMPLATE_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplateMessage(TemplateMessageTemplateMessageDto templateMessage) {
    this.templateMessage = templateMessage;
    this.templateMessageDefined = true;
  }

  public AppMessageDto textMessage(TextMessageTextMessageDto textMessage) {
    this.textMessage = textMessage;
    this.textMessageDefined = true;
    return this;
  }

  /**
   * Get textMessage
   *
   * @return textMessage
   */
  @JsonProperty(JSON_PROPERTY_TEXT_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TextMessageTextMessageDto getTextMessage() {
    return textMessage;
  }

  @JsonIgnore
  public boolean getTextMessageDefined() {
    return textMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_TEXT_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextMessage(TextMessageTextMessageDto textMessage) {
    this.textMessage = textMessage;
    this.textMessageDefined = true;
  }

  public AppMessageDto listMessage(ListMessageListMessageDto listMessage) {
    this.listMessage = listMessage;
    this.listMessageDefined = true;
    return this;
  }

  /**
   * Get listMessage
   *
   * @return listMessage
   */
  @JsonProperty(JSON_PROPERTY_LIST_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ListMessageListMessageDto getListMessage() {
    return listMessage;
  }

  @JsonIgnore
  public boolean getListMessageDefined() {
    return listMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_LIST_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setListMessage(ListMessageListMessageDto listMessage) {
    this.listMessage = listMessage;
    this.listMessageDefined = true;
  }

  public AppMessageDto explicitChannelMessage(Object explicitChannelMessage) {
    this.explicitChannelMessage = explicitChannelMessage;
    this.explicitChannelMessageDefined = true;
    return this;
  }

  /**
   * Optional. Channel specific messages, overriding any transcoding. The key in the map must point
   * to a valid conversation channel as defined by the enum ConversationChannel.
   *
   * @return explicitChannelMessage
   */
  @JsonProperty(JSON_PROPERTY_EXPLICIT_CHANNEL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getExplicitChannelMessage() {
    return explicitChannelMessage;
  }

  @JsonIgnore
  public boolean getExplicitChannelMessageDefined() {
    return explicitChannelMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_EXPLICIT_CHANNEL_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExplicitChannelMessage(Object explicitChannelMessage) {
    this.explicitChannelMessage = explicitChannelMessage;
    this.explicitChannelMessageDefined = true;
  }

  public AppMessageDto additionalProperties(
      AppMessageCommonPropsAdditionalPropertiesDto additionalProperties) {
    this.additionalProperties = additionalProperties;
    this.additionalPropertiesDefined = true;
    return this;
  }

  /**
   * Get additionalProperties
   *
   * @return additionalProperties
   */
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AppMessageCommonPropsAdditionalPropertiesDto getAdditionalProperties() {
    return additionalProperties;
  }

  @JsonIgnore
  public boolean getAdditionalPropertiesDefined() {
    return additionalPropertiesDefined;
  }

  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalProperties(
      AppMessageCommonPropsAdditionalPropertiesDto additionalProperties) {
    this.additionalProperties = additionalProperties;
    this.additionalPropertiesDefined = true;
  }

  public AppMessageDto agent(AgentDto agent) {
    this.agent = agent;
    this.agentDefined = true;
    return this;
  }

  /**
   * Get agent
   *
   * @return agent
   */
  @JsonProperty(JSON_PROPERTY_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AgentDto getAgent() {
    return agent;
  }

  @JsonIgnore
  public boolean getAgentDefined() {
    return agentDefined;
  }

  @JsonProperty(JSON_PROPERTY_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgent(AgentDto agent) {
    this.agent = agent;
    this.agentDefined = true;
  }

  public AppMessageDto explicitChannelOmniMessage(Object explicitChannelOmniMessage) {
    this.explicitChannelOmniMessage = explicitChannelOmniMessage;
    this.explicitChannelOmniMessageDefined = true;
    return this;
  }

  /**
   * TBC: Not documented
   *
   * @return explicitChannelOmniMessage
   */
  @JsonProperty(JSON_PROPERTY_EXPLICIT_CHANNEL_OMNI_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getExplicitChannelOmniMessage() {
    return explicitChannelOmniMessage;
  }

  @JsonIgnore
  public boolean getExplicitChannelOmniMessageDefined() {
    return explicitChannelOmniMessageDefined;
  }

  @JsonProperty(JSON_PROPERTY_EXPLICIT_CHANNEL_OMNI_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExplicitChannelOmniMessage(Object explicitChannelOmniMessage) {
    this.explicitChannelOmniMessage = explicitChannelOmniMessage;
    this.explicitChannelOmniMessageDefined = true;
  }

  /** Return true if this AppMessage object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppMessageDto appMessage = (AppMessageDto) o;
    return Objects.equals(this.cardMessage, appMessage.cardMessage)
        && Objects.equals(this.carouselMessage, appMessage.carouselMessage)
        && Objects.equals(this.choiceMessage, appMessage.choiceMessage)
        && Objects.equals(this.locationMessage, appMessage.locationMessage)
        && Objects.equals(this.mediaMessage, appMessage.mediaMessage)
        && Objects.equals(this.templateMessage, appMessage.templateMessage)
        && Objects.equals(this.textMessage, appMessage.textMessage)
        && Objects.equals(this.listMessage, appMessage.listMessage)
        && Objects.equals(this.explicitChannelMessage, appMessage.explicitChannelMessage)
        && Objects.equals(this.additionalProperties, appMessage.additionalProperties)
        && Objects.equals(this.agent, appMessage.agent)
        && Objects.equals(this.explicitChannelOmniMessage, appMessage.explicitChannelOmniMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        cardMessage,
        carouselMessage,
        choiceMessage,
        locationMessage,
        mediaMessage,
        templateMessage,
        textMessage,
        listMessage,
        explicitChannelMessage,
        additionalProperties,
        agent,
        explicitChannelOmniMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppMessageDto {\n");
    sb.append("    cardMessage: ").append(toIndentedString(cardMessage)).append("\n");
    sb.append("    carouselMessage: ").append(toIndentedString(carouselMessage)).append("\n");
    sb.append("    choiceMessage: ").append(toIndentedString(choiceMessage)).append("\n");
    sb.append("    locationMessage: ").append(toIndentedString(locationMessage)).append("\n");
    sb.append("    mediaMessage: ").append(toIndentedString(mediaMessage)).append("\n");
    sb.append("    templateMessage: ").append(toIndentedString(templateMessage)).append("\n");
    sb.append("    textMessage: ").append(toIndentedString(textMessage)).append("\n");
    sb.append("    listMessage: ").append(toIndentedString(listMessage)).append("\n");
    sb.append("    explicitChannelMessage: ")
        .append(toIndentedString(explicitChannelMessage))
        .append("\n");
    sb.append("    additionalProperties: ")
        .append(toIndentedString(additionalProperties))
        .append("\n");
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    explicitChannelOmniMessage: ")
        .append(toIndentedString(explicitChannelOmniMessage))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
