/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** IdentifiedByDto */
@JsonPropertyOrder({IdentifiedByDto.JSON_PROPERTY_IDENTIFIED_BY})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class IdentifiedByDto {
  public static final String JSON_PROPERTY_IDENTIFIED_BY = "identified_by";
  private IdentifiedByDto identifiedBy;
  private boolean identifiedByDefined = false;

  public IdentifiedByDto() {}

  public IdentifiedByDto identifiedBy(IdentifiedByDto identifiedBy) {
    this.identifiedBy = identifiedBy;
    this.identifiedByDefined = true;
    return this;
  }

  /**
   * Get identifiedBy
   *
   * @return identifiedBy
   */
  @JsonProperty(JSON_PROPERTY_IDENTIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public IdentifiedByDto getIdentifiedBy() {
    return identifiedBy;
  }

  @JsonIgnore
  public boolean getIdentifiedByDefined() {
    return identifiedByDefined;
  }

  @JsonProperty(JSON_PROPERTY_IDENTIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifiedBy(IdentifiedByDto identifiedBy) {
    this.identifiedBy = identifiedBy;
    this.identifiedByDefined = true;
  }

  /** Return true if this identified_by object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentifiedByDto identifiedBy = (IdentifiedByDto) o;
    return Objects.equals(this.identifiedBy, identifiedBy.identifiedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifiedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentifiedByDto {\n");
    sb.append("    identifiedBy: ").append(toIndentedString(identifiedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
