/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * The analysis provided by the Smart Conversations machine learning engine(s). The contents of the
 * object are determined by the functionalities that are enabled for your solution.
 */
@JsonPropertyOrder({
  AnalysisResultDto.JSON_PROPERTY_ML_SENTIMENT_RESULT,
  AnalysisResultDto.JSON_PROPERTY_ML_NLU_RESULT,
  AnalysisResultDto.JSON_PROPERTY_ML_IMAGE_RECOGNITION_RESULT,
  AnalysisResultDto.JSON_PROPERTY_ML_PII_RESULT,
  AnalysisResultDto.JSON_PROPERTY_ML_OFFENSIVE_ANALYSIS_RESULT
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class AnalysisResultDto {
  public static final String JSON_PROPERTY_ML_SENTIMENT_RESULT = "ml_sentiment_result";
  private List<MachineLearningSentimentResultDto> mlSentimentResult;
  private boolean mlSentimentResultDefined = false;

  public static final String JSON_PROPERTY_ML_NLU_RESULT = "ml_nlu_result";
  private List<MachineLearningNLUResultDto> mlNluResult;
  private boolean mlNluResultDefined = false;

  public static final String JSON_PROPERTY_ML_IMAGE_RECOGNITION_RESULT =
      "ml_image_recognition_result";
  private List<MachineLearningImageRecognitionResultDto> mlImageRecognitionResult;
  private boolean mlImageRecognitionResultDefined = false;

  public static final String JSON_PROPERTY_ML_PII_RESULT = "ml_pii_result";
  private List<MachineLearningPIIResultDto> mlPiiResult;
  private boolean mlPiiResultDefined = false;

  public static final String JSON_PROPERTY_ML_OFFENSIVE_ANALYSIS_RESULT =
      "ml_offensive_analysis_result";
  private List<OffensiveAnalysisDto> mlOffensiveAnalysisResult;
  private boolean mlOffensiveAnalysisResultDefined = false;

  public AnalysisResultDto() {}

  public AnalysisResultDto mlSentimentResult(
      List<MachineLearningSentimentResultDto> mlSentimentResult) {
    this.mlSentimentResult = mlSentimentResult;
    this.mlSentimentResultDefined = true;
    return this;
  }

  public AnalysisResultDto addMlSentimentResultItem(
      MachineLearningSentimentResultDto mlSentimentResultItem) {
    if (this.mlSentimentResult == null) {
      this.mlSentimentResult = new ArrayList<>();
    }
    this.mlSentimentResultDefined = true;
    this.mlSentimentResult.add(mlSentimentResultItem);
    return this;
  }

  /**
   * An array that contains the analyses of the sentiments of the corresponding messages.
   *
   * @return mlSentimentResult
   */
  @JsonProperty(JSON_PROPERTY_ML_SENTIMENT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<MachineLearningSentimentResultDto> getMlSentimentResult() {
    return mlSentimentResult;
  }

  @JsonIgnore
  public boolean getMlSentimentResultDefined() {
    return mlSentimentResultDefined;
  }

  @JsonProperty(JSON_PROPERTY_ML_SENTIMENT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMlSentimentResult(List<MachineLearningSentimentResultDto> mlSentimentResult) {
    this.mlSentimentResult = mlSentimentResult;
    this.mlSentimentResultDefined = true;
  }

  public AnalysisResultDto mlNluResult(List<MachineLearningNLUResultDto> mlNluResult) {
    this.mlNluResult = mlNluResult;
    this.mlNluResultDefined = true;
    return this;
  }

  public AnalysisResultDto addMlNluResultItem(MachineLearningNLUResultDto mlNluResultItem) {
    if (this.mlNluResult == null) {
      this.mlNluResult = new ArrayList<>();
    }
    this.mlNluResultDefined = true;
    this.mlNluResult.add(mlNluResultItem);
    return this;
  }

  /**
   * An array that contains the analyses of the intentions of, and entities within, the
   * corresponding messages.
   *
   * @return mlNluResult
   */
  @JsonProperty(JSON_PROPERTY_ML_NLU_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<MachineLearningNLUResultDto> getMlNluResult() {
    return mlNluResult;
  }

  @JsonIgnore
  public boolean getMlNluResultDefined() {
    return mlNluResultDefined;
  }

  @JsonProperty(JSON_PROPERTY_ML_NLU_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMlNluResult(List<MachineLearningNLUResultDto> mlNluResult) {
    this.mlNluResult = mlNluResult;
    this.mlNluResultDefined = true;
  }

  public AnalysisResultDto mlImageRecognitionResult(
      List<MachineLearningImageRecognitionResultDto> mlImageRecognitionResult) {
    this.mlImageRecognitionResult = mlImageRecognitionResult;
    this.mlImageRecognitionResultDefined = true;
    return this;
  }

  public AnalysisResultDto addMlImageRecognitionResultItem(
      MachineLearningImageRecognitionResultDto mlImageRecognitionResultItem) {
    if (this.mlImageRecognitionResult == null) {
      this.mlImageRecognitionResult = new ArrayList<>();
    }
    this.mlImageRecognitionResultDefined = true;
    this.mlImageRecognitionResult.add(mlImageRecognitionResultItem);
    return this;
  }

  /**
   * An array that contains the image recognition analyses of the images identified in the
   * corresponding messages.
   *
   * @return mlImageRecognitionResult
   */
  @JsonProperty(JSON_PROPERTY_ML_IMAGE_RECOGNITION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<MachineLearningImageRecognitionResultDto> getMlImageRecognitionResult() {
    return mlImageRecognitionResult;
  }

  @JsonIgnore
  public boolean getMlImageRecognitionResultDefined() {
    return mlImageRecognitionResultDefined;
  }

  @JsonProperty(JSON_PROPERTY_ML_IMAGE_RECOGNITION_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMlImageRecognitionResult(
      List<MachineLearningImageRecognitionResultDto> mlImageRecognitionResult) {
    this.mlImageRecognitionResult = mlImageRecognitionResult;
    this.mlImageRecognitionResultDefined = true;
  }

  public AnalysisResultDto mlPiiResult(List<MachineLearningPIIResultDto> mlPiiResult) {
    this.mlPiiResult = mlPiiResult;
    this.mlPiiResultDefined = true;
    return this;
  }

  public AnalysisResultDto addMlPiiResultItem(MachineLearningPIIResultDto mlPiiResultItem) {
    if (this.mlPiiResult == null) {
      this.mlPiiResult = new ArrayList<>();
    }
    this.mlPiiResultDefined = true;
    this.mlPiiResult.add(mlPiiResultItem);
    return this;
  }

  /**
   * An array that contains the PII analysis of the corresponding messages.
   *
   * @return mlPiiResult
   */
  @JsonProperty(JSON_PROPERTY_ML_PII_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<MachineLearningPIIResultDto> getMlPiiResult() {
    return mlPiiResult;
  }

  @JsonIgnore
  public boolean getMlPiiResultDefined() {
    return mlPiiResultDefined;
  }

  @JsonProperty(JSON_PROPERTY_ML_PII_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMlPiiResult(List<MachineLearningPIIResultDto> mlPiiResult) {
    this.mlPiiResult = mlPiiResult;
    this.mlPiiResultDefined = true;
  }

  public AnalysisResultDto mlOffensiveAnalysisResult(
      List<OffensiveAnalysisDto> mlOffensiveAnalysisResult) {
    this.mlOffensiveAnalysisResult = mlOffensiveAnalysisResult;
    this.mlOffensiveAnalysisResultDefined = true;
    return this;
  }

  public AnalysisResultDto addMlOffensiveAnalysisResultItem(
      OffensiveAnalysisDto mlOffensiveAnalysisResultItem) {
    if (this.mlOffensiveAnalysisResult == null) {
      this.mlOffensiveAnalysisResult = new ArrayList<>();
    }
    this.mlOffensiveAnalysisResultDefined = true;
    this.mlOffensiveAnalysisResult.add(mlOffensiveAnalysisResultItem);
    return this;
  }

  /**
   * An array that contains the analyses of the offenses of the corresponding messages.
   *
   * @return mlOffensiveAnalysisResult
   */
  @JsonProperty(JSON_PROPERTY_ML_OFFENSIVE_ANALYSIS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<OffensiveAnalysisDto> getMlOffensiveAnalysisResult() {
    return mlOffensiveAnalysisResult;
  }

  @JsonIgnore
  public boolean getMlOffensiveAnalysisResultDefined() {
    return mlOffensiveAnalysisResultDefined;
  }

  @JsonProperty(JSON_PROPERTY_ML_OFFENSIVE_ANALYSIS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMlOffensiveAnalysisResult(List<OffensiveAnalysisDto> mlOffensiveAnalysisResult) {
    this.mlOffensiveAnalysisResult = mlOffensiveAnalysisResult;
    this.mlOffensiveAnalysisResultDefined = true;
  }

  /** Return true if this AnalysisResult object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnalysisResultDto analysisResult = (AnalysisResultDto) o;
    return Objects.equals(this.mlSentimentResult, analysisResult.mlSentimentResult)
        && Objects.equals(this.mlNluResult, analysisResult.mlNluResult)
        && Objects.equals(this.mlImageRecognitionResult, analysisResult.mlImageRecognitionResult)
        && Objects.equals(this.mlPiiResult, analysisResult.mlPiiResult)
        && Objects.equals(this.mlOffensiveAnalysisResult, analysisResult.mlOffensiveAnalysisResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        mlSentimentResult,
        mlNluResult,
        mlImageRecognitionResult,
        mlPiiResult,
        mlOffensiveAnalysisResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnalysisResultDto {\n");
    sb.append("    mlSentimentResult: ").append(toIndentedString(mlSentimentResult)).append("\n");
    sb.append("    mlNluResult: ").append(toIndentedString(mlNluResult)).append("\n");
    sb.append("    mlImageRecognitionResult: ")
        .append(toIndentedString(mlImageRecognitionResult))
        .append("\n");
    sb.append("    mlPiiResult: ").append(toIndentedString(mlPiiResult)).append("\n");
    sb.append("    mlOffensiveAnalysisResult: ")
        .append(toIndentedString(mlOffensiveAnalysisResult))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
