/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.credentials;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.domains.conversation.models.v1.ConversationChannel;

/** declaration */
@JsonDeserialize(builder = ChannelCredentialCommonTypesImpl.Builder.class)
public interface ChannelCredentialCommonTypes {

  /**
   * The secret used to verify the channel callbacks for channels which support callback
   * verification. The callback verification is not needed for Sinch-managed channels because the
   * callbacks are not leaving Sinch internal networks. Max length is 256 characters. Note: leaving
   * channel_callback_secret empty for channels with callback verification will disable the
   * verification.
   *
   * @return callbackSecret
   */
  String getCallbackSecret();

  /**
   * Get channel
   *
   * @return channel
   */
  ConversationChannel getChannel();

  /**
   * Get state
   *
   * @return state
   */
  ChannelIntegrationState getState();

  /**
   * Additional identifier set by the channel that represents an specific id used by the channel.
   *
   * @return channelKnownId
   */
  String getChannelKnownId();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new ChannelCredentialCommonTypesImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param callbackSecret see getter
     * @return Current builder
     * @see #getCallbackSecret
     */
    Builder setCallbackSecret(String callbackSecret);

    /**
     * see getter
     *
     * @param channel see getter
     * @return Current builder
     * @see #getChannel
     */
    Builder setChannel(ConversationChannel channel);

    /**
     * see getter
     *
     * @param state see getter
     * @return Current builder
     * @see #getState
     */
    Builder setState(ChannelIntegrationState state);

    /**
     * see getter
     *
     * @param channelKnownId see getter
     * @return Current builder
     * @see #getChannelKnownId
     */
    Builder setChannelKnownId(String channelKnownId);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    ChannelCredentialCommonTypes build();
  }
}
