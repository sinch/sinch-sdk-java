/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** The request sent to the API endpoint to create a new app. */
@JsonPropertyOrder({
  AppCreateRequestDto.JSON_PROPERTY_CHANNEL_CREDENTIALS,
  AppCreateRequestDto.JSON_PROPERTY_DISPLAY_NAME,
  AppCreateRequestDto.JSON_PROPERTY_CONVERSATION_METADATA_REPORT_VIEW,
  AppCreateRequestDto.JSON_PROPERTY_RETENTION_POLICY,
  AppCreateRequestDto.JSON_PROPERTY_DISPATCH_RETENTION_POLICY,
  AppCreateRequestDto.JSON_PROPERTY_PROCESSING_MODE,
  AppCreateRequestDto.JSON_PROPERTY_SMART_CONVERSATION,
  AppCreateRequestDto.JSON_PROPERTY_CALLBACK_SETTINGS
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class AppCreateRequestDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_CHANNEL_CREDENTIALS = "channel_credentials";
  private List<ConversationChannelCredentialDto> channelCredentials;
  private boolean channelCredentialsDefined = false;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "display_name";
  private String displayName;
  private boolean displayNameDefined = false;

  public static final String JSON_PROPERTY_CONVERSATION_METADATA_REPORT_VIEW =
      "conversation_metadata_report_view";
  private ConversationMetadataReportViewDto conversationMetadataReportView;
  private boolean conversationMetadataReportViewDefined = false;

  public static final String JSON_PROPERTY_RETENTION_POLICY = "retention_policy";
  private RetentionPolicyDto retentionPolicy;
  private boolean retentionPolicyDefined = false;

  public static final String JSON_PROPERTY_DISPATCH_RETENTION_POLICY = "dispatch_retention_policy";
  private DispatchRetentionPolicyDto dispatchRetentionPolicy;
  private boolean dispatchRetentionPolicyDefined = false;

  public static final String JSON_PROPERTY_PROCESSING_MODE = "processing_mode";
  private ProcessingModeDto processingMode;
  private boolean processingModeDefined = false;

  public static final String JSON_PROPERTY_SMART_CONVERSATION = "smart_conversation";
  private SmartConversationDto smartConversation;
  private boolean smartConversationDefined = false;

  public static final String JSON_PROPERTY_CALLBACK_SETTINGS = "callback_settings";
  private CallbackSettingsDto callbackSettings;
  private boolean callbackSettingsDefined = false;

  public AppCreateRequestDto() {}

  public AppCreateRequestDto channelCredentials(
      List<ConversationChannelCredentialDto> channelCredentials) {
    this.channelCredentials = channelCredentials;
    this.channelCredentialsDefined = true;
    return this;
  }

  public AppCreateRequestDto addChannelCredentialsItem(
      ConversationChannelCredentialDto channelCredentialsItem) {
    if (this.channelCredentials == null) {
      this.channelCredentials = new ArrayList<>();
    }
    this.channelCredentialsDefined = true;
    this.channelCredentials.add(channelCredentialsItem);
    return this;
  }

  /**
   * An array of channel credentials. The order of the credentials defines the app channel priority.
   *
   * @return channelCredentials
   */
  @JsonProperty(JSON_PROPERTY_CHANNEL_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ConversationChannelCredentialDto> getChannelCredentials() {
    return channelCredentials;
  }

  @JsonIgnore
  public boolean getChannelCredentialsDefined() {
    return channelCredentialsDefined;
  }

  @JsonProperty(JSON_PROPERTY_CHANNEL_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannelCredentials(List<ConversationChannelCredentialDto> channelCredentials) {
    this.channelCredentials = channelCredentials;
    this.channelCredentialsDefined = true;
  }

  public AppCreateRequestDto displayName(String displayName) {
    this.displayName = displayName;
    this.displayNameDefined = true;
    return this;
  }

  /**
   * The display name for the app.
   *
   * @return displayName
   */
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDisplayName() {
    return displayName;
  }

  @JsonIgnore
  public boolean getDisplayNameDefined() {
    return displayNameDefined;
  }

  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
    this.displayNameDefined = true;
  }

  public AppCreateRequestDto conversationMetadataReportView(
      ConversationMetadataReportViewDto conversationMetadataReportView) {
    this.conversationMetadataReportView = conversationMetadataReportView;
    this.conversationMetadataReportViewDefined = true;
    return this;
  }

  /**
   * Get conversationMetadataReportView
   *
   * @return conversationMetadataReportView
   */
  @JsonProperty(JSON_PROPERTY_CONVERSATION_METADATA_REPORT_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ConversationMetadataReportViewDto getConversationMetadataReportView() {
    return conversationMetadataReportView;
  }

  @JsonIgnore
  public boolean getConversationMetadataReportViewDefined() {
    return conversationMetadataReportViewDefined;
  }

  @JsonProperty(JSON_PROPERTY_CONVERSATION_METADATA_REPORT_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConversationMetadataReportView(
      ConversationMetadataReportViewDto conversationMetadataReportView) {
    this.conversationMetadataReportView = conversationMetadataReportView;
    this.conversationMetadataReportViewDefined = true;
  }

  public AppCreateRequestDto retentionPolicy(RetentionPolicyDto retentionPolicy) {
    this.retentionPolicy = retentionPolicy;
    this.retentionPolicyDefined = true;
    return this;
  }

  /**
   * Get retentionPolicy
   *
   * @return retentionPolicy
   */
  @JsonProperty(JSON_PROPERTY_RETENTION_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public RetentionPolicyDto getRetentionPolicy() {
    return retentionPolicy;
  }

  @JsonIgnore
  public boolean getRetentionPolicyDefined() {
    return retentionPolicyDefined;
  }

  @JsonProperty(JSON_PROPERTY_RETENTION_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetentionPolicy(RetentionPolicyDto retentionPolicy) {
    this.retentionPolicy = retentionPolicy;
    this.retentionPolicyDefined = true;
  }

  public AppCreateRequestDto dispatchRetentionPolicy(
      DispatchRetentionPolicyDto dispatchRetentionPolicy) {
    this.dispatchRetentionPolicy = dispatchRetentionPolicy;
    this.dispatchRetentionPolicyDefined = true;
    return this;
  }

  /**
   * Get dispatchRetentionPolicy
   *
   * @return dispatchRetentionPolicy
   */
  @JsonProperty(JSON_PROPERTY_DISPATCH_RETENTION_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public DispatchRetentionPolicyDto getDispatchRetentionPolicy() {
    return dispatchRetentionPolicy;
  }

  @JsonIgnore
  public boolean getDispatchRetentionPolicyDefined() {
    return dispatchRetentionPolicyDefined;
  }

  @JsonProperty(JSON_PROPERTY_DISPATCH_RETENTION_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDispatchRetentionPolicy(DispatchRetentionPolicyDto dispatchRetentionPolicy) {
    this.dispatchRetentionPolicy = dispatchRetentionPolicy;
    this.dispatchRetentionPolicyDefined = true;
  }

  public AppCreateRequestDto processingMode(ProcessingModeDto processingMode) {
    this.processingMode = processingMode;
    this.processingModeDefined = true;
    return this;
  }

  /**
   * Get processingMode
   *
   * @return processingMode
   */
  @JsonProperty(JSON_PROPERTY_PROCESSING_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ProcessingModeDto getProcessingMode() {
    return processingMode;
  }

  @JsonIgnore
  public boolean getProcessingModeDefined() {
    return processingModeDefined;
  }

  @JsonProperty(JSON_PROPERTY_PROCESSING_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessingMode(ProcessingModeDto processingMode) {
    this.processingMode = processingMode;
    this.processingModeDefined = true;
  }

  public AppCreateRequestDto smartConversation(SmartConversationDto smartConversation) {
    this.smartConversation = smartConversation;
    this.smartConversationDefined = true;
    return this;
  }

  /**
   * Get smartConversation
   *
   * @return smartConversation
   */
  @JsonProperty(JSON_PROPERTY_SMART_CONVERSATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SmartConversationDto getSmartConversation() {
    return smartConversation;
  }

  @JsonIgnore
  public boolean getSmartConversationDefined() {
    return smartConversationDefined;
  }

  @JsonProperty(JSON_PROPERTY_SMART_CONVERSATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSmartConversation(SmartConversationDto smartConversation) {
    this.smartConversation = smartConversation;
    this.smartConversationDefined = true;
  }

  public AppCreateRequestDto callbackSettings(CallbackSettingsDto callbackSettings) {
    this.callbackSettings = callbackSettings;
    this.callbackSettingsDefined = true;
    return this;
  }

  /**
   * Get callbackSettings
   *
   * @return callbackSettings
   */
  @JsonProperty(JSON_PROPERTY_CALLBACK_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CallbackSettingsDto getCallbackSettings() {
    return callbackSettings;
  }

  @JsonIgnore
  public boolean getCallbackSettingsDefined() {
    return callbackSettingsDefined;
  }

  @JsonProperty(JSON_PROPERTY_CALLBACK_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallbackSettings(CallbackSettingsDto callbackSettings) {
    this.callbackSettings = callbackSettings;
    this.callbackSettingsDefined = true;
  }

  /** Return true if this AppCreateRequest object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppCreateRequestDto appCreateRequest = (AppCreateRequestDto) o;
    return Objects.equals(this.channelCredentials, appCreateRequest.channelCredentials)
        && Objects.equals(this.displayName, appCreateRequest.displayName)
        && Objects.equals(
            this.conversationMetadataReportView, appCreateRequest.conversationMetadataReportView)
        && Objects.equals(this.retentionPolicy, appCreateRequest.retentionPolicy)
        && Objects.equals(this.dispatchRetentionPolicy, appCreateRequest.dispatchRetentionPolicy)
        && Objects.equals(this.processingMode, appCreateRequest.processingMode)
        && Objects.equals(this.smartConversation, appCreateRequest.smartConversation)
        && Objects.equals(this.callbackSettings, appCreateRequest.callbackSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        channelCredentials,
        displayName,
        conversationMetadataReportView,
        retentionPolicy,
        dispatchRetentionPolicy,
        processingMode,
        smartConversation,
        callbackSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppCreateRequestDto {\n");
    sb.append("    channelCredentials: ").append(toIndentedString(channelCredentials)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    conversationMetadataReportView: ")
        .append(toIndentedString(conversationMetadataReportView))
        .append("\n");
    sb.append("    retentionPolicy: ").append(toIndentedString(retentionPolicy)).append("\n");
    sb.append("    dispatchRetentionPolicy: ")
        .append(toIndentedString(dispatchRetentionPolicy))
        .append("\n");
    sb.append("    processingMode: ").append(toIndentedString(processingMode)).append("\n");
    sb.append("    smartConversation: ").append(toIndentedString(smartConversation)).append("\n");
    sb.append("    callbackSettings: ").append(toIndentedString(callbackSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
