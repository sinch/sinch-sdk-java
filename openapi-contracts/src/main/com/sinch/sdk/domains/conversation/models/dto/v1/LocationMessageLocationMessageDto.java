/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** LocationMessageLocationMessageDto */
@JsonPropertyOrder({
  LocationMessageLocationMessageDto.JSON_PROPERTY_COORDINATES,
  LocationMessageLocationMessageDto.JSON_PROPERTY_TITLE,
  LocationMessageLocationMessageDto.JSON_PROPERTY_LABEL
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class LocationMessageLocationMessageDto {
  public static final String JSON_PROPERTY_COORDINATES = "coordinates";
  private CoordinatesDto coordinates;
  private boolean coordinatesDefined = false;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;
  private boolean titleDefined = false;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;
  private boolean labelDefined = false;

  public LocationMessageLocationMessageDto() {}

  public LocationMessageLocationMessageDto coordinates(CoordinatesDto coordinates) {
    this.coordinates = coordinates;
    this.coordinatesDefined = true;
    return this;
  }

  /**
   * Get coordinates
   *
   * @return coordinates
   */
  @JsonProperty(JSON_PROPERTY_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public CoordinatesDto getCoordinates() {
    return coordinates;
  }

  @JsonIgnore
  public boolean getCoordinatesDefined() {
    return coordinatesDefined;
  }

  @JsonProperty(JSON_PROPERTY_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoordinates(CoordinatesDto coordinates) {
    this.coordinates = coordinates;
    this.coordinatesDefined = true;
  }

  public LocationMessageLocationMessageDto title(String title) {
    this.title = title;
    this.titleDefined = true;
    return this;
  }

  /**
   * The title is shown close to the button or link that leads to a map showing the location. The
   * title can be clickable in some cases.
   *
   * @return title
   */
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getTitle() {
    return title;
  }

  @JsonIgnore
  public boolean getTitleDefined() {
    return titleDefined;
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
    this.titleDefined = true;
  }

  public LocationMessageLocationMessageDto label(String label) {
    this.label = label;
    this.labelDefined = true;
    return this;
  }

  /**
   * Label or name for the position.
   *
   * @return label
   */
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLabel() {
    return label;
  }

  @JsonIgnore
  public boolean getLabelDefined() {
    return labelDefined;
  }

  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
    this.labelDefined = true;
  }

  /** Return true if this LocationMessage_location_message object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationMessageLocationMessageDto locationMessageLocationMessage =
        (LocationMessageLocationMessageDto) o;
    return Objects.equals(this.coordinates, locationMessageLocationMessage.coordinates)
        && Objects.equals(this.title, locationMessageLocationMessage.title)
        && Objects.equals(this.label, locationMessageLocationMessage.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordinates, title, label);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationMessageLocationMessageDto {\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
