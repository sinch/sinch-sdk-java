/*
 * Conversation API | Sinch
 * Send and receive messages globally over SMS, RCS, WhatsApp, Viber Business, Facebook messenger and other popular channels using the Sinch Conversation API.  The Conversation API endpoint uses built-in transcoding to give you the power of conversation across all supported channels and, if required, full control over channel specific features.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.conversation.models.v1.credentials;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/** declaration */
@JsonDeserialize(builder = ChannelCredentialTypesImpl.Builder.class)
public interface ChannelCredentialTypes {

  /**
   * Get staticBearer
   *
   * @return staticBearer
   */
  StaticBearerCredentials getStaticBearer();

  /**
   * Get staticToken
   *
   * @return staticToken
   */
  StaticTokenCredentials getStaticToken();

  /**
   * Get mmsCredentials
   *
   * @return mmsCredentials
   */
  MMSCredentials getMmsCredentials();

  /**
   * Get kakaotalkCredentials
   *
   * @return kakaotalkCredentials
   */
  KakaoTalkCredentials getKakaotalkCredentials();

  /**
   * Get telegramCredentials
   *
   * @return telegramCredentials
   */
  TelegramCredentials getTelegramCredentials();

  /**
   * Get lineCredentials
   *
   * @return lineCredentials
   */
  LineCredentials getLineCredentials();

  /**
   * Get wechatCredentials
   *
   * @return wechatCredentials
   */
  WeChatCredentials getWechatCredentials();

  /**
   * Get instagramCredentials
   *
   * @return instagramCredentials
   */
  InstagramCredentials getInstagramCredentials();

  /**
   * Get applebcCredentials
   *
   * @return applebcCredentials
   */
  AppleBcCredentials getApplebcCredentials();

  /**
   * Get kakaotalkchatCredentials
   *
   * @return kakaotalkchatCredentials
   */
  KakaoTalkChatCredentials getKakaotalkchatCredentials();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new ChannelCredentialTypesImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param staticBearer see getter
     * @return Current builder
     * @see #getStaticBearer
     */
    Builder setStaticBearer(StaticBearerCredentials staticBearer);

    /**
     * see getter
     *
     * @param staticToken see getter
     * @return Current builder
     * @see #getStaticToken
     */
    Builder setStaticToken(StaticTokenCredentials staticToken);

    /**
     * see getter
     *
     * @param mmsCredentials see getter
     * @return Current builder
     * @see #getMmsCredentials
     */
    Builder setMmsCredentials(MMSCredentials mmsCredentials);

    /**
     * see getter
     *
     * @param kakaotalkCredentials see getter
     * @return Current builder
     * @see #getKakaotalkCredentials
     */
    Builder setKakaotalkCredentials(KakaoTalkCredentials kakaotalkCredentials);

    /**
     * see getter
     *
     * @param telegramCredentials see getter
     * @return Current builder
     * @see #getTelegramCredentials
     */
    Builder setTelegramCredentials(TelegramCredentials telegramCredentials);

    /**
     * see getter
     *
     * @param lineCredentials see getter
     * @return Current builder
     * @see #getLineCredentials
     */
    Builder setLineCredentials(LineCredentials lineCredentials);

    /**
     * see getter
     *
     * @param wechatCredentials see getter
     * @return Current builder
     * @see #getWechatCredentials
     */
    Builder setWechatCredentials(WeChatCredentials wechatCredentials);

    /**
     * see getter
     *
     * @param instagramCredentials see getter
     * @return Current builder
     * @see #getInstagramCredentials
     */
    Builder setInstagramCredentials(InstagramCredentials instagramCredentials);

    /**
     * see getter
     *
     * @param applebcCredentials see getter
     * @return Current builder
     * @see #getApplebcCredentials
     */
    Builder setApplebcCredentials(AppleBcCredentials applebcCredentials);

    /**
     * see getter
     *
     * @param kakaotalkchatCredentials see getter
     * @return Current builder
     * @see #getKakaotalkchatCredentials
     */
    Builder setKakaotalkchatCredentials(KakaoTalkChatCredentials kakaotalkchatCredentials);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    ChannelCredentialTypes build();
  }
}
