/*
 * Mailgun API
 *
 * OpenAPI document version: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.mailgun.models.v1.emails.request;

import java.util.Map;

/**
 * Template's related properties. Define template's related information &amp; <a
 * href="https://documentation.mailgun.com/docs/mailgun/user-manual/sending-messages/#template-variables">variables</a>
 */
public interface TemplateProperties {

  /**
   * Generates a plain text version of the template alongside the HTML version when sending
   * templated emails. When set to 'yes', instructs Mailgun to create a text/plain MIME part based
   * on the template content, ensuring compatibility with email clients that don't support HTML or
   * have HTML rendering disabled. This improves email deliverability and accessibility by providing
   * a fallback text version in multipart emails.
   *
   * @return text
   */
  Boolean getText();

  /**
   * Render a specific version of the given template instead of the latest version. <code>template
   * </code> option must also be provided.
   *
   * @return version
   */
  String getVersion();

  /**
   * A valid JSON-encoded dictionary used as the input for template variable expansion. See <a
   * href="https://documentation.mailgun.com/docs/mailgun/user-manual/sending-messages/#templates">Templates</a>
   * for more information
   *
   * @return variables
   */
  String getVariables();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new TemplatePropertiesImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * Helper method for setVariables(String).
     *
     * <p>`variables` parameter will be serialized to JSON
     *
     * @param variables Map of values to be encoded to JSON string
     *     <p>Helper method only support map value a map of values or a native type
     * @return Current builder
     * @see #setVariables(String)
     */
    Builder setVariables(Map<String, Object> variables);

    /**
     * see getter
     *
     * @param text see getter
     * @return Current builder
     * @see #getText
     */
    Builder setText(Boolean text);

    /**
     * see getter
     *
     * @param version see getter
     * @return Current builder
     * @see #getVersion
     */
    Builder setVersion(String version);

    /**
     * see getter
     *
     * @param variables see getter
     * @return Current builder
     * @see #getVariables
     */
    Builder setVariables(String variables);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    TemplateProperties build();
  }
}
