/*
 * Mailgun API
 *
 * OpenAPI document version: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.mailgun.api.v1;

import com.sinch.sdk.core.exceptions.ApiException;
import com.sinch.sdk.domains.mailgun.models.v1.emails.request.SendEmailRequest;
import com.sinch.sdk.domains.mailgun.models.v1.emails.request.SendMimeEmailRequest;
import com.sinch.sdk.domains.mailgun.models.v1.emails.response.GetStoredEmailResponse;
import com.sinch.sdk.domains.mailgun.models.v1.emails.response.SendEmailResponse;
import com.sinch.sdk.domains.mailgun.models.v1.emails.response.SendingQueuesStatusResponse;

/** Emails Service */
public interface EmailsService {

  /**
   * Get messages queue status
   *
   * <p>Provides default and scheduled message queue information.
   *
   * @param name The name of the domain you want get sending queues from (required)
   * @return SendingQueuesStatusResponse
   * @throws ApiException if fails to make API call
   */
  SendingQueuesStatusResponse getSendingQueuesStatus(String name) throws ApiException;

  /**
   * Retrieve a stored email
   *
   * <p>Event(s) created from sending an email with Mailgun will contain a &#x60;storage.key&#x60;
   * to use to retrieve the email.
   *
   * @param domainName Domain name that was used to send the email (required)
   * @param storageKey Storage key from the emails associated events (required)
   * @return GetStoredEmailResponse
   * @throws ApiException if fails to make API call
   */
  GetStoredEmailResponse getStoredEmail(String domainName, String storageKey) throws ApiException;

  /**
   * Send an email
   *
   * <p>Pass the components of the messages such as To, From, Subject, HTML and text parts,
   * attachments, etc. Mailgun will build a MIME representation of the message and send it. Note: In
   * order to send you must provide one of the following parameters: &#39;text&#39;, &#39;html&#39;,
   * &#39;amp-html&#39; or &#39;template&#39;
   *
   * @param domainName Domain name used to send the message (required)
   * @param requestParameters Request parameters
   * @return SendEmailResponse
   * @throws ApiException if fails to make API call
   */
  SendEmailResponse sendEmail(String domainName, SendEmailRequest requestParameters)
      throws ApiException;

  /**
   * Send an email in MIME format
   *
   * <p>Build a MIME string yourself using a MIME library for your programming language and submit
   * it to Mailgun.
   *
   * @param domainName Domain name used to send the message (required)
   * @param requestParameters Request parameters
   * @return SendEmailResponse
   * @throws ApiException if fails to make API call
   */
  SendEmailResponse sendMimeEmail(String domainName, SendMimeEmailRequest requestParameters)
      throws ApiException;

  /**
   * Delete scheduled and undelivered mail Deletes all scheduled and undelivered mail from the
   * domain queue.
   *
   * <p>This endpoint must be called on the storage API host and in the domain&#39;s region. e.g.
   * <code>https://storage-us-east4.api.mailgun.net/v3/example.com/envelopes</code>.
   *
   * <p>The storage hosts are
   *
   * <ul>
   *   <li><code>storage-us-east4.api.mailgun.net</code>
   *   <li><code>storage-us-west1.api.mailgun.net</code>
   *   <li><code>storage-europe-west1.api.mailgun.net</code>
   * </ul>
   *
   * @param domainName The name of the domain you want to delete envelope from (required)
   * @param storageURL (required)
   * @throws ApiException if fails to make API call
   */
  void purgeSendingQueue(String domainName, String storageURL) throws ApiException;
}
