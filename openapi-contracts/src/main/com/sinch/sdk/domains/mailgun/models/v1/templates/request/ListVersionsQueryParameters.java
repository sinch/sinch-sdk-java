/*
 * Mailgun API
 *
 * OpenAPI document version: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.mailgun.models.v1.templates.request;

import com.sinch.sdk.core.models.OptionalValue;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import java.util.Arrays;
import java.util.stream.Stream;

/** ListVersionsQueryParameters */
public interface ListVersionsQueryParameters {

  /** Gets or Sets page */
  public class PageEnum extends EnumDynamic<String, PageEnum> {
    public static final PageEnum FIRST = new PageEnum("first");
    public static final PageEnum LAST = new PageEnum("last");
    public static final PageEnum NEXT = new PageEnum("next");
    public static final PageEnum PREVIOUS = new PageEnum("previous");

    private static final EnumSupportDynamic<String, PageEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(
            PageEnum.class, PageEnum::new, Arrays.asList(FIRST, LAST, NEXT, PREVIOUS));

    private PageEnum(String value) {
      super(value);
    }

    public static Stream<PageEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static PageEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(PageEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * Get page
   *
   * @return page
   */
  OptionalValue<PageEnum> getPage();

  /**
   * Get limit
   *
   * @return limit
   */
  OptionalValue<Integer> getLimit();

  /**
   * Get pivot
   *
   * @return pivot
   */
  OptionalValue<String> getPivot();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new ListVersionsQueryParametersImpl.Builder();
  }

  /**
   * Getting builder from existing instance
   *
   * @return New Builder instance
   */
  static Builder builder(ListVersionsQueryParameters parameters) {
    return new ListVersionsQueryParametersImpl.Builder(parameters);
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param page see getter
     * @return Current builder
     * @see #getPage
     */
    Builder setPage(PageEnum page);

    /**
     * see getter
     *
     * @param limit see getter
     * @return Current builder
     * @see #getLimit
     */
    Builder setLimit(Integer limit);

    /**
     * see getter
     *
     * @param pivot see getter
     * @return Current builder
     * @see #getPivot
     */
    Builder setPivot(String pivot);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    ListVersionsQueryParameters build();
  }
}
