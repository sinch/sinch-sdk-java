package com.sinch.sdk.domains.voice.models.v1.webhooks;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;
import com.sinch.sdk.core.models.OptionalValue;
import com.sinch.sdk.domains.voice.models.v1.Destination;
import com.sinch.sdk.domains.voice.models.v1.Domain;
import com.sinch.sdk.domains.voice.models.v1.Price;
import com.sinch.sdk.domains.voice.models.v1.svaml.action.CallHeader;
import java.time.Instant;
import java.util.List;
import java.util.Objects;

@JsonPropertyOrder({
  IncomingCallEventImpl.JSON_PROPERTY_TIMESTAMP,
  IncomingCallEventImpl.JSON_PROPERTY_CUSTOM,
  IncomingCallEventImpl.JSON_PROPERTY_APPLICATION_KEY,
  IncomingCallEventImpl.JSON_PROPERTY_EVENT,
  IncomingCallEventImpl.JSON_PROPERTY_CALL_RESOURCE_URL,
  IncomingCallEventImpl.JSON_PROPERTY_USER_RATE,
  IncomingCallEventImpl.JSON_PROPERTY_CLI,
  IncomingCallEventImpl.JSON_PROPERTY_TO,
  IncomingCallEventImpl.JSON_PROPERTY_DOMAIN,
  IncomingCallEventImpl.JSON_PROPERTY_ORIGINATION_TYPE,
  IncomingCallEventImpl.JSON_PROPERTY_DURATION,
  IncomingCallEventImpl.JSON_PROPERTY_RDNIS,
  IncomingCallEventImpl.JSON_PROPERTY_CALL_HEADERS,
  IncomingCallEventImpl.JSON_PROPERTY_CALLID,
  IncomingCallEventImpl.JSON_PROPERTY_VERSION
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)

/*@JsonIgnoreProperties(
  value = "event", // ignore manually set event, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the event to be set during deserialization
)*/
/*@JsonTypeInfo(use = JsonTypeInfo.Id.NONE, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "event", visible = true)
 */

public class IncomingCallEventImpl
    implements IncomingCallEvent, VoiceWebhookEvent, VoiceWebhookCallEvent {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";

  private OptionalValue<Instant> timestamp;

  public static final String JSON_PROPERTY_CUSTOM = "custom";

  private OptionalValue<String> custom;

  public static final String JSON_PROPERTY_APPLICATION_KEY = "applicationKey";

  private OptionalValue<String> applicationKey;

  public static final String JSON_PROPERTY_EVENT = "event";

  private OptionalValue<WebhooksEventRequestType> event;

  public static final String JSON_PROPERTY_CALL_RESOURCE_URL = "callResourceUrl";

  private OptionalValue<String> callResourceUrl;

  public static final String JSON_PROPERTY_USER_RATE = "userRate";

  private OptionalValue<Price> userRate;

  public static final String JSON_PROPERTY_CLI = "cli";

  private OptionalValue<String> cli;

  public static final String JSON_PROPERTY_TO = "to";

  private OptionalValue<Destination> to;

  public static final String JSON_PROPERTY_DOMAIN = "domain";

  private OptionalValue<Domain> domain;

  public static final String JSON_PROPERTY_ORIGINATION_TYPE = "originationType";

  private OptionalValue<Domain> originationType;

  public static final String JSON_PROPERTY_DURATION = "duration";

  private OptionalValue<Integer> duration;

  public static final String JSON_PROPERTY_RDNIS = "rdnis";

  private OptionalValue<String> rdnis;

  public static final String JSON_PROPERTY_CALL_HEADERS = "callHeaders";

  private OptionalValue<List<CallHeader>> callHeaders;

  public static final String JSON_PROPERTY_CALLID = "callid";

  private OptionalValue<String> callid;

  public static final String JSON_PROPERTY_VERSION = "version";

  private OptionalValue<Integer> version;

  public IncomingCallEventImpl() {}

  protected IncomingCallEventImpl(
      OptionalValue<Instant> timestamp,
      OptionalValue<String> custom,
      OptionalValue<String> applicationKey,
      OptionalValue<WebhooksEventRequestType> event,
      OptionalValue<String> callResourceUrl,
      OptionalValue<Price> userRate,
      OptionalValue<String> cli,
      OptionalValue<Destination> to,
      OptionalValue<Domain> domain,
      OptionalValue<Domain> originationType,
      OptionalValue<Integer> duration,
      OptionalValue<String> rdnis,
      OptionalValue<List<CallHeader>> callHeaders,
      OptionalValue<String> callid,
      OptionalValue<Integer> version) {
    this.timestamp = timestamp;
    this.custom = custom;
    this.applicationKey = applicationKey;
    this.event = event;
    this.callResourceUrl = callResourceUrl;
    this.userRate = userRate;
    this.cli = cli;
    this.to = to;
    this.domain = domain;
    this.originationType = originationType;
    this.duration = duration;
    this.rdnis = rdnis;
    this.callHeaders = callHeaders;
    this.callid = callid;
    this.version = version;
  }

  @JsonIgnore
  public Instant getTimestamp() {
    return timestamp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Instant> timestamp() {
    return timestamp;
  }

  @JsonIgnore
  public String getCustom() {
    return custom.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> custom() {
    return custom;
  }

  @JsonIgnore
  public String getApplicationKey() {
    return applicationKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLICATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> applicationKey() {
    return applicationKey;
  }

  @JsonIgnore
  public WebhooksEventRequestType getEvent() {
    return event.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OptionalValue<WebhooksEventRequestType> event() {
    return event;
  }

  @JsonIgnore
  public String getCallResourceUrl() {
    return callResourceUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CALL_RESOURCE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> callResourceUrl() {
    return callResourceUrl;
  }

  @JsonIgnore
  public Price getUserRate() {
    return userRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Price> userRate() {
    return userRate;
  }

  @JsonIgnore
  public String getCli() {
    return cli.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> cli() {
    return cli;
  }

  @JsonIgnore
  public Destination getTo() {
    return to.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Destination> to() {
    return to;
  }

  @JsonIgnore
  public Domain getDomain() {
    return domain.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Domain> domain() {
    return domain;
  }

  @JsonIgnore
  public Domain getOriginationType() {
    return originationType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORIGINATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Domain> originationType() {
    return originationType;
  }

  @JsonIgnore
  public Integer getDuration() {
    return duration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Integer> duration() {
    return duration;
  }

  @JsonIgnore
  public String getRdnis() {
    return rdnis.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RDNIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> rdnis() {
    return rdnis;
  }

  @JsonIgnore
  public List<CallHeader> getCallHeaders() {
    return callHeaders.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CALL_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<List<CallHeader>> callHeaders() {
    return callHeaders;
  }

  @JsonIgnore
  public String getCallid() {
    return callid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CALLID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> callid() {
    return callid;
  }

  @JsonIgnore
  public Integer getVersion() {
    return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Integer> version() {
    return version;
  }

  /** Return true if this iceRequest object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IncomingCallEventImpl iceRequest = (IncomingCallEventImpl) o;
    return Objects.equals(this.timestamp, iceRequest.timestamp)
        && Objects.equals(this.custom, iceRequest.custom)
        && Objects.equals(this.applicationKey, iceRequest.applicationKey)
        && Objects.equals(this.event, iceRequest.event)
        && Objects.equals(this.callResourceUrl, iceRequest.callResourceUrl)
        && Objects.equals(this.userRate, iceRequest.userRate)
        && Objects.equals(this.cli, iceRequest.cli)
        && Objects.equals(this.to, iceRequest.to)
        && Objects.equals(this.domain, iceRequest.domain)
        && Objects.equals(this.originationType, iceRequest.originationType)
        && Objects.equals(this.duration, iceRequest.duration)
        && Objects.equals(this.rdnis, iceRequest.rdnis)
        && Objects.equals(this.callHeaders, iceRequest.callHeaders)
        && Objects.equals(this.callid, iceRequest.callid)
        && Objects.equals(this.version, iceRequest.version)
        && super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        timestamp,
        custom,
        applicationKey,
        event,
        callResourceUrl,
        userRate,
        cli,
        to,
        domain,
        originationType,
        duration,
        rdnis,
        callHeaders,
        callid,
        version,
        super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IncomingCallEventImpl {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    applicationKey: ").append(toIndentedString(applicationKey)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    callResourceUrl: ").append(toIndentedString(callResourceUrl)).append("\n");
    sb.append("    userRate: ").append(toIndentedString(userRate)).append("\n");
    sb.append("    cli: ").append(toIndentedString(cli)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    originationType: ").append(toIndentedString(originationType)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    rdnis: ").append(toIndentedString(rdnis)).append("\n");
    sb.append("    callHeaders: ").append(toIndentedString(callHeaders)).append("\n");
    sb.append("    callid: ").append(toIndentedString(callid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  @JsonPOJOBuilder(withPrefix = "set")
  static class Builder implements IncomingCallEvent.Builder {
    OptionalValue<Instant> timestamp = OptionalValue.empty();
    OptionalValue<String> custom = OptionalValue.empty();
    OptionalValue<String> applicationKey = OptionalValue.empty();
    OptionalValue<WebhooksEventRequestType> event = OptionalValue.of(WebhooksEventRequestType.ICE);
    OptionalValue<String> callResourceUrl = OptionalValue.empty();
    OptionalValue<Price> userRate = OptionalValue.empty();
    OptionalValue<String> cli = OptionalValue.empty();
    OptionalValue<Destination> to = OptionalValue.empty();
    OptionalValue<Domain> domain = OptionalValue.empty();
    OptionalValue<Domain> originationType = OptionalValue.empty();
    OptionalValue<Integer> duration = OptionalValue.empty();
    OptionalValue<String> rdnis = OptionalValue.empty();
    OptionalValue<List<CallHeader>> callHeaders = OptionalValue.empty();
    OptionalValue<String> callid = OptionalValue.empty();
    OptionalValue<Integer> version = OptionalValue.empty();

    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    public Builder setTimestamp(Instant timestamp) {
      this.timestamp = OptionalValue.of(timestamp);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOM)
    public Builder setCustom(String custom) {
      this.custom = OptionalValue.of(custom);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_APPLICATION_KEY)
    public Builder setApplicationKey(String applicationKey) {
      this.applicationKey = OptionalValue.of(applicationKey);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_CALL_RESOURCE_URL)
    public Builder setCallResourceUrl(String callResourceUrl) {
      this.callResourceUrl = OptionalValue.of(callResourceUrl);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_USER_RATE)
    public Builder setUserRate(Price userRate) {
      this.userRate = OptionalValue.of(userRate);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_CLI)
    public Builder setCli(String cli) {
      this.cli = OptionalValue.of(cli);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_TO)
    public Builder setTo(Destination to) {
      this.to = OptionalValue.of(to);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_DOMAIN)
    public Builder setDomain(Domain domain) {
      this.domain = OptionalValue.of(domain);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_ORIGINATION_TYPE)
    public Builder setOriginationType(Domain originationType) {
      this.originationType = OptionalValue.of(originationType);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_DURATION)
    public Builder setDuration(Integer duration) {
      this.duration = OptionalValue.of(duration);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_RDNIS)
    public Builder setRdnis(String rdnis) {
      this.rdnis = OptionalValue.of(rdnis);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_CALL_HEADERS)
    public Builder setCallHeaders(List<CallHeader> callHeaders) {
      this.callHeaders = OptionalValue.of(callHeaders);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_CALLID)
    public Builder setCallid(String callid) {
      this.callid = OptionalValue.of(callid);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_VERSION)
    public Builder setVersion(Integer version) {
      this.version = OptionalValue.of(version);
      return this;
    }

    public IncomingCallEvent build() {
      return new IncomingCallEventImpl(
          timestamp,
          custom,
          applicationKey,
          event,
          callResourceUrl,
          userRate,
          cli,
          to,
          domain,
          originationType,
          duration,
          rdnis,
          callHeaders,
          callid,
          version);
    }
  }
}
