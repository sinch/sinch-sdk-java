/*
 * Voice API | Sinch
 *
 * OpenAPI document version: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.v1.calls.response;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import com.sinch.sdk.domains.voice.models.v1.Destination;
import com.sinch.sdk.domains.voice.models.v1.Price;
import java.time.Instant;
import java.util.Arrays;
import java.util.stream.Stream;

/** CallInformation */
@JsonDeserialize(builder = CallInformationImpl.Builder.class)
public interface CallInformation {

  /**
   * Get from
   *
   * @return from
   */
  Destination getFrom();

  /**
   * Get to
   *
   * @return to
   */
  Destination getTo();

  /** Must be <code>pstn</code> for PSTN. */
  public class DomainEnum extends EnumDynamic<String, DomainEnum> {
    public static final DomainEnum PSTN = new DomainEnum("pstn");

    private static final EnumSupportDynamic<String, DomainEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(DomainEnum.class, DomainEnum::new, Arrays.asList(PSTN));

    private DomainEnum(String value) {
      super(value);
    }

    public static Stream<DomainEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static DomainEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(DomainEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * Must be <code>pstn</code> for PSTN.
   *
   * @return domain
   */
  DomainEnum getDomain();

  /**
   * The unique identifier of the call.
   *
   * @return callId
   */
  String getCallId();

  /**
   * The duration of the call in seconds.
   *
   * @return duration
   */
  Integer getDuration();

  /** The status of the call. Either <code>ONGOING</code> or <code>FINAL</code> */
  public class StatusEnum extends EnumDynamic<String, StatusEnum> {
    public static final StatusEnum ONGOING = new StatusEnum("ONGOING");
    public static final StatusEnum FINAL = new StatusEnum("FINAL");

    private static final EnumSupportDynamic<String, StatusEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(StatusEnum.class, StatusEnum::new, Arrays.asList(ONGOING, FINAL));

    private StatusEnum(String value) {
      super(value);
    }

    public static Stream<StatusEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static StatusEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(StatusEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * The status of the call. Either <code>ONGOING</code> or <code>FINAL</code>
   *
   * @return status
   */
  StatusEnum getStatus();

  /**
   * Get result
   *
   * @return result
   */
  CallResult getResult();

  /** Contains the reason why a call ended. */
  public class ReasonEnum extends EnumDynamic<String, ReasonEnum> {
    public static final ReasonEnum N_A = new ReasonEnum("N/A");
    public static final ReasonEnum TIMEOUT = new ReasonEnum("TIMEOUT");
    public static final ReasonEnum CALLERHANGUP = new ReasonEnum("CALLERHANGUP");
    public static final ReasonEnum CALLEEHANGUP = new ReasonEnum("CALLEEHANGUP");
    public static final ReasonEnum BLOCKED = new ReasonEnum("BLOCKED");
    public static final ReasonEnum NOCREDITPARTNER = new ReasonEnum("NOCREDITPARTNER");
    public static final ReasonEnum MANAGERHANGUP = new ReasonEnum("MANAGERHANGUP");
    public static final ReasonEnum CANCEL = new ReasonEnum("CANCEL");
    public static final ReasonEnum GENERALERROR = new ReasonEnum("GENERALERROR");
    public static final ReasonEnum INVALIDSVAMLACTION = new ReasonEnum("INVALIDSVAMLACTION");

    private static final EnumSupportDynamic<String, ReasonEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(
            ReasonEnum.class,
            ReasonEnum::new,
            Arrays.asList(
                N_A,
                TIMEOUT,
                CALLERHANGUP,
                CALLEEHANGUP,
                BLOCKED,
                NOCREDITPARTNER,
                MANAGERHANGUP,
                CANCEL,
                GENERALERROR,
                INVALIDSVAMLACTION));

    private ReasonEnum(String value) {
      super(value);
    }

    public static Stream<ReasonEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static ReasonEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(ReasonEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * Contains the reason why a call ended.
   *
   * @return reason
   */
  ReasonEnum getReason();

  /**
   * The date and time of the call.
   *
   * @return timestamp
   */
  Instant getTimestamp();

  /**
   * A string that can be used to pass custom information related to the call.
   *
   * @return custom
   */
  String getCustom();

  /**
   * Get userRate
   *
   * @return userRate
   */
  Price getUserRate();

  /**
   * Get debit
   *
   * @return debit
   */
  Price getDebit();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new CallInformationImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param from see getter
     * @return Current builder
     * @see #getFrom
     */
    Builder setFrom(Destination from);

    /**
     * see getter
     *
     * @param to see getter
     * @return Current builder
     * @see #getTo
     */
    Builder setTo(Destination to);

    /**
     * see getter
     *
     * @param domain see getter
     * @return Current builder
     * @see #getDomain
     */
    Builder setDomain(DomainEnum domain);

    /**
     * see getter
     *
     * @param callId see getter
     * @return Current builder
     * @see #getCallId
     */
    Builder setCallId(String callId);

    /**
     * see getter
     *
     * @param duration see getter
     * @return Current builder
     * @see #getDuration
     */
    Builder setDuration(Integer duration);

    /**
     * see getter
     *
     * @param status see getter
     * @return Current builder
     * @see #getStatus
     */
    Builder setStatus(StatusEnum status);

    /**
     * see getter
     *
     * @param result see getter
     * @return Current builder
     * @see #getResult
     */
    Builder setResult(CallResult result);

    /**
     * see getter
     *
     * @param reason see getter
     * @return Current builder
     * @see #getReason
     */
    Builder setReason(ReasonEnum reason);

    /**
     * see getter
     *
     * @param timestamp see getter
     * @return Current builder
     * @see #getTimestamp
     */
    Builder setTimestamp(Instant timestamp);

    /**
     * see getter
     *
     * @param custom see getter
     * @return Current builder
     * @see #getCustom
     */
    Builder setCustom(String custom);

    /**
     * see getter
     *
     * @param userRate see getter
     * @return Current builder
     * @see #getUserRate
     */
    Builder setUserRate(Price userRate);

    /**
     * see getter
     *
     * @param debit see getter
     * @return Current builder
     * @see #getDebit
     */
    Builder setDebit(Price debit);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    CallInformation build();
  }
}
