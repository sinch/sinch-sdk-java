/*
 * Voice API | Sinch
 * The Voice API exposes calling- and conference-related functionality in the Sinch Voice Platform.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.math.BigDecimal;
import java.util.Objects;

/** An object containg currency and rate per minute for the call. */
@JsonPropertyOrder({
  DiceRequestUserRateDto.JSON_PROPERTY_CURRENCY_ID,
  DiceRequestUserRateDto.JSON_PROPERTY_AMOUNT
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class DiceRequestUserRateDto {
  public static final String JSON_PROPERTY_CURRENCY_ID = "currencyId";
  private String currencyId;
  private boolean currencyIdDefined = false;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private BigDecimal amount;
  private boolean amountDefined = false;

  public DiceRequestUserRateDto() {}

  public DiceRequestUserRateDto currencyId(String currencyId) {
    this.currencyId = currencyId;
    this.currencyIdDefined = true;
    return this;
  }

  /**
   * The currency in which the call is charged.
   *
   * @return currencyId
   */
  @JsonProperty(JSON_PROPERTY_CURRENCY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCurrencyId() {
    return currencyId;
  }

  @JsonIgnore
  public boolean getCurrencyIdDefined() {
    return currencyIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
    this.currencyIdDefined = true;
  }

  public DiceRequestUserRateDto amount(BigDecimal amount) {
    this.amount = amount;
    this.amountDefined = true;
    return this;
  }

  /**
   * The rate per minute that was charged for the call.
   *
   * @return amount
   */
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getAmount() {
    return amount;
  }

  @JsonIgnore
  public boolean getAmountDefined() {
    return amountDefined;
  }

  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(BigDecimal amount) {
    this.amount = amount;
    this.amountDefined = true;
  }

  /** Return true if this diceRequest_userRate object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiceRequestUserRateDto diceRequestUserRate = (DiceRequestUserRateDto) o;
    return Objects.equals(this.currencyId, diceRequestUserRate.currencyId)
        && Objects.equals(this.amount, diceRequestUserRate.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyId, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiceRequestUserRateDto {\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
