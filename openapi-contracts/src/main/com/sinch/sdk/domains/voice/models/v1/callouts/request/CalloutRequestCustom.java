/*
 * Voice API | Sinch
 *
 * OpenAPI document version: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.v1.callouts.request;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import com.sinch.sdk.domains.voice.models.v1.Destination;
import com.sinch.sdk.models.DualToneMultiFrequency;
import java.util.Arrays;
import java.util.stream.Stream;

/** CalloutRequestCustom */
@JsonDeserialize(builder = CalloutRequestCustomImpl.Builder.class)
public interface CalloutRequestCustom
    extends com.sinch.sdk.domains.voice.models.v1.callouts.CalloutRequest {

  /** Gets or Sets method */
  public class MethodEnum extends EnumDynamic<String, MethodEnum> {
    public static final MethodEnum CUSTOM_CALLOUT = new MethodEnum("customCallout");

    private static final EnumSupportDynamic<String, MethodEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(MethodEnum.class, MethodEnum::new, Arrays.asList(CUSTOM_CALLOUT));

    private MethodEnum(String value) {
      super(value);
    }

    public static Stream<MethodEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static MethodEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(MethodEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * The number that will be displayed as the incoming caller, to set your own CLI, you may use your
   * verified number or your Dashboard virtual number, it must be in <a
   * href="https://community.sinch.com/t5/Glossary/E-164/ta-p/7537">E.164</a> format.
   *
   * @return cli
   */
  String getCli();

  /**
   * Get destination
   *
   * @return destination
   */
  Destination getDestination();

  /**
   * When the destination picks up, this DTMF tones will be played to the callee. Valid characters
   * in the string are &quot;0&quot;-&quot;9&quot;, &quot;#&quot;, and &quot;w&quot;. A
   * &quot;w&quot; will render a 500 ms pause. For example, &quot;ww1234#w#&quot; will render a 1s
   * pause, the DTMF tones &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot; and
   * &quot;#&quot; followed by a 0.5s pause and finally the DTMF tone for &quot;#&quot;. This can be
   * used if the callout destination for instance require a conference PIN code or an extension to
   * be entered.
   *
   * @return dtmf
   */
  DualToneMultiFrequency getDtmf();

  /**
   * Can be used to input custom data.
   *
   * @return custom
   */
  String getCustom();

  /**
   * The maximum amount of time in seconds that the call will last.
   *
   * @return maxDuration
   */
  Integer getMaxDuration();

  /**
   * You can use inline <a
   * href="https://developers.sinch.com/docs/voice/api-reference/svaml/">SVAML</a> to replace a
   * callback URL when using custom callouts. Ensure that the JSON object is escaped correctly. If
   * inline ICE SVAML is passed, exclude <em>cli</em> and <em>destination</em> properties from the
   * <em>customCallout</em> request body. Example: <code>
   * \&quot;{\\\&quot;action\\\&quot;:{\\\&quot;name\\\&quot;:\\\&quot;connectPstn\\\&quot;,\\\&quot;number\\\&quot;:\\\&quot;46000000001\\\&quot;,\\\&quot;maxDuration\\\&quot;:90}}\&quot;
   * </code>
   *
   * @return ice
   */
  String getIce();

  /**
   * You can use inline <a href="../../../svaml/">SVAML</a> to replace a callback URL when using
   * custom callouts. Ensure that the JSON object is escaped correctly. Example: <code>
   * \&quot;{\\\&quot;action\\\&quot;: {\\\&quot;name\\\&quot;: \\\&quot;RunMenu\\\&quot;,\\\&quot;locale\\\&quot;: \\\&quot;en-US\\\&quot;,\\\&quot;menus\\\&quot;: [{\\\&quot;id\\\&quot;: \\\&quot;main\\\&quot;,\\\&quot;mainPrompt\\\&quot;: \\\&quot;#tts[ Welcome to the main menu. Press 1 for a callback or 2 for a cancel&lt;/speak&gt;]\\\&quot;,\\\&quot;timeoutMills\\\&quot;: 5000,\\\&quot;options\\\&quot;: [ {\\\&quot;dtmf\\\&quot;: \\\&quot;1\\\&quot;,\\\&quot;action\\\&quot;: \\\&quot;return(callback)\\\&quot;}, {\\\&quot;dtmf\\\&quot;: \\\&quot;2\\\&quot;,\\\&quot;action\\\&quot;: \\\&quot;return(cancel)\\\&quot;}]}]}}\&quot;
   * </code>
   *
   * @return ace
   */
  String getAce();

  /**
   * <b>Note:</b> PIE callbacks are not available for DATA Calls; only PSTN and SIP calls. You can
   * use inline <a href="https://developers.sinch.com/docs/voice/api-reference/svaml/">SVAML</a> to
   * replace a callback URL when using custom callouts. Ensure that the JSON object is escaped
   * correctly. A PIE event will contain a value chosen from an IVR choice. Usually a PIE event wil
   * contain a URL to a callback sever that will receive the choice and be able to parse it. This
   * could result in further SVAML or some other application logic function. Example: <code>
   * \&quot;https://your-application-server-host/application\&quot;</code>
   *
   * @return pie
   */
  String getPie();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new CalloutRequestCustomImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param cli see getter
     * @return Current builder
     * @see #getCli
     */
    Builder setCli(String cli);

    /**
     * see getter
     *
     * @param destination see getter
     * @return Current builder
     * @see #getDestination
     */
    Builder setDestination(Destination destination);

    /**
     * see getter
     *
     * @param dtmf see getter
     * @return Current builder
     * @see #getDtmf
     */
    Builder setDtmf(DualToneMultiFrequency dtmf);

    /**
     * see getter
     *
     * @param custom see getter
     * @return Current builder
     * @see #getCustom
     */
    Builder setCustom(String custom);

    /**
     * see getter
     *
     * @param maxDuration see getter
     * @return Current builder
     * @see #getMaxDuration
     */
    Builder setMaxDuration(Integer maxDuration);

    /**
     * see getter
     *
     * @param ice see getter
     * @return Current builder
     * @see #getIce
     */
    Builder setIce(String ice);

    /**
     * see getter
     *
     * @param ace see getter
     * @return Current builder
     * @see #getAce
     */
    Builder setAce(String ace);

    /**
     * see getter
     *
     * @param pie see getter
     * @return Current builder
     * @see #getPie
     */
    Builder setPie(String pie);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    CalloutRequestCustom build();
  }
}
