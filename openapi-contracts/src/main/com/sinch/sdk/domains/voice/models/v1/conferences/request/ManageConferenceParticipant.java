/*
 * Voice API | Sinch
 *
 * OpenAPI document version: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.v1.conferences.request;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import com.sinch.sdk.domains.voice.models.v1.MusicOnHold;
import java.util.Arrays;
import java.util.stream.Stream;

/** */
@JsonDeserialize(builder = ManageConferenceParticipantImpl.Builder.class)
public interface ManageConferenceParticipant {

  /** Action to apply on conference participant. */
  public class CommandEnum extends EnumDynamic<String, CommandEnum> {
    public static final CommandEnum MUTE = new CommandEnum("mute");
    public static final CommandEnum UNMUTE = new CommandEnum("unmute");
    public static final CommandEnum ONHOLD = new CommandEnum("onhold");
    public static final CommandEnum RESUME = new CommandEnum("resume");

    private static final EnumSupportDynamic<String, CommandEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(
            CommandEnum.class, CommandEnum::new, Arrays.asList(MUTE, UNMUTE, ONHOLD, RESUME));

    private CommandEnum(String value) {
      super(value);
    }

    public static Stream<CommandEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static CommandEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(CommandEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * Action to apply on conference participant.
   *
   * @return command
   */
  CommandEnum getCommand();

  /**
   * Means &quot;music on hold&quot;. If this optional parameter is included, plays music to the
   * first participant in a conference while they're alone and waiting for other participants to
   * join. If <code>moh</code> isn't specified, the user will only hear silence while alone in the
   * conference. This property is only available to use with the <code>onhold</code> command.
   *
   * @return moh
   */
  MusicOnHold getMoh();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new ManageConferenceParticipantImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param command see getter
     * @return Current builder
     * @see #getCommand
     */
    Builder setCommand(CommandEnum command);

    /**
     * see getter
     *
     * @param moh see getter
     * @return Current builder
     * @see #getMoh
     */
    Builder setMoh(MusicOnHold moh);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    ManageConferenceParticipant build();
  }
}
