/*
 * Voice API | Sinch
 *
 * OpenAPI document version: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.v1.svaml.action;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

/**
 * Plays an interactive voice response (IVR) menu to the callee. This menu can play pre-recorded
 * files or text-to-speech messages, collect DTMF tones, and trigger the <a
 * href="https://developers.sinch.com/docs/voice/api-reference/voice/tag/Callbacks/#tag/Callbacks/operation/pie">Prompt
 * Input Event</a> (PIE) callback towards your backend, notifying you of the actions the callee
 * took. Available to use in a response to an <a
 * href="https://developers.sinch.com/docs/voice/api-reference/voice/tag/Callbacks/#tag/Callbacks/operation/ice">Incoming
 * Call Event</a> callback or an <a
 * href="https://developers.sinch.com/docs/voice/api-reference/voice/tag/Callbacks/#tag/Callbacks/operation/ace">Answered
 * Call Event</a> callback. Also be used in combination with the <a
 * href="https://developers.sinch.com/docs/voice/api-reference/voice/tag/Conferences/#tag/Conferences">Conferences</a>
 * endpoint of the Calling API.
 */
@JsonDeserialize(builder = SvamlActionRunMenuImpl.Builder.class)
public interface SvamlActionRunMenu
    extends com.sinch.sdk.domains.voice.models.v1.svaml.action.SvamlAction {

  /** The name property. Must have the value <code>runMenu</code>. */
  public class NameEnum extends EnumDynamic<String, NameEnum> {
    public static final NameEnum RUN_MENU = new NameEnum("runMenu");

    private static final EnumSupportDynamic<String, NameEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(NameEnum.class, NameEnum::new, Arrays.asList(RUN_MENU));

    private NameEnum(String value) {
      super(value);
    }

    public static Stream<NameEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static NameEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(NameEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * 'Barging' means that the user can press a DTMF digit before the prompt has finished playing. If
   * a valid input is pressed, the message will stop playing and accept the input. If <code>barge
   * </code> is disabled, the user must listen to the entire prompt before input is accepted. By
   * default, barging is enabled.
   *
   * @return barge
   */
  Boolean getBarge();

  /**
   * The voice and language you want to use for the text-to-speech message. This can either be
   * defined by the ISO 639 locale and language code or by specifying a particular voice. Supported
   * languages and voices are detailed <a
   * href="https://developers.sinch.com/docs/voice/api-reference/voice-locales">here</a>. If using
   * the <code>enableVoice</code> to enable voice detection, the <code>locale</code> property is
   * required in order to select the input language.
   *
   * @return locale
   */
  String getLocale();

  /**
   * Selects the menu item from the <code>menus</code> array to play first.
   *
   * @return mainMenu
   */
  String getMainMenu();

  /**
   * Enables voice detection. If enabled, users can say their answers to prompts in addition to
   * entering them using the keypad.
   *
   * @return enableVoice
   */
  Boolean getEnableVoice();

  /**
   * The list of menus available. The menu with the <code>id</code> value of <code>main</code> will
   * always play first. If no menu has an <code>id</code> value of <code>main</code>, an error is
   * returned.
   *
   * @return menus
   */
  List<Menu> getMenus();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new SvamlActionRunMenuImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param barge see getter
     * @return Current builder
     * @see #getBarge
     */
    Builder setBarge(Boolean barge);

    /**
     * see getter
     *
     * @param locale see getter
     * @return Current builder
     * @see #getLocale
     */
    Builder setLocale(String locale);

    /**
     * see getter
     *
     * @param mainMenu see getter
     * @return Current builder
     * @see #getMainMenu
     */
    Builder setMainMenu(String mainMenu);

    /**
     * see getter
     *
     * @param enableVoice see getter
     * @return Current builder
     * @see #getEnableVoice
     */
    Builder setEnableVoice(Boolean enableVoice);

    /**
     * see getter
     *
     * @param menus see getter
     * @return Current builder
     * @see #getMenus
     */
    Builder setMenus(List<Menu> menus);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    SvamlActionRunMenu build();
  }
}
