/*
 * Voice API | Sinch
 *
 * OpenAPI document version: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.v1.svaml.action;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import java.util.Arrays;
import java.util.stream.Stream;

/**
 * Parks the call and places the caller on hold. The caller is placed into a loop, listening to an
 * IVR prompt (either a pre-recorded audio file or generated by text to speech). If the call is
 * unparked, prompts will stop playing immediately. If the max duration is reached, the last prompt
 * will be fully played until the call ends.
 */
@JsonDeserialize(builder = SvamlActionParkImpl.Builder.class)
public interface SvamlActionPark
    extends com.sinch.sdk.domains.voice.models.v1.svaml.action.SvamlAction {

  /** The name property. Must have the value <code>park</code>. */
  public class NameEnum extends EnumDynamic<String, NameEnum> {
    public static final NameEnum PARK = new NameEnum("park");

    private static final EnumSupportDynamic<String, NameEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(NameEnum.class, NameEnum::new, Arrays.asList(PARK));

    private NameEnum(String value) {
      super(value);
    }

    public static Stream<NameEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static NameEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(NameEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * The voice and language you want to use for the text-to-speech message. This can either be
   * defined by the ISO 639 locale and language code or by specifying a particular voice. Supported
   * languages and voices are detailed <a
   * href="https://developers.sinch.com/docs/voice/api-reference/voice-locales">here</a>.
   *
   * @return locale
   */
  String getLocale();

  /**
   * That prompt that is played when the call is first answered. You can use text-to-speech using
   * the <code>#tts[]</code> element, SSML commands using the <code>#ssml[]</code> element.
   *
   * @return introPrompt
   */
  String getIntroPrompt();

  /**
   * The prompt that is played on repeat until the call is unparked or the until the <code>
   * maxDuration</code> value is reached. You can use text-to-speech using the <code>#tts[]</code>
   * element, SSML commands using the <code>#ssml[]</code> element.
   *
   * @return holdPrompt
   */
  String getHoldPrompt();

  /**
   * The maximum amount of time in seconds that the <code>holdPrompt</code> will be played.
   *
   * @return maxDuration
   */
  Integer getMaxDuration();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new SvamlActionParkImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param locale see getter
     * @return Current builder
     * @see #getLocale
     */
    Builder setLocale(String locale);

    /**
     * see getter
     *
     * @param introPrompt see getter
     * @return Current builder
     * @see #getIntroPrompt
     */
    Builder setIntroPrompt(String introPrompt);

    /**
     * see getter
     *
     * @param holdPrompt see getter
     * @return Current builder
     * @see #getHoldPrompt
     */
    Builder setHoldPrompt(String holdPrompt);

    /**
     * see getter
     *
     * @param maxDuration see getter
     * @return Current builder
     * @see #getMaxDuration
     */
    Builder setMaxDuration(Integer maxDuration);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    SvamlActionPark build();
  }
}
