package com.sinch.sdk.domains.voice.models.v1.webhooks;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;
import com.sinch.sdk.core.models.OptionalValue;
import com.sinch.sdk.domains.voice.models.v1.Price;
import com.sinch.sdk.domains.voice.models.v1.calls.response.CallResult;
import com.sinch.sdk.domains.voice.models.v1.destination.Destination;
import com.sinch.sdk.domains.voice.models.v1.svaml.action.CallHeader;
import java.time.Instant;
import java.util.List;
import java.util.Objects;

@JsonPropertyOrder({
  DisconnectedCallEventImpl.JSON_PROPERTY_TIMESTAMP,
  DisconnectedCallEventImpl.JSON_PROPERTY_CUSTOM,
  DisconnectedCallEventImpl.JSON_PROPERTY_APPLICATION_KEY,
  DisconnectedCallEventImpl.JSON_PROPERTY_EVENT,
  DisconnectedCallEventImpl.JSON_PROPERTY_REASON,
  DisconnectedCallEventImpl.JSON_PROPERTY_RESULT,
  DisconnectedCallEventImpl.JSON_PROPERTY_DEBIT,
  DisconnectedCallEventImpl.JSON_PROPERTY_USER_RATE,
  DisconnectedCallEventImpl.JSON_PROPERTY_TO,
  DisconnectedCallEventImpl.JSON_PROPERTY_DURATION,
  DisconnectedCallEventImpl.JSON_PROPERTY_FROM,
  DisconnectedCallEventImpl.JSON_PROPERTY_CALL_HEADERS,
  DisconnectedCallEventImpl.JSON_PROPERTY_CALLID,
  DisconnectedCallEventImpl.JSON_PROPERTY_VERSION
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)

/*@JsonIgnoreProperties(
  value = "event", // ignore manually set event, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the event to be set during deserialization
)*/
/*@JsonTypeInfo(use = JsonTypeInfo.Id.NONE, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "event", visible = true)
 */

public class DisconnectedCallEventImpl
    implements DisconnectedCallEvent, VoiceWebhookEvent, VoiceWebhookCallEvent {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";

  private OptionalValue<Instant> timestamp;

  public static final String JSON_PROPERTY_CUSTOM = "custom";

  private OptionalValue<String> custom;

  public static final String JSON_PROPERTY_APPLICATION_KEY = "applicationKey";

  private OptionalValue<String> applicationKey;

  public static final String JSON_PROPERTY_EVENT = "event";

  private OptionalValue<WebhooksEventRequestType> event;

  public static final String JSON_PROPERTY_REASON = "reason";

  private OptionalValue<ReasonEnum> reason;

  public static final String JSON_PROPERTY_RESULT = "result";

  private OptionalValue<CallResult> result;

  public static final String JSON_PROPERTY_DEBIT = "debit";

  private OptionalValue<Price> debit;

  public static final String JSON_PROPERTY_USER_RATE = "userRate";

  private OptionalValue<Price> userRate;

  public static final String JSON_PROPERTY_TO = "to";

  private OptionalValue<Destination> to;

  public static final String JSON_PROPERTY_DURATION = "duration";

  private OptionalValue<Integer> duration;

  public static final String JSON_PROPERTY_FROM = "from";

  private OptionalValue<String> from;

  public static final String JSON_PROPERTY_CALL_HEADERS = "callHeaders";

  private OptionalValue<List<CallHeader>> callHeaders;

  public static final String JSON_PROPERTY_CALLID = "callid";

  private OptionalValue<String> callid;

  public static final String JSON_PROPERTY_VERSION = "version";

  private OptionalValue<Integer> version;

  public DisconnectedCallEventImpl() {}

  protected DisconnectedCallEventImpl(
      OptionalValue<Instant> timestamp,
      OptionalValue<String> custom,
      OptionalValue<String> applicationKey,
      OptionalValue<WebhooksEventRequestType> event,
      OptionalValue<ReasonEnum> reason,
      OptionalValue<CallResult> result,
      OptionalValue<Price> debit,
      OptionalValue<Price> userRate,
      OptionalValue<Destination> to,
      OptionalValue<Integer> duration,
      OptionalValue<String> from,
      OptionalValue<List<CallHeader>> callHeaders,
      OptionalValue<String> callid,
      OptionalValue<Integer> version) {
    this.timestamp = timestamp;
    this.custom = custom;
    this.applicationKey = applicationKey;
    this.event = event;
    this.reason = reason;
    this.result = result;
    this.debit = debit;
    this.userRate = userRate;
    this.to = to;
    this.duration = duration;
    this.from = from;
    this.callHeaders = callHeaders;
    this.callid = callid;
    this.version = version;
  }

  @JsonIgnore
  public Instant getTimestamp() {
    return timestamp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Instant> timestamp() {
    return timestamp;
  }

  @JsonIgnore
  public String getCustom() {
    return custom.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> custom() {
    return custom;
  }

  @JsonIgnore
  public String getApplicationKey() {
    return applicationKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLICATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> applicationKey() {
    return applicationKey;
  }

  @JsonIgnore
  public WebhooksEventRequestType getEvent() {
    return event.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OptionalValue<WebhooksEventRequestType> event() {
    return event;
  }

  @JsonIgnore
  public ReasonEnum getReason() {
    return reason.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<ReasonEnum> reason() {
    return reason;
  }

  @JsonIgnore
  public CallResult getResult() {
    return result.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<CallResult> result() {
    return result;
  }

  @JsonIgnore
  public Price getDebit() {
    return debit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Price> debit() {
    return debit;
  }

  @JsonIgnore
  public Price getUserRate() {
    return userRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Price> userRate() {
    return userRate;
  }

  @JsonIgnore
  public Destination getTo() {
    return to.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Destination> to() {
    return to;
  }

  @JsonIgnore
  public Integer getDuration() {
    return duration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Integer> duration() {
    return duration;
  }

  @JsonIgnore
  public String getFrom() {
    return from.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> from() {
    return from;
  }

  @JsonIgnore
  public List<CallHeader> getCallHeaders() {
    return callHeaders.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CALL_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<List<CallHeader>> callHeaders() {
    return callHeaders;
  }

  @JsonIgnore
  public String getCallid() {
    return callid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CALLID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<String> callid() {
    return callid;
  }

  @JsonIgnore
  public Integer getVersion() {
    return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptionalValue<Integer> version() {
    return version;
  }

  /** Return true if this diceRequest object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DisconnectedCallEventImpl diceRequest = (DisconnectedCallEventImpl) o;
    return Objects.equals(this.timestamp, diceRequest.timestamp)
        && Objects.equals(this.custom, diceRequest.custom)
        && Objects.equals(this.applicationKey, diceRequest.applicationKey)
        && Objects.equals(this.event, diceRequest.event)
        && Objects.equals(this.reason, diceRequest.reason)
        && Objects.equals(this.result, diceRequest.result)
        && Objects.equals(this.debit, diceRequest.debit)
        && Objects.equals(this.userRate, diceRequest.userRate)
        && Objects.equals(this.to, diceRequest.to)
        && Objects.equals(this.duration, diceRequest.duration)
        && Objects.equals(this.from, diceRequest.from)
        && Objects.equals(this.callHeaders, diceRequest.callHeaders)
        && Objects.equals(this.callid, diceRequest.callid)
        && Objects.equals(this.version, diceRequest.version)
        && super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        timestamp,
        custom,
        applicationKey,
        event,
        reason,
        result,
        debit,
        userRate,
        to,
        duration,
        from,
        callHeaders,
        callid,
        version,
        super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DisconnectedCallEventImpl {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    applicationKey: ").append(toIndentedString(applicationKey)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    debit: ").append(toIndentedString(debit)).append("\n");
    sb.append("    userRate: ").append(toIndentedString(userRate)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    callHeaders: ").append(toIndentedString(callHeaders)).append("\n");
    sb.append("    callid: ").append(toIndentedString(callid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  @JsonPOJOBuilder(withPrefix = "set")
  static class Builder implements DisconnectedCallEvent.Builder {
    OptionalValue<Instant> timestamp = OptionalValue.empty();
    OptionalValue<String> custom = OptionalValue.empty();
    OptionalValue<String> applicationKey = OptionalValue.empty();
    OptionalValue<WebhooksEventRequestType> event = OptionalValue.of(WebhooksEventRequestType.DICE);
    OptionalValue<ReasonEnum> reason = OptionalValue.empty();
    OptionalValue<CallResult> result = OptionalValue.empty();
    OptionalValue<Price> debit = OptionalValue.empty();
    OptionalValue<Price> userRate = OptionalValue.empty();
    OptionalValue<Destination> to = OptionalValue.empty();
    OptionalValue<Integer> duration = OptionalValue.empty();
    OptionalValue<String> from = OptionalValue.empty();
    OptionalValue<List<CallHeader>> callHeaders = OptionalValue.empty();
    OptionalValue<String> callid = OptionalValue.empty();
    OptionalValue<Integer> version = OptionalValue.empty();

    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    public Builder setTimestamp(Instant timestamp) {
      this.timestamp = OptionalValue.of(timestamp);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOM)
    public Builder setCustom(String custom) {
      this.custom = OptionalValue.of(custom);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_APPLICATION_KEY)
    public Builder setApplicationKey(String applicationKey) {
      this.applicationKey = OptionalValue.of(applicationKey);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_REASON)
    public Builder setReason(ReasonEnum reason) {
      this.reason = OptionalValue.of(reason);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_RESULT)
    public Builder setResult(CallResult result) {
      this.result = OptionalValue.of(result);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_DEBIT)
    public Builder setDebit(Price debit) {
      this.debit = OptionalValue.of(debit);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_USER_RATE)
    public Builder setUserRate(Price userRate) {
      this.userRate = OptionalValue.of(userRate);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_TO)
    public Builder setTo(Destination to) {
      this.to = OptionalValue.of(to);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_DURATION)
    public Builder setDuration(Integer duration) {
      this.duration = OptionalValue.of(duration);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_FROM)
    public Builder setFrom(String from) {
      this.from = OptionalValue.of(from);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_CALL_HEADERS)
    public Builder setCallHeaders(List<CallHeader> callHeaders) {
      this.callHeaders = OptionalValue.of(callHeaders);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_CALLID)
    public Builder setCallid(String callid) {
      this.callid = OptionalValue.of(callid);
      return this;
    }

    @JsonProperty(JSON_PROPERTY_VERSION)
    public Builder setVersion(Integer version) {
      this.version = OptionalValue.of(version);
      return this;
    }

    public DisconnectedCallEvent build() {
      return new DisconnectedCallEventImpl(
          timestamp,
          custom,
          applicationKey,
          event,
          reason,
          result,
          debit,
          userRate,
          to,
          duration,
          from,
          callHeaders,
          callid,
          version);
    }
  }
}
