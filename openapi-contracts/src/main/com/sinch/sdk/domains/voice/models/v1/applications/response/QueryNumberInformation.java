/*
 * Voice API | Sinch
 *
 * OpenAPI document version: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.v1.applications.response;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import com.sinch.sdk.domains.voice.models.v1.Price;
import java.util.Arrays;
import java.util.stream.Stream;

/** The number item object. */
@JsonDeserialize(builder = QueryNumberInformationImpl.Builder.class)
public interface QueryNumberInformation {

  /**
   * The ISO 3166-1 formatted country code.
   *
   * @return countryId
   */
  String getCountryId();

  /** The type of the number. */
  public class NumberTypeEnum extends EnumDynamic<String, NumberTypeEnum> {
    public static final NumberTypeEnum UNKNOWN = new NumberTypeEnum("Unknown");
    public static final NumberTypeEnum FIXED = new NumberTypeEnum("Fixed");
    public static final NumberTypeEnum MOBILE = new NumberTypeEnum("Mobile");
    public static final NumberTypeEnum OTHER = new NumberTypeEnum("Other");

    private static final EnumSupportDynamic<String, NumberTypeEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(
            NumberTypeEnum.class,
            NumberTypeEnum::new,
            Arrays.asList(UNKNOWN, FIXED, MOBILE, OTHER));

    private NumberTypeEnum(String value) {
      super(value);
    }

    public static Stream<NumberTypeEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static NumberTypeEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(NumberTypeEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * The type of the number.
   *
   * @return numberType
   */
  NumberTypeEnum getNumberType();

  /**
   * The number in E.164 format.
   *
   * @return normalizedNumber
   */
  String getNormalizedNumber();

  /**
   * Concerns whether the call is restricted or not.
   *
   * @return restricted
   */
  Boolean getRestricted();

  /**
   * Get rate
   *
   * @return rate
   */
  Price getRate();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new QueryNumberInformationImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param countryId see getter
     * @return Current builder
     * @see #getCountryId
     */
    Builder setCountryId(String countryId);

    /**
     * see getter
     *
     * @param numberType see getter
     * @return Current builder
     * @see #getNumberType
     */
    Builder setNumberType(NumberTypeEnum numberType);

    /**
     * see getter
     *
     * @param normalizedNumber see getter
     * @return Current builder
     * @see #getNormalizedNumber
     */
    Builder setNormalizedNumber(String normalizedNumber);

    /**
     * see getter
     *
     * @param restricted see getter
     * @return Current builder
     * @see #getRestricted
     */
    Builder setRestricted(Boolean restricted);

    /**
     * see getter
     *
     * @param rate see getter
     * @return Current builder
     * @see #getRate
     */
    Builder setRate(Price rate);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    QueryNumberInformation build();
  }
}
