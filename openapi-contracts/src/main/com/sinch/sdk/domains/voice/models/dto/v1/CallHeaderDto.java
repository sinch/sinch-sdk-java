/*
 * Voice API | Sinch
 * The Voice API exposes calling- and conference-related functionality in the Sinch Voice Platform.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/**
 * Call Headers can be used to pass custom data from a Sinch SDK client to another, or specified in
 * an ICE response to be made available to the receiving client. Further, if Call Headers is
 * specified they will be available in ICE and DICE events.
 */
@JsonPropertyOrder({CallHeaderDto.JSON_PROPERTY_KEY, CallHeaderDto.JSON_PROPERTY_VALUE})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class CallHeaderDto {
  public static final String JSON_PROPERTY_KEY = "key";
  private String key;
  private boolean keyDefined = false;

  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;
  private boolean valueDefined = false;

  public CallHeaderDto() {}

  public CallHeaderDto key(String key) {
    this.key = key;
    this.keyDefined = true;
    return this;
  }

  /**
   * The call header key of the key value pair.
   *
   * @return key
   */
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getKey() {
    return key;
  }

  @JsonIgnore
  public boolean getKeyDefined() {
    return keyDefined;
  }

  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
    this.keyDefined = true;
  }

  public CallHeaderDto value(String value) {
    this.value = value;
    this.valueDefined = true;
    return this;
  }

  /**
   * The call header value of the key value pair.
   *
   * @return value
   */
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getValue() {
    return value;
  }

  @JsonIgnore
  public boolean getValueDefined() {
    return valueDefined;
  }

  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(String value) {
    this.value = value;
    this.valueDefined = true;
  }

  /** Return true if this callHeader object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallHeaderDto callHeader = (CallHeaderDto) o;
    return Objects.equals(this.key, callHeader.key) && Objects.equals(this.value, callHeader.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallHeaderDto {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
