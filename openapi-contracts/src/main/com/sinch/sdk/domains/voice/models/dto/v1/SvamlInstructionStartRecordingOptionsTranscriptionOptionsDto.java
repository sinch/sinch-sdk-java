/*
 * Voice API | Sinch
 * The Voice API exposes calling- and conference-related functionality in the Sinch Voice Platform.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto */
@JsonPropertyOrder({
  SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto.JSON_PROPERTY_ENABLED,
  SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto.JSON_PROPERTY_LOCALE
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;
  private boolean enabledDefined = false;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private String locale;
  private boolean localeDefined = false;

  public SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto() {}

  public SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto enabled(Boolean enabled) {
    this.enabled = enabled;
    this.enabledDefined = true;
    return this;
  }

  /**
   * Get enabled
   *
   * @return enabled
   */
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnabled() {
    return enabled;
  }

  @JsonIgnore
  public boolean getEnabledDefined() {
    return enabledDefined;
  }

  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
    this.enabledDefined = true;
  }

  public SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto locale(String locale) {
    this.locale = locale;
    this.localeDefined = true;
    return this;
  }

  /**
   * Get locale
   *
   * @return locale
   */
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLocale() {
    return locale;
  }

  @JsonIgnore
  public boolean getLocaleDefined() {
    return localeDefined;
  }

  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocale(String locale) {
    this.locale = locale;
    this.localeDefined = true;
  }

  /**
   * Return true if this svaml_instruction_startRecordingOptions_transcriptionOptions object is
   * equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto
        svamlInstructionStartRecordingOptionsTranscriptionOptions =
            (SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto) o;
    return Objects.equals(
            this.enabled, svamlInstructionStartRecordingOptionsTranscriptionOptions.enabled)
        && Objects.equals(
            this.locale, svamlInstructionStartRecordingOptionsTranscriptionOptions.locale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, locale);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SvamlInstructionStartRecordingOptionsTranscriptionOptionsDto {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
