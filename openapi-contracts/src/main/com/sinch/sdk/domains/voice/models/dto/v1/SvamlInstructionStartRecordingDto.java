/*
 * Voice API | Sinch
 * The Voice API exposes calling- and conference-related functionality in the Sinch Voice Platform.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** Starts a recording of the call. */
@JsonPropertyOrder({
  SvamlInstructionStartRecordingDto.JSON_PROPERTY_NAME,
  SvamlInstructionStartRecordingDto.JSON_PROPERTY_OPTIONS
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class SvamlInstructionStartRecordingDto {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;
  private boolean nameDefined = false;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private Object options;
  private boolean optionsDefined = false;

  public SvamlInstructionStartRecordingDto() {}

  public SvamlInstructionStartRecordingDto name(String name) {
    this.name = name;
    this.nameDefined = true;
    return this;
  }

  /**
   * The &#x60;name&#x60; property. Must have the value &#x60;startRecording&#x60;.
   *
   * @return name
   */
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }

  @JsonIgnore
  public boolean getNameDefined() {
    return nameDefined;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
    this.nameDefined = true;
  }

  public SvamlInstructionStartRecordingDto options(Object options) {
    this.options = options;
    this.optionsDefined = true;
    return this;
  }

  /**
   * An object that specifies details about the recording. For more details, see [Recording
   * Options](../../recording/#recording-options).
   *
   * @return options
   */
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getOptions() {
    return options;
  }

  @JsonIgnore
  public boolean getOptionsDefined() {
    return optionsDefined;
  }

  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(Object options) {
    this.options = options;
    this.optionsDefined = true;
  }

  /** Return true if this svaml.instruction.startRecording object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SvamlInstructionStartRecordingDto svamlInstructionStartRecording =
        (SvamlInstructionStartRecordingDto) o;
    return Objects.equals(this.name, svamlInstructionStartRecording.name)
        && Objects.equals(this.options, svamlInstructionStartRecording.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, options);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SvamlInstructionStartRecordingDto {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
