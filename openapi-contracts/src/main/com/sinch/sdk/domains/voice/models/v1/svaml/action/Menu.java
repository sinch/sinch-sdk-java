/*
 * Voice API | Sinch
 *
 * OpenAPI document version: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.v1.svaml.action;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.List;

/** An IVR menu that contains an audio prompt as well as configured options. */
@JsonDeserialize(builder = MenuImpl.Builder.class)
public interface Menu {

  /**
   * The identifier of a menu. One menu must have the ID value of <code>main</code>.
   *
   * @return id
   */
  String getId();

  /**
   * The main voice prompt that the user hears when the menu starts the first time. You can use
   * text-to-speech using the <code>#tts[]</code> element, SSML commands using the <code>#ssml[]
   * </code> element, pre-recorded messages, or URL references to external media resources. You can
   * use multiple prompts by separating each prompt with a semi-colon (<code>;</code>). If multiple
   * prompts are used, they will be played in the order they are specified, without any pauses
   * between playback. For external media resources, you can use an <code>#href[...]</code> or
   * directly specify the full URL. Check the <a
   * href="https://developers.sinch.com/docs/voice/api-reference/supported-audio-formats">Supported
   * audio formats</a> section for more information.
   *
   * @return mainPrompt
   */
  String getMainPrompt();

  /**
   * The prompt that will be played if valid or expected DTMF digits are not entered. You can use
   * text-to-speech using the <code>#tts[]</code> element, SSML commands using the <code>#ssml[]
   * </code> element, pre-recorded messages, or URL references to external media resources. You can
   * use multiple prompts by separating each prompt with a semi-colon (<code>;</code>). If multiple
   * prompts are used, they will be played in the order they are specified, without any pauses
   * between playback. For external media resources, you can use an <code>#href[...]</code> or
   * directly specify the full URL. Check the <a
   * href="https://developers.sinch.com/docs/voice/api-reference/supported-audio-formats">Supported
   * audio formats</a> section for more information.
   *
   * @return repeatPrompt
   */
  String getRepeatPrompt();

  /**
   * The number of times that the <code>repeatPrompt</code> is played.
   *
   * @return repeats
   */
  Integer getRepeats();

  /**
   * The maximum number of digits expected for a user to enter. Once these digits are collected, a
   * <a
   * href="https://developers.sinch.com/docs/voice/api-reference/voice/tag/Callbacks/#tag/Callbacks/operation/pie">Prompt
   * Input Event (PIE)</a> is triggered containing these digits.
   *
   * @return maxDigits
   */
  Integer getMaxDigits();

  /**
   * Determines silence for the purposes of collecting a DTMF or voice response in milliseconds. If
   * the timeout is reached, the response is considered completed and will be submitted.
   *
   * @return timeoutMills
   */
  Integer getTimeoutMills();

  /**
   * Sets a limit for the maximum amount of time allowed to collect voice input.
   *
   * @return maxTimeoutMills
   */
  Integer getMaxTimeoutMills();

  /**
   * The set of options available in the menu.
   *
   * @return options
   */
  List<MenuOption> getOptions();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new MenuImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param id see getter
     * @return Current builder
     * @see #getId
     */
    Builder setId(String id);

    /**
     * see getter
     *
     * @param mainPrompt see getter
     * @return Current builder
     * @see #getMainPrompt
     */
    Builder setMainPrompt(String mainPrompt);

    /**
     * see getter
     *
     * @param repeatPrompt see getter
     * @return Current builder
     * @see #getRepeatPrompt
     */
    Builder setRepeatPrompt(String repeatPrompt);

    /**
     * see getter
     *
     * @param repeats see getter
     * @return Current builder
     * @see #getRepeats
     */
    Builder setRepeats(Integer repeats);

    /**
     * see getter
     *
     * @param maxDigits see getter
     * @return Current builder
     * @see #getMaxDigits
     */
    Builder setMaxDigits(Integer maxDigits);

    /**
     * see getter
     *
     * @param timeoutMills see getter
     * @return Current builder
     * @see #getTimeoutMills
     */
    Builder setTimeoutMills(Integer timeoutMills);

    /**
     * see getter
     *
     * @param maxTimeoutMills see getter
     * @return Current builder
     * @see #getMaxTimeoutMills
     */
    Builder setMaxTimeoutMills(Integer maxTimeoutMills);

    /**
     * see getter
     *
     * @param options see getter
     * @return Current builder
     * @see #getOptions
     */
    Builder setOptions(List<MenuOption> options);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    Menu build();
  }
}
