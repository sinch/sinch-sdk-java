/*
 * Voice API | Sinch
 * The Voice API exposes calling- and conference-related functionality in the Sinch Voice Platform.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/**
 * The conference callout calls a phone number or a user. When the call is answered, it&#39;s
 * connected to a conference room.
 */
@JsonPropertyOrder({
  ConferenceCalloutRequestDto.JSON_PROPERTY_DESTINATION,
  ConferenceCalloutRequestDto.JSON_PROPERTY_CONFERENCE_ID,
  ConferenceCalloutRequestDto.JSON_PROPERTY_CLI,
  ConferenceCalloutRequestDto.JSON_PROPERTY_CONFERENCE_DTMF_OPTIONS,
  ConferenceCalloutRequestDto.JSON_PROPERTY_DTMF,
  ConferenceCalloutRequestDto.JSON_PROPERTY_MAX_DURATION,
  ConferenceCalloutRequestDto.JSON_PROPERTY_ENABLE_ACE,
  ConferenceCalloutRequestDto.JSON_PROPERTY_ENABLE_DICE,
  ConferenceCalloutRequestDto.JSON_PROPERTY_ENABLE_PIE,
  ConferenceCalloutRequestDto.JSON_PROPERTY_LOCALE,
  ConferenceCalloutRequestDto.JSON_PROPERTY_GREETING,
  ConferenceCalloutRequestDto.JSON_PROPERTY_MOH_CLASS,
  ConferenceCalloutRequestDto.JSON_PROPERTY_CUSTOM,
  ConferenceCalloutRequestDto.JSON_PROPERTY_DOMAIN
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class ConferenceCalloutRequestDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_DESTINATION = "destination";
  private DestinationDto destination;
  private boolean destinationDefined = false;

  public static final String JSON_PROPERTY_CONFERENCE_ID = "conferenceId";
  private String conferenceId;
  private boolean conferenceIdDefined = false;

  public static final String JSON_PROPERTY_CLI = "cli";
  private String cli;
  private boolean cliDefined = false;

  public static final String JSON_PROPERTY_CONFERENCE_DTMF_OPTIONS = "conferenceDtmfOptions";
  private ConferenceCalloutRequestConferenceDtmfOptionsDto conferenceDtmfOptions;
  private boolean conferenceDtmfOptionsDefined = false;

  public static final String JSON_PROPERTY_DTMF = "dtmf";
  private String dtmf;
  private boolean dtmfDefined = false;

  public static final String JSON_PROPERTY_MAX_DURATION = "maxDuration";
  private Integer maxDuration;
  private boolean maxDurationDefined = false;

  public static final String JSON_PROPERTY_ENABLE_ACE = "enableAce";
  private Boolean enableAce;
  private boolean enableAceDefined = false;

  public static final String JSON_PROPERTY_ENABLE_DICE = "enableDice";
  private Boolean enableDice;
  private boolean enableDiceDefined = false;

  public static final String JSON_PROPERTY_ENABLE_PIE = "enablePie";
  private Boolean enablePie;
  private boolean enablePieDefined = false;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private String locale;
  private boolean localeDefined = false;

  public static final String JSON_PROPERTY_GREETING = "greeting";
  private String greeting;
  private boolean greetingDefined = false;

  public static final String JSON_PROPERTY_MOH_CLASS = "mohClass";
  private String mohClass;
  private boolean mohClassDefined = false;

  public static final String JSON_PROPERTY_CUSTOM = "custom";
  private String custom;
  private boolean customDefined = false;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;
  private boolean domainDefined = false;

  public ConferenceCalloutRequestDto() {}

  public ConferenceCalloutRequestDto destination(DestinationDto destination) {
    this.destination = destination;
    this.destinationDefined = true;
    return this;
  }

  /**
   * Get destination
   *
   * @return destination
   */
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public DestinationDto getDestination() {
    return destination;
  }

  @JsonIgnore
  public boolean getDestinationDefined() {
    return destinationDefined;
  }

  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDestination(DestinationDto destination) {
    this.destination = destination;
    this.destinationDefined = true;
  }

  public ConferenceCalloutRequestDto conferenceId(String conferenceId) {
    this.conferenceId = conferenceId;
    this.conferenceIdDefined = true;
    return this;
  }

  /**
   * The conferenceId of the conference to which you want the callee to join. If the conferenceId
   * doesn&#39;t exist a conference room will be created.
   *
   * @return conferenceId
   */
  @JsonProperty(JSON_PROPERTY_CONFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getConferenceId() {
    return conferenceId;
  }

  @JsonIgnore
  public boolean getConferenceIdDefined() {
    return conferenceIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_CONFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConferenceId(String conferenceId) {
    this.conferenceId = conferenceId;
    this.conferenceIdDefined = true;
  }

  public ConferenceCalloutRequestDto cli(String cli) {
    this.cli = cli;
    this.cliDefined = true;
    return this;
  }

  /**
   * The number that will be displayed as the incoming caller. To set your own CLI, you may use your
   * verified number or your Dashboard number. The number must be in
   * [E.164](https://community.sinch.com/t5/Glossary/E-164/ta-p/7537) format.
   *
   * @return cli
   */
  @JsonProperty(JSON_PROPERTY_CLI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCli() {
    return cli;
  }

  @JsonIgnore
  public boolean getCliDefined() {
    return cliDefined;
  }

  @JsonProperty(JSON_PROPERTY_CLI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCli(String cli) {
    this.cli = cli;
    this.cliDefined = true;
  }

  public ConferenceCalloutRequestDto conferenceDtmfOptions(
      ConferenceCalloutRequestConferenceDtmfOptionsDto conferenceDtmfOptions) {
    this.conferenceDtmfOptions = conferenceDtmfOptions;
    this.conferenceDtmfOptionsDefined = true;
    return this;
  }

  /**
   * Get conferenceDtmfOptions
   *
   * @return conferenceDtmfOptions
   */
  @JsonProperty(JSON_PROPERTY_CONFERENCE_DTMF_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ConferenceCalloutRequestConferenceDtmfOptionsDto getConferenceDtmfOptions() {
    return conferenceDtmfOptions;
  }

  @JsonIgnore
  public boolean getConferenceDtmfOptionsDefined() {
    return conferenceDtmfOptionsDefined;
  }

  @JsonProperty(JSON_PROPERTY_CONFERENCE_DTMF_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConferenceDtmfOptions(
      ConferenceCalloutRequestConferenceDtmfOptionsDto conferenceDtmfOptions) {
    this.conferenceDtmfOptions = conferenceDtmfOptions;
    this.conferenceDtmfOptionsDefined = true;
  }

  public ConferenceCalloutRequestDto dtmf(String dtmf) {
    this.dtmf = dtmf;
    this.dtmfDefined = true;
    return this;
  }

  /**
   * When the destination picks up, this DTMF tones will be played to the callee. Valid characters
   * in the string are \&quot;0\&quot;-\&quot;9\&quot;, \&quot;#\&quot; and \&quot;w\&quot;. A
   * \&quot;w\&quot; will render a 500 ms pause. Example: \&quot;ww1234#w#\&quot; will render a 1s
   * pause, the DTMF tones \&quot;1\&quot;, \&quot;2\&quot;, \&quot;3\&quot;, \&quot;4\&quot; and
   * \&quot;#\&quot; followed by a 0.5s pause and finally the DTMF tone for \&quot;#\&quot;. This
   * can be used if the callout destination for instance require a conference PIN code or an
   * extension to be entered.
   *
   * @return dtmf
   */
  @JsonProperty(JSON_PROPERTY_DTMF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDtmf() {
    return dtmf;
  }

  @JsonIgnore
  public boolean getDtmfDefined() {
    return dtmfDefined;
  }

  @JsonProperty(JSON_PROPERTY_DTMF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDtmf(String dtmf) {
    this.dtmf = dtmf;
    this.dtmfDefined = true;
  }

  public ConferenceCalloutRequestDto maxDuration(Integer maxDuration) {
    this.maxDuration = maxDuration;
    this.maxDurationDefined = true;
    return this;
  }

  /**
   * Get maxDuration
   *
   * @return maxDuration
   */
  @JsonProperty(JSON_PROPERTY_MAX_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getMaxDuration() {
    return maxDuration;
  }

  @JsonIgnore
  public boolean getMaxDurationDefined() {
    return maxDurationDefined;
  }

  @JsonProperty(JSON_PROPERTY_MAX_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxDuration(Integer maxDuration) {
    this.maxDuration = maxDuration;
    this.maxDurationDefined = true;
  }

  public ConferenceCalloutRequestDto enableAce(Boolean enableAce) {
    this.enableAce = enableAce;
    this.enableAceDefined = true;
    return this;
  }

  /**
   * If &#x60;enableAce&#x60; is set to true and the application has a callback URL specified, you
   * will receive an ACE callback when the call is answered. When the callback is received, your
   * platform must respond with a svamlet containing the &#x60;connectConf&#x60; action in order to
   * add the call to a conference or create the conference if it&#39;s the first call. If it&#39;s
   * set to false, no ACE event will be sent to your backend.&lt;br&gt;&lt;b&gt;Note &lt;/b&gt; if
   * the call is towards an InApp destination &#x60;type:&#x60; &#x60;username&#x60;, then no ACE
   * will be issued when the call is connected, even if &#x60;enableAce&#x60; is present in the
   * callout request.
   *
   * @return enableAce
   */
  @JsonProperty(JSON_PROPERTY_ENABLE_ACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableAce() {
    return enableAce;
  }

  @JsonIgnore
  public boolean getEnableAceDefined() {
    return enableAceDefined;
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_ACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableAce(Boolean enableAce) {
    this.enableAce = enableAce;
    this.enableAceDefined = true;
  }

  public ConferenceCalloutRequestDto enableDice(Boolean enableDice) {
    this.enableDice = enableDice;
    this.enableDiceDefined = true;
    return this;
  }

  /**
   * If &#x60;enableDice&#x60; is set to true and the application has a callback URL specified, you
   * will receive a DiCE callback when the call is disconnected. If it&#39;s set to false, no DiCE
   * event will be sent to your backend.&lt;br&gt;&lt;b&gt;Note&lt;/b&gt; if the call is towards an
   * InApp destination &#x60;type:&#x60; &#x60;username&#x60;, then no DICE will be issued at the
   * end of the call, even if &#x60;enableDice&#x60; is present in the callout request.
   *
   * @return enableDice
   */
  @JsonProperty(JSON_PROPERTY_ENABLE_DICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableDice() {
    return enableDice;
  }

  @JsonIgnore
  public boolean getEnableDiceDefined() {
    return enableDiceDefined;
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_DICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableDice(Boolean enableDice) {
    this.enableDice = enableDice;
    this.enableDiceDefined = true;
  }

  public ConferenceCalloutRequestDto enablePie(Boolean enablePie) {
    this.enablePie = enablePie;
    this.enablePieDefined = true;
    return this;
  }

  /**
   * If &#x60;enablePie&#x60; is set to true and the application has a callback URL specified, you
   * will receive a PIE callback after a &#x60;runMenu&#x60; action, with the information of the
   * action that the user took. If it&#39;s set to false, no PIE event will be sent to your backend.
   *
   * @return enablePie
   */
  @JsonProperty(JSON_PROPERTY_ENABLE_PIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnablePie() {
    return enablePie;
  }

  @JsonIgnore
  public boolean getEnablePieDefined() {
    return enablePieDefined;
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_PIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnablePie(Boolean enablePie) {
    this.enablePie = enablePie;
    this.enablePieDefined = true;
  }

  public ConferenceCalloutRequestDto locale(String locale) {
    this.locale = locale;
    this.localeDefined = true;
    return this;
  }

  /**
   * The voice and language you want to use for the prompts. This can either be defined by the ISO
   * 639 locale and language code or by specifying a particular voice. Supported languages and
   * voices are detailed [here](../../../voice-locales/)
   *
   * @return locale
   */
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLocale() {
    return locale;
  }

  @JsonIgnore
  public boolean getLocaleDefined() {
    return localeDefined;
  }

  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocale(String locale) {
    this.locale = locale;
    this.localeDefined = true;
  }

  public ConferenceCalloutRequestDto greeting(String greeting) {
    this.greeting = greeting;
    this.greetingDefined = true;
    return this;
  }

  /**
   * The text that will be spoken as a greeting.
   *
   * @return greeting
   */
  @JsonProperty(JSON_PROPERTY_GREETING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getGreeting() {
    return greeting;
  }

  @JsonIgnore
  public boolean getGreetingDefined() {
    return greetingDefined;
  }

  @JsonProperty(JSON_PROPERTY_GREETING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGreeting(String greeting) {
    this.greeting = greeting;
    this.greetingDefined = true;
  }

  public ConferenceCalloutRequestDto mohClass(String mohClass) {
    this.mohClass = mohClass;
    this.mohClassDefined = true;
    return this;
  }

  /**
   * Means \&quot;music-on-hold.\&quot; It&#39;s an optional parameter that specifies what the first
   * participant should listen to while they&#39;re alone in the conference, waiting for other
   * participants to join. It can take one of these pre-defined
   * values:&lt;ul&gt;&lt;li&gt;&#x60;ring&#x60; (progress
   * tone)&lt;/li&gt;&lt;li&gt;&#x60;music1&#x60; (music
   * file)&lt;/li&gt;&lt;li&gt;&#x60;music2&#x60; (music
   * file)&lt;/li&gt;&lt;li&gt;&#x60;music3&#x60; (music file)&lt;/li&gt;&lt;/ul&gt;&lt;/br&gt;If no
   * “music-on-hold” is specified, the user will only hear silence.
   *
   * @return mohClass
   */
  @JsonProperty(JSON_PROPERTY_MOH_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMohClass() {
    return mohClass;
  }

  @JsonIgnore
  public boolean getMohClassDefined() {
    return mohClassDefined;
  }

  @JsonProperty(JSON_PROPERTY_MOH_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMohClass(String mohClass) {
    this.mohClass = mohClass;
    this.mohClassDefined = true;
  }

  public ConferenceCalloutRequestDto custom(String custom) {
    this.custom = custom;
    this.customDefined = true;
    return this;
  }

  /**
   * Used to input custom data.
   *
   * @return custom
   */
  @JsonProperty(JSON_PROPERTY_CUSTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCustom() {
    return custom;
  }

  @JsonIgnore
  public boolean getCustomDefined() {
    return customDefined;
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustom(String custom) {
    this.custom = custom;
    this.customDefined = true;
  }

  public ConferenceCalloutRequestDto domain(String domain) {
    this.domain = domain;
    this.domainDefined = true;
    return this;
  }

  /**
   * can be either “pstn” for PSTN endpoint or “mxp” for data (app or web) clients.
   *
   * @return domain
   */
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDomain() {
    return domain;
  }

  @JsonIgnore
  public boolean getDomainDefined() {
    return domainDefined;
  }

  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
    this.domainDefined = true;
  }

  /** Return true if this conferenceCalloutRequest object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConferenceCalloutRequestDto conferenceCalloutRequest = (ConferenceCalloutRequestDto) o;
    return Objects.equals(this.destination, conferenceCalloutRequest.destination)
        && Objects.equals(this.conferenceId, conferenceCalloutRequest.conferenceId)
        && Objects.equals(this.cli, conferenceCalloutRequest.cli)
        && Objects.equals(
            this.conferenceDtmfOptions, conferenceCalloutRequest.conferenceDtmfOptions)
        && Objects.equals(this.dtmf, conferenceCalloutRequest.dtmf)
        && Objects.equals(this.maxDuration, conferenceCalloutRequest.maxDuration)
        && Objects.equals(this.enableAce, conferenceCalloutRequest.enableAce)
        && Objects.equals(this.enableDice, conferenceCalloutRequest.enableDice)
        && Objects.equals(this.enablePie, conferenceCalloutRequest.enablePie)
        && Objects.equals(this.locale, conferenceCalloutRequest.locale)
        && Objects.equals(this.greeting, conferenceCalloutRequest.greeting)
        && Objects.equals(this.mohClass, conferenceCalloutRequest.mohClass)
        && Objects.equals(this.custom, conferenceCalloutRequest.custom)
        && Objects.equals(this.domain, conferenceCalloutRequest.domain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        destination,
        conferenceId,
        cli,
        conferenceDtmfOptions,
        dtmf,
        maxDuration,
        enableAce,
        enableDice,
        enablePie,
        locale,
        greeting,
        mohClass,
        custom,
        domain);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConferenceCalloutRequestDto {\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    conferenceId: ").append(toIndentedString(conferenceId)).append("\n");
    sb.append("    cli: ").append(toIndentedString(cli)).append("\n");
    sb.append("    conferenceDtmfOptions: ")
        .append(toIndentedString(conferenceDtmfOptions))
        .append("\n");
    sb.append("    dtmf: ").append(toIndentedString(dtmf)).append("\n");
    sb.append("    maxDuration: ").append(toIndentedString(maxDuration)).append("\n");
    sb.append("    enableAce: ").append(toIndentedString(enableAce)).append("\n");
    sb.append("    enableDice: ").append(toIndentedString(enableDice)).append("\n");
    sb.append("    enablePie: ").append(toIndentedString(enablePie)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    greeting: ").append(toIndentedString(greeting)).append("\n");
    sb.append("    mohClass: ").append(toIndentedString(mohClass)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
