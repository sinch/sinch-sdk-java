/*
 * Voice API | Sinch
 * The Voice API exposes calling- and conference-related functionality in the Sinch Voice Platform.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** A configured option that the user can trigger to perform an action. */
@JsonPropertyOrder({OptionDto.JSON_PROPERTY_DTMF, OptionDto.JSON_PROPERTY_ACTION})
// @javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OptionDto {
  public static final String JSON_PROPERTY_DTMF = "dtmf";
  private String dtmf;

  public static final String JSON_PROPERTY_ACTION = "action";
  private String action;

  public OptionDto() {}

  public OptionDto dtmf(String dtmf) {
    this.dtmf = dtmf;
    return this;
  }

  /**
   * A DTMF digit the user can press to trigger the configured action.
   *
   * @return dtmf
   */
  @JsonProperty(JSON_PROPERTY_DTMF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDtmf() {
    return dtmf;
  }

  @JsonProperty(JSON_PROPERTY_DTMF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDtmf(String dtmf) {
    this.dtmf = dtmf;
  }

  public OptionDto action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Determines which action is taken when the DTMF digit is pressed.
   *
   * @return action
   */
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAction() {
    return action;
  }

  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAction(String action) {
    this.action = action;
  }

  /** Return true if this option object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptionDto option = (OptionDto) o;
    return Objects.equals(this.dtmf, option.dtmf) && Objects.equals(this.action, option.action);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dtmf, action);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptionDto {\n");
    sb.append("    dtmf: ").append(toIndentedString(dtmf)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
