/*
 * Voice API | Sinch
 *
 * OpenAPI document version: 1.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.voice.models.v1.webhooks;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.utils.EnumDynamic;
import com.sinch.sdk.core.utils.EnumSupportDynamic;
import com.sinch.sdk.domains.voice.models.v1.Destination;
import com.sinch.sdk.domains.voice.models.v1.Price;
import com.sinch.sdk.domains.voice.models.v1.calls.response.CallResult;
import com.sinch.sdk.domains.voice.models.v1.svaml.action.CallHeader;
import java.time.Instant;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

/** The request body of a Disconnected Call Event. */
@JsonDeserialize(builder = DisconnectedCallEventImpl.Builder.class)
public interface DisconnectedCallEvent extends VoiceWebhookEvent, VoiceWebhookCallEvent {

  /**
   * The timestamp in UTC format.
   *
   * @return timestamp
   */
  Instant getTimestamp();

  /**
   * A string that can be used to pass custom information related to the call.
   *
   * @return custom
   */
  String getCustom();

  /**
   * The unique application key. You can find it in the Sinch <a
   * href="https://dashboard.sinch.com/voice/apps">dashboard</a>.
   *
   * @return applicationKey
   */
  String getApplicationKey();

  /** Must have the value <code>dice</code>. */
  public class WebhooksEventRequestType extends EnumDynamic<String, WebhooksEventRequestType> {
    public static final WebhooksEventRequestType DICE = new WebhooksEventRequestType("dice");

    private static final EnumSupportDynamic<String, WebhooksEventRequestType> ENUM_SUPPORT =
        new EnumSupportDynamic<>(
            WebhooksEventRequestType.class, WebhooksEventRequestType::new, Arrays.asList(DICE));

    private WebhooksEventRequestType(String value) {
      super(value);
    }

    public static Stream<WebhooksEventRequestType> values() {
      return ENUM_SUPPORT.values();
    }

    public static WebhooksEventRequestType from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(WebhooksEventRequestType e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /** The reason the call was disconnected. */
  public class ReasonEnum extends EnumDynamic<String, ReasonEnum> {
    public static final ReasonEnum N_A = new ReasonEnum("N/A");
    public static final ReasonEnum TIMEOUT = new ReasonEnum("TIMEOUT");
    public static final ReasonEnum CALLERHANGUP = new ReasonEnum("CALLERHANGUP");
    public static final ReasonEnum CALLEEHANGUP = new ReasonEnum("CALLEEHANGUP");
    public static final ReasonEnum BLOCKED = new ReasonEnum("BLOCKED");
    public static final ReasonEnum MANAGERHANGUP = new ReasonEnum("MANAGERHANGUP");
    public static final ReasonEnum NOCREDITPARTNER = new ReasonEnum("NOCREDITPARTNER");
    public static final ReasonEnum GENERALERROR = new ReasonEnum("GENERALERROR");
    public static final ReasonEnum CANCEL = new ReasonEnum("CANCEL");
    public static final ReasonEnum USERNOTFOUND = new ReasonEnum("USERNOTFOUND");
    public static final ReasonEnum CALLBACKERROR = new ReasonEnum("CALLBACKERROR");

    private static final EnumSupportDynamic<String, ReasonEnum> ENUM_SUPPORT =
        new EnumSupportDynamic<>(
            ReasonEnum.class,
            ReasonEnum::new,
            Arrays.asList(
                N_A,
                TIMEOUT,
                CALLERHANGUP,
                CALLEEHANGUP,
                BLOCKED,
                MANAGERHANGUP,
                NOCREDITPARTNER,
                GENERALERROR,
                CANCEL,
                USERNOTFOUND,
                CALLBACKERROR));

    private ReasonEnum(String value) {
      super(value);
    }

    public static Stream<ReasonEnum> values() {
      return ENUM_SUPPORT.values();
    }

    public static ReasonEnum from(String value) {
      return ENUM_SUPPORT.from(value);
    }

    public static String valueOf(ReasonEnum e) {
      return ENUM_SUPPORT.valueOf(e);
    }
  }

  /**
   * The reason the call was disconnected.
   *
   * @return reason
   */
  ReasonEnum getReason();

  /**
   * Get result
   *
   * @return result
   */
  CallResult getResult();

  /**
   * Get debit
   *
   * @return debit
   */
  Price getDebit();

  /**
   * Get userRate
   *
   * @return userRate
   */
  Price getUserRate();

  /**
   * Get to
   *
   * @return to
   */
  Destination getTo();

  /**
   * The duration of the call in seconds.
   *
   * @return duration
   */
  Integer getDuration();

  /**
   * Information about the initiator of the call.
   *
   * @return from
   */
  String getFrom();

  /**
   * If the call was initiated by a Sinch SDK client, call headers are the headers specified by the
   * <em>caller</em> client. Read more about call headers <a
   * href="https://developers.sinch.com/docs/voice/api-reference/call-headers/">here</a>.
   *
   * @return callHeaders
   */
  List<CallHeader> getCallHeaders();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new DisconnectedCallEventImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder extends VoiceWebhookEvent.Builder<Builder>, VoiceWebhookCallEvent.Builder {

    /**
     * see getter
     *
     * @param timestamp see getter
     * @return Current builder
     * @see #getTimestamp
     */
    Builder setTimestamp(Instant timestamp);

    /**
     * see getter
     *
     * @param custom see getter
     * @return Current builder
     * @see #getCustom
     */
    Builder setCustom(String custom);

    /**
     * see getter
     *
     * @param applicationKey see getter
     * @return Current builder
     * @see #getApplicationKey
     */
    Builder setApplicationKey(String applicationKey);

    /**
     * see getter
     *
     * @param reason see getter
     * @return Current builder
     * @see #getReason
     */
    Builder setReason(ReasonEnum reason);

    /**
     * see getter
     *
     * @param result see getter
     * @return Current builder
     * @see #getResult
     */
    Builder setResult(CallResult result);

    /**
     * see getter
     *
     * @param debit see getter
     * @return Current builder
     * @see #getDebit
     */
    Builder setDebit(Price debit);

    /**
     * see getter
     *
     * @param userRate see getter
     * @return Current builder
     * @see #getUserRate
     */
    Builder setUserRate(Price userRate);

    /**
     * see getter
     *
     * @param to see getter
     * @return Current builder
     * @see #getTo
     */
    Builder setTo(Destination to);

    /**
     * see getter
     *
     * @param duration see getter
     * @return Current builder
     * @see #getDuration
     */
    Builder setDuration(Integer duration);

    /**
     * see getter
     *
     * @param from see getter
     * @return Current builder
     * @see #getFrom
     */
    Builder setFrom(String from);

    /**
     * see getter
     *
     * @param callHeaders see getter
     * @return Current builder
     * @see #getCallHeaders
     */
    Builder setCallHeaders(List<CallHeader> callHeaders);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    DisconnectedCallEvent build();
  }
}
