/*
 * Numbers | Sinch
 * An API service for getting, listing and managing Sinch virtual numbers.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: Support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.numbers.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Response message to list available phone numbers. */
@JsonPropertyOrder({AvailableNumbersResponseDto.JSON_PROPERTY_AVAILABLE_NUMBERS})
// @javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AvailableNumbersResponseDto {
  public static final String JSON_PROPERTY_AVAILABLE_NUMBERS = "availableNumbers";
  private List<AvailableNumberDto> availableNumbers;

  public AvailableNumbersResponseDto() {}

  public AvailableNumbersResponseDto availableNumbers(List<AvailableNumberDto> availableNumbers) {
    this.availableNumbers = availableNumbers;
    return this;
  }

  public AvailableNumbersResponseDto addAvailableNumbersItem(
      AvailableNumberDto availableNumbersItem) {
    if (this.availableNumbers == null) {
      this.availableNumbers = new ArrayList<>();
    }
    this.availableNumbers.add(availableNumbersItem);
    return this;
  }

  /**
   * List of available phone numbers.
   *
   * @return availableNumbers
   */
  @JsonProperty(JSON_PROPERTY_AVAILABLE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<AvailableNumberDto> getAvailableNumbers() {
    return availableNumbers;
  }

  @JsonProperty(JSON_PROPERTY_AVAILABLE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableNumbers(List<AvailableNumberDto> availableNumbers) {
    this.availableNumbers = availableNumbers;
  }

  /** Return true if this AvailableNumbersResponse object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvailableNumbersResponseDto availableNumbersResponse = (AvailableNumbersResponseDto) o;
    return Objects.equals(this.availableNumbers, availableNumbersResponse.availableNumbers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableNumbers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvailableNumbersResponseDto {\n");
    sb.append("    availableNumbers: ").append(toIndentedString(availableNumbers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
