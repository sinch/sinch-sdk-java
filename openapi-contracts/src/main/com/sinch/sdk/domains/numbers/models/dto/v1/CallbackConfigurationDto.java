/*
 * Numbers | Sinch
 * An API service for getting, listing and managing Sinch virtual numbers.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: Support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.numbers.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** Response message containing the callbacks configuration for a specific project */
@JsonPropertyOrder({
  CallbackConfigurationDto.JSON_PROPERTY_PROJECT_ID,
  CallbackConfigurationDto.JSON_PROPERTY_HMAC_SECRET
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class CallbackConfigurationDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private String projectId;
  private boolean projectIdDefined = false;

  public static final String JSON_PROPERTY_HMAC_SECRET = "hmacSecret";
  private String hmacSecret;
  private boolean hmacSecretDefined = false;

  public CallbackConfigurationDto() {}

  public CallbackConfigurationDto projectId(String projectId) {
    this.projectId = projectId;
    this.projectIdDefined = true;
    return this;
  }

  /**
   * Get projectId
   *
   * @return projectId
   */
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getProjectId() {
    return projectId;
  }

  @JsonIgnore
  public boolean getProjectIdDefined() {
    return projectIdDefined;
  }

  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectId(String projectId) {
    this.projectId = projectId;
    this.projectIdDefined = true;
  }

  public CallbackConfigurationDto hmacSecret(String hmacSecret) {
    this.hmacSecret = hmacSecret;
    this.hmacSecretDefined = true;
    return this;
  }

  /**
   * Get hmacSecret
   *
   * @return hmacSecret
   */
  @JsonProperty(JSON_PROPERTY_HMAC_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHmacSecret() {
    return hmacSecret;
  }

  @JsonIgnore
  public boolean getHmacSecretDefined() {
    return hmacSecretDefined;
  }

  @JsonProperty(JSON_PROPERTY_HMAC_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHmacSecret(String hmacSecret) {
    this.hmacSecret = hmacSecret;
    this.hmacSecretDefined = true;
  }

  /** Return true if this CallbackConfiguration object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallbackConfigurationDto callbackConfiguration = (CallbackConfigurationDto) o;
    return Objects.equals(this.projectId, callbackConfiguration.projectId)
        && Objects.equals(this.hmacSecret, callbackConfiguration.hmacSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectId, hmacSecret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallbackConfigurationDto {\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    hmacSecret: ").append(toIndentedString(hmacSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
