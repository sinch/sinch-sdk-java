/*
 * Numbers | Sinch
 * An API service for getting, listing and managing Sinch virtual numbers.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: Support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.numbers.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** SearchPatternDto */
@JsonPropertyOrder({
  SearchPatternDto.JSON_PROPERTY_PATTERN,
  SearchPatternDto.JSON_PROPERTY_SEARCH_PATTERN
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class SearchPatternDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_PATTERN = "pattern";
  private String pattern;
  private boolean patternDefined = false;

  public static final String JSON_PROPERTY_SEARCH_PATTERN = "searchPattern";
  private String searchPattern;
  private boolean searchPatternDefined = false;

  public SearchPatternDto() {}

  public SearchPatternDto pattern(String pattern) {
    this.pattern = pattern;
    this.patternDefined = true;
    return this;
  }

  /**
   * Sequence of digits to search for.
   *
   * @return pattern
   */
  @JsonProperty(JSON_PROPERTY_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPattern() {
    return pattern;
  }

  @JsonIgnore
  public boolean getPatternDefined() {
    return patternDefined;
  }

  @JsonProperty(JSON_PROPERTY_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPattern(String pattern) {
    this.pattern = pattern;
    this.patternDefined = true;
  }

  public SearchPatternDto searchPattern(String searchPattern) {
    this.searchPattern = searchPattern;
    this.searchPatternDefined = true;
    return this;
  }

  /**
   * The pattern to apply to searches.
   *
   * @return searchPattern
   */
  @JsonProperty(JSON_PROPERTY_SEARCH_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSearchPattern() {
    return searchPattern;
  }

  @JsonIgnore
  public boolean getSearchPatternDefined() {
    return searchPatternDefined;
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchPattern(String searchPattern) {
    this.searchPattern = searchPattern;
    this.searchPatternDefined = true;
  }

  /** Return true if this SearchPattern object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchPatternDto searchPattern = (SearchPatternDto) o;
    return Objects.equals(this.pattern, searchPattern.pattern)
        && Objects.equals(this.searchPattern, searchPattern.searchPattern);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pattern, searchPattern);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchPatternDto {\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    searchPattern: ").append(toIndentedString(searchPattern)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
