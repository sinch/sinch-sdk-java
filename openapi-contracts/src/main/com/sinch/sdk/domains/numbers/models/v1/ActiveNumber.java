/*
 * Numbers | Sinch
 * An API service for getting, listing and managing Sinch virtual numbers.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: Support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.numbers.models.v1;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.time.Instant;
import java.util.List;

/** The phone number that has been rented by a customer and assigned to a project. */
@JsonDeserialize(builder = ActiveNumberImpl.Builder.class)
public interface ActiveNumber {

  /**
   * The phone number in The phone number in <a
   * href="https://community.sinch.com/t5/Glossary/E-164/ta-p/7537&quot;">E.164</a> format with
   * leading <code>+</code>.
   *
   * @return phoneNumber
   */
  String getPhoneNumber();

  /**
   * Project ID. Your project ID can be Found on your <a
   * href="https://dashboard.sinch.com/settings/project-management">Sinch Customer Dashboard</a>.
   *
   * @return projectId
   */
  String getProjectId();

  /**
   * User supplied name for the phone number.
   *
   * @return displayName
   */
  String getDisplayName();

  /**
   * ISO 3166-1 alpha-2 country code of the phone number. Example <code>US</code>, <code>GB</code>
   * or <code>SE</code>.
   *
   * @return regionCode
   */
  String getRegionCode();

  /**
   * Get type
   *
   * @return type
   */
  NumberType getType();

  /**
   * The capability of the number.
   *
   * @return capability
   */
  List<Capability> getCapability();

  /**
   * Get money
   *
   * @return money
   */
  Money getMoney();

  /**
   * How often the recurring price is charged in months.
   *
   * @return paymentIntervalMonths
   */
  Integer getPaymentIntervalMonths();

  /**
   * The date of the next charge.
   *
   * @return nextChargeDate
   */
  Instant getNextChargeDate();

  /**
   * The timestamp when the subscription will expire if an expiration date has been set.
   *
   * @return expireAt
   */
  Instant getExpireAt();

  /**
   * Get smsConfiguration
   *
   * @return smsConfiguration
   */
  SmsConfiguration getSmsConfiguration();

  /**
   * Get voiceConfiguration
   *
   * @return voiceConfiguration
   */
  VoiceConfiguration getVoiceConfiguration();

  /**
   * The active number's callback URL to be called for provisioning / deprovisioning updates
   *
   * @return callbackUrl
   */
  String getCallbackUrl();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new ActiveNumberImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param phoneNumber see getter
     * @return Current builder
     * @see #getPhoneNumber
     */
    Builder setPhoneNumber(String phoneNumber);

    /**
     * see getter
     *
     * @param projectId see getter
     * @return Current builder
     * @see #getProjectId
     */
    Builder setProjectId(String projectId);

    /**
     * see getter
     *
     * @param displayName see getter
     * @return Current builder
     * @see #getDisplayName
     */
    Builder setDisplayName(String displayName);

    /**
     * see getter
     *
     * @param regionCode see getter
     * @return Current builder
     * @see #getRegionCode
     */
    Builder setRegionCode(String regionCode);

    /**
     * see getter
     *
     * @param type see getter
     * @return Current builder
     * @see #getType
     */
    Builder setType(NumberType type);

    /**
     * see getter
     *
     * @param capability see getter
     * @return Current builder
     * @see #getCapability
     */
    Builder setCapability(List<Capability> capability);

    /**
     * see getter
     *
     * @param money see getter
     * @return Current builder
     * @see #getMoney
     */
    Builder setMoney(Money money);

    /**
     * see getter
     *
     * @param paymentIntervalMonths see getter
     * @return Current builder
     * @see #getPaymentIntervalMonths
     */
    Builder setPaymentIntervalMonths(Integer paymentIntervalMonths);

    /**
     * see getter
     *
     * @param nextChargeDate see getter
     * @return Current builder
     * @see #getNextChargeDate
     */
    Builder setNextChargeDate(Instant nextChargeDate);

    /**
     * see getter
     *
     * @param expireAt see getter
     * @return Current builder
     * @see #getExpireAt
     */
    Builder setExpireAt(Instant expireAt);

    /**
     * see getter
     *
     * @param smsConfiguration see getter
     * @return Current builder
     * @see #getSmsConfiguration
     */
    Builder setSmsConfiguration(SmsConfiguration smsConfiguration);

    /**
     * see getter
     *
     * @param voiceConfiguration see getter
     * @return Current builder
     * @see #getVoiceConfiguration
     */
    Builder setVoiceConfiguration(VoiceConfiguration voiceConfiguration);

    /**
     * see getter
     *
     * @param callbackUrl see getter
     * @return Current builder
     * @see #getCallbackUrl
     */
    Builder setCallbackUrl(String callbackUrl);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    ActiveNumber build();
  }
}
