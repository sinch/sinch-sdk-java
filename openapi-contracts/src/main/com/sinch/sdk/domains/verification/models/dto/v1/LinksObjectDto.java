/*
 * Verification | Sinch
 * Verify users with SMS, flash calls (missed calls), a regular call, or data verification.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.verification.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** Available methods and actions which can be done after a successful Verification */
@JsonPropertyOrder({
  LinksObjectDto.JSON_PROPERTY_REL,
  LinksObjectDto.JSON_PROPERTY_HREF,
  LinksObjectDto.JSON_PROPERTY_METHOD
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class LinksObjectDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_REL = "rel";
  private String rel;
  private boolean relDefined = false;

  public static final String JSON_PROPERTY_HREF = "href";
  private String href;
  private boolean hrefDefined = false;

  public static final String JSON_PROPERTY_METHOD = "method";
  private String method;
  private boolean methodDefined = false;

  public LinksObjectDto() {}

  public LinksObjectDto rel(String rel) {
    this.rel = rel;
    this.relDefined = true;
    return this;
  }

  /**
   * The related action that can be performed on the initiated Verification.
   *
   * @return rel
   */
  @JsonProperty(JSON_PROPERTY_REL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getRel() {
    return rel;
  }

  @JsonIgnore
  public boolean getRelDefined() {
    return relDefined;
  }

  @JsonProperty(JSON_PROPERTY_REL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRel(String rel) {
    this.rel = rel;
    this.relDefined = true;
  }

  public LinksObjectDto href(String href) {
    this.href = href;
    this.hrefDefined = true;
    return this;
  }

  /**
   * The complete URL to perform the specified action, localized to the DataCenter which handled the
   * original Verification request.
   *
   * @return href
   */
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHref() {
    return href;
  }

  @JsonIgnore
  public boolean getHrefDefined() {
    return hrefDefined;
  }

  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(String href) {
    this.href = href;
    this.hrefDefined = true;
  }

  public LinksObjectDto method(String method) {
    this.method = method;
    this.methodDefined = true;
    return this;
  }

  /**
   * The HTTP method to use when performing the action using the linked localized URL.
   *
   * @return method
   */
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMethod() {
    return method;
  }

  @JsonIgnore
  public boolean getMethodDefined() {
    return methodDefined;
  }

  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(String method) {
    this.method = method;
    this.methodDefined = true;
  }

  /** Return true if this _linksObject object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinksObjectDto linksObject = (LinksObjectDto) o;
    return Objects.equals(this.rel, linksObject.rel)
        && Objects.equals(this.href, linksObject.href)
        && Objects.equals(this.method, linksObject.method);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rel, href, method);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinksObjectDto {\n");
    sb.append("    rel: ").append(toIndentedString(rel)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
