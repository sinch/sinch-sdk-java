/*
 * Verification | Sinch
 *
 * OpenAPI document version: 2.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.verification.models.v1.webhooks;

import com.sinch.sdk.domains.verification.models.v1.Identity;
import com.sinch.sdk.domains.verification.models.v1.VerificationMethod;

/** VerificationEvent */
public interface VerificationEvent {

  /**
   * The ID of the verification request.
   *
   * <p>Field is required
   *
   * @return id
   */
  String getId();

  /**
   * Get method
   *
   * <p>Field is required
   *
   * @return method
   */
  VerificationMethod getMethod();

  /**
   * Get identity
   *
   * <p>Field is required
   *
   * @return identity
   */
  Identity getIdentity();

  /**
   * Used to pass your own reference in the request for tracking purposes. Must be a unique value
   * for each started verification request. The value must be encodable in the URL path segment.
   * This value is passed to all events and returned from the status and report endpoints. The
   * reference can be used to check the <a
   * href="https://developers.sinch.com/docs/verification/api-reference/verification/tag/Verification-status/#tag/Verification-status/operation/VerificationStatusByReference">status
   * of verifications</a>, like with ID or identity.
   *
   * @return reference
   */
  String getReference();

  /**
   * Can be used to pass custom data in the request. Will be passed to all events. Max length 4096
   * characters, can be arbitrary text data.
   *
   * @return custom
   */
  String getCustom();

  /** Dedicated Builder */
  interface Builder {

    /**
     * see getter
     *
     * @param id see getter
     * @return Current builder
     * @see #getId
     */
    Builder setId(String id);

    /**
     * see getter
     *
     * @param method see getter
     * @return Current builder
     * @see #getMethod
     */
    Builder setMethod(VerificationMethod method);

    /**
     * see getter
     *
     * @param identity see getter
     * @return Current builder
     * @see #getIdentity
     */
    Builder setIdentity(Identity identity);

    /**
     * see getter
     *
     * @param reference see getter
     * @return Current builder
     * @see #getReference
     */
    Builder setReference(String reference);

    /**
     * see getter
     *
     * @param custom see getter
     * @return Current builder
     * @see #getCustom
     */
    Builder setCustom(String custom);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    VerificationEvent build();
  }
}
