/*
 * Verification | Sinch
 * Verify users with SMS, flash calls (missed calls), a regular call, or data verification.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.verification.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** VerificationRequestEventDto */
@JsonPropertyOrder({
  VerificationRequestEventDto.JSON_PROPERTY_ID,
  VerificationRequestEventDto.JSON_PROPERTY_EVENT,
  VerificationRequestEventDto.JSON_PROPERTY_METHOD,
  VerificationRequestEventDto.JSON_PROPERTY_IDENTITY,
  VerificationRequestEventDto.JSON_PROPERTY_PRICE,
  VerificationRequestEventDto.JSON_PROPERTY_REFERENCE,
  VerificationRequestEventDto.JSON_PROPERTY_CUSTOM,
  VerificationRequestEventDto.JSON_PROPERTY_ACCEPT_LANGUAGE
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class VerificationRequestEventDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_ID = "id";
  private String id;
  private boolean idDefined = false;

  /** The type of the event. */
  public enum EventEnum {
    VERIFICATIONREQUESTEVENT("VerificationRequestEvent"),

    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    EventEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EventEnum fromValue(String value) {
      for (EventEnum b : EventEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_EVENT = "event";
  private String event;
  private boolean eventDefined = false;

  /** The verification method. */
  public enum MethodEnum {
    SMS("sms"),

    FLASHCALL("flashcall"),

    CALLOUT("callout"),

    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MethodEnum fromValue(String value) {
      for (MethodEnum b : MethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_METHOD = "method";
  private String method;
  private boolean methodDefined = false;

  public static final String JSON_PROPERTY_IDENTITY = "identity";
  private IdentityDto identity;
  private boolean identityDefined = false;

  public static final String JSON_PROPERTY_PRICE = "price";
  private PriceDto price;
  private boolean priceDefined = false;

  public static final String JSON_PROPERTY_REFERENCE = "reference";
  private String reference;
  private boolean referenceDefined = false;

  public static final String JSON_PROPERTY_CUSTOM = "custom";
  private String custom;
  private boolean customDefined = false;

  public static final String JSON_PROPERTY_ACCEPT_LANGUAGE = "acceptLanguage";
  private List<String> acceptLanguage;
  private boolean acceptLanguageDefined = false;

  public VerificationRequestEventDto() {}

  public VerificationRequestEventDto id(String id) {
    this.id = id;
    this.idDefined = true;
    return this;
  }

  /**
   * The ID of the verification request.
   *
   * @return id
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getId() {
    return id;
  }

  @JsonIgnore
  public boolean getIdDefined() {
    return idDefined;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
    this.idDefined = true;
  }

  public VerificationRequestEventDto event(String event) {
    this.event = event;
    this.eventDefined = true;
    return this;
  }

  /**
   * The type of the event.
   *
   * @return event
   */
  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getEvent() {
    return event;
  }

  @JsonIgnore
  public boolean getEventDefined() {
    return eventDefined;
  }

  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEvent(String event) {
    this.event = event;
    this.eventDefined = true;
  }

  public VerificationRequestEventDto method(String method) {
    this.method = method;
    this.methodDefined = true;
    return this;
  }

  /**
   * The verification method.
   *
   * @return method
   */
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getMethod() {
    return method;
  }

  @JsonIgnore
  public boolean getMethodDefined() {
    return methodDefined;
  }

  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMethod(String method) {
    this.method = method;
    this.methodDefined = true;
  }

  public VerificationRequestEventDto identity(IdentityDto identity) {
    this.identity = identity;
    this.identityDefined = true;
    return this;
  }

  /**
   * Get identity
   *
   * @return identity
   */
  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public IdentityDto getIdentity() {
    return identity;
  }

  @JsonIgnore
  public boolean getIdentityDefined() {
    return identityDefined;
  }

  @JsonProperty(JSON_PROPERTY_IDENTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIdentity(IdentityDto identity) {
    this.identity = identity;
    this.identityDefined = true;
  }

  public VerificationRequestEventDto price(PriceDto price) {
    this.price = price;
    this.priceDefined = true;
    return this;
  }

  /**
   * Get price
   *
   * @return price
   */
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PriceDto getPrice() {
    return price;
  }

  @JsonIgnore
  public boolean getPriceDefined() {
    return priceDefined;
  }

  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(PriceDto price) {
    this.price = price;
    this.priceDefined = true;
  }

  public VerificationRequestEventDto reference(String reference) {
    this.reference = reference;
    this.referenceDefined = true;
    return this;
  }

  /**
   * Used to pass your own reference in the request for tracking purposes.
   *
   * @return reference
   */
  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getReference() {
    return reference;
  }

  @JsonIgnore
  public boolean getReferenceDefined() {
    return referenceDefined;
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReference(String reference) {
    this.reference = reference;
    this.referenceDefined = true;
  }

  public VerificationRequestEventDto custom(String custom) {
    this.custom = custom;
    this.customDefined = true;
    return this;
  }

  /**
   * Can be used to pass custom data in the request.
   *
   * @return custom
   */
  @JsonProperty(JSON_PROPERTY_CUSTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCustom() {
    return custom;
  }

  @JsonIgnore
  public boolean getCustomDefined() {
    return customDefined;
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustom(String custom) {
    this.custom = custom;
    this.customDefined = true;
  }

  public VerificationRequestEventDto acceptLanguage(List<String> acceptLanguage) {
    this.acceptLanguage = acceptLanguage;
    this.acceptLanguageDefined = true;
    return this;
  }

  public VerificationRequestEventDto addAcceptLanguageItem(String acceptLanguageItem) {
    if (this.acceptLanguage == null) {
      this.acceptLanguage = new ArrayList<>();
    }
    this.acceptLanguageDefined = true;
    this.acceptLanguage.add(acceptLanguageItem);
    return this;
  }

  /**
   * Allows you to set or override if provided in the API request, the SMS verification content
   * language. Only used with the SMS verification method. The content language specified in the API
   * request or in the callback can be overridden by carrier provider specific templates, due to
   * compliance and legal requirements, such as [US shortcode requirements
   * (pdf)](https://community.sinch.com/t5/SMS/Sinch-US-Short-Code-Onboarding-Overview/ta-p/7085).
   *
   * @return acceptLanguage
   */
  @JsonProperty(JSON_PROPERTY_ACCEPT_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getAcceptLanguage() {
    return acceptLanguage;
  }

  @JsonIgnore
  public boolean getAcceptLanguageDefined() {
    return acceptLanguageDefined;
  }

  @JsonProperty(JSON_PROPERTY_ACCEPT_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcceptLanguage(List<String> acceptLanguage) {
    this.acceptLanguage = acceptLanguage;
    this.acceptLanguageDefined = true;
  }

  /** Return true if this VerificationRequestEvent object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerificationRequestEventDto verificationRequestEvent = (VerificationRequestEventDto) o;
    return Objects.equals(this.id, verificationRequestEvent.id)
        && Objects.equals(this.event, verificationRequestEvent.event)
        && Objects.equals(this.method, verificationRequestEvent.method)
        && Objects.equals(this.identity, verificationRequestEvent.identity)
        && Objects.equals(this.price, verificationRequestEvent.price)
        && Objects.equals(this.reference, verificationRequestEvent.reference)
        && Objects.equals(this.custom, verificationRequestEvent.custom)
        && Objects.equals(this.acceptLanguage, verificationRequestEvent.acceptLanguage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, event, method, identity, price, reference, custom, acceptLanguage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerificationRequestEventDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    acceptLanguage: ").append(toIndentedString(acceptLanguage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
