/*
 * Verification | Sinch
 *
 * OpenAPI document version: 2.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.verification.models.v1.webhooks.internal;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.sinch.sdk.core.models.AdditionalProperties;
import com.sinch.sdk.domains.verification.models.v1.SmsCodeType;
import java.util.List;

/** VerificationRequestEventResponseSmsContent */
@JsonDeserialize(builder = VerificationRequestEventResponseSmsContentImpl.Builder.class)
public interface VerificationRequestEventResponseSmsContent extends AdditionalProperties {

  /**
   * The SMS OTP code that should be used. By default, the Sinch dashboard will automatically
   * generate OTP codes for SMS verification. If you want to set your own OTP, you can specify it in
   * the response to the Verification Request Event.
   *
   * @return code
   */
  String getCode();

  /**
   * Get codeType
   *
   * @return codeType
   */
  SmsCodeType getCodeType();

  /**
   * The expiration time for a verification process is represented in the format <code>HH:MM:SS
   * </code>.
   *
   * @return expiry
   */
  String getExpiry();

  /**
   * The SMS verification content language. Set in the verification request.
   *
   * @return acceptLanguage
   */
  List<String> getAcceptLanguage();

  /**
   * Getting builder
   *
   * @return New Builder instance
   */
  static Builder builder() {
    return new VerificationRequestEventResponseSmsContentImpl.Builder();
  }

  /** Dedicated Builder */
  interface Builder extends AdditionalProperties.Builder {

    /**
     * see getter
     *
     * @param code see getter
     * @return Current builder
     * @see #getCode
     */
    Builder setCode(String code);

    /**
     * see getter
     *
     * @param codeType see getter
     * @return Current builder
     * @see #getCodeType
     */
    Builder setCodeType(SmsCodeType codeType);

    /**
     * see getter
     *
     * @param expiry see getter
     * @return Current builder
     * @see #getExpiry
     */
    Builder setExpiry(String expiry);

    /**
     * see getter
     *
     * @param acceptLanguage see getter
     * @return Current builder
     * @see #getAcceptLanguage
     */
    Builder setAcceptLanguage(List<String> acceptLanguage);

    /**
     * see getter
     *
     * @return Current builder
     * @see #get
     */
    Builder put(String key, Object value);

    /**
     * Create instance
     *
     * @return The instance build with current builder values
     */
    VerificationRequestEventResponseSmsContent build();
  }
}
