/*
 * Verification | Sinch
 * Verify users with SMS, flash calls (missed calls), a regular call, or data verification.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.verification.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** Prices associated with this verification */
@JsonPropertyOrder({
  FlashcallVerificationStatusResponseAllOfPriceDto.JSON_PROPERTY_VERIFICATION_PRICE,
  FlashcallVerificationStatusResponseAllOfPriceDto.JSON_PROPERTY_TERMINATION_PRICE,
  FlashcallVerificationStatusResponseAllOfPriceDto.JSON_PROPERTY_BILLABLE_DURATION
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class FlashcallVerificationStatusResponseAllOfPriceDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_VERIFICATION_PRICE = "verificationPrice";
  private PriceDto verificationPrice;
  private boolean verificationPriceDefined = false;

  public static final String JSON_PROPERTY_TERMINATION_PRICE = "terminationPrice";
  private PriceDto terminationPrice;
  private boolean terminationPriceDefined = false;

  public static final String JSON_PROPERTY_BILLABLE_DURATION = "billableDuration";
  private Integer billableDuration;
  private boolean billableDurationDefined = false;

  public FlashcallVerificationStatusResponseAllOfPriceDto() {}

  public FlashcallVerificationStatusResponseAllOfPriceDto verificationPrice(
      PriceDto verificationPrice) {
    this.verificationPrice = verificationPrice;
    this.verificationPriceDefined = true;
    return this;
  }

  /**
   * Get verificationPrice
   *
   * @return verificationPrice
   */
  @JsonProperty(JSON_PROPERTY_VERIFICATION_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PriceDto getVerificationPrice() {
    return verificationPrice;
  }

  @JsonIgnore
  public boolean getVerificationPriceDefined() {
    return verificationPriceDefined;
  }

  @JsonProperty(JSON_PROPERTY_VERIFICATION_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerificationPrice(PriceDto verificationPrice) {
    this.verificationPrice = verificationPrice;
    this.verificationPriceDefined = true;
  }

  public FlashcallVerificationStatusResponseAllOfPriceDto terminationPrice(
      PriceDto terminationPrice) {
    this.terminationPrice = terminationPrice;
    this.terminationPriceDefined = true;
    return this;
  }

  /**
   * Get terminationPrice
   *
   * @return terminationPrice
   */
  @JsonProperty(JSON_PROPERTY_TERMINATION_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PriceDto getTerminationPrice() {
    return terminationPrice;
  }

  @JsonIgnore
  public boolean getTerminationPriceDefined() {
    return terminationPriceDefined;
  }

  @JsonProperty(JSON_PROPERTY_TERMINATION_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTerminationPrice(PriceDto terminationPrice) {
    this.terminationPrice = terminationPrice;
    this.terminationPriceDefined = true;
  }

  public FlashcallVerificationStatusResponseAllOfPriceDto billableDuration(
      Integer billableDuration) {
    this.billableDuration = billableDuration;
    this.billableDurationDefined = true;
    return this;
  }

  /**
   * The time of the call for which the fee was charged. Present only when termination debiting is
   * enabled (disabled by default). Depending on the type of rounding used, the value is the actual
   * call time rounded to the nearest second, minute or other value.
   *
   * @return billableDuration
   */
  @JsonProperty(JSON_PROPERTY_BILLABLE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getBillableDuration() {
    return billableDuration;
  }

  @JsonIgnore
  public boolean getBillableDurationDefined() {
    return billableDurationDefined;
  }

  @JsonProperty(JSON_PROPERTY_BILLABLE_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillableDuration(Integer billableDuration) {
    this.billableDuration = billableDuration;
    this.billableDurationDefined = true;
  }

  /** Return true if this FlashcallVerificationStatusResponse_allOf_price object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlashcallVerificationStatusResponseAllOfPriceDto flashcallVerificationStatusResponseAllOfPrice =
        (FlashcallVerificationStatusResponseAllOfPriceDto) o;
    return Objects.equals(
            this.verificationPrice, flashcallVerificationStatusResponseAllOfPrice.verificationPrice)
        && Objects.equals(
            this.terminationPrice, flashcallVerificationStatusResponseAllOfPrice.terminationPrice)
        && Objects.equals(
            this.billableDuration, flashcallVerificationStatusResponseAllOfPrice.billableDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(verificationPrice, terminationPrice, billableDuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlashcallVerificationStatusResponseAllOfPriceDto {\n");
    sb.append("    verificationPrice: ").append(toIndentedString(verificationPrice)).append("\n");
    sb.append("    terminationPrice: ").append(toIndentedString(terminationPrice)).append("\n");
    sb.append("    billableDuration: ").append(toIndentedString(billableDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
