/*
 * Verification | Sinch
 * Verify users with SMS, flash calls (missed calls), a regular call, or data verification.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: support@sinch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.sinch.sdk.domains.verification.models.dto.v1;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** SMSInitiateVerificationResponseDto */
@JsonPropertyOrder({
  SMSInitiateVerificationResponseDto.JSON_PROPERTY_ID,
  SMSInitiateVerificationResponseDto.JSON_PROPERTY_METHOD,
  SMSInitiateVerificationResponseDto.JSON_PROPERTY_SMS,
  SMSInitiateVerificationResponseDto.JSON_PROPERTY_LINKS
})
@JsonFilter("uninitializedFilter")
@JsonInclude(value = JsonInclude.Include.CUSTOM)
public class SMSInitiateVerificationResponseDto {
  private static final long serialVersionUID = 1L;
  public static final String JSON_PROPERTY_ID = "id";
  private String id;
  private boolean idDefined = false;

  public static final String JSON_PROPERTY_METHOD = "method";
  private String method;
  private boolean methodDefined = false;

  public static final String JSON_PROPERTY_SMS = "sms";
  private SMSInitiateVerificationResponseSmsDto sms;
  private boolean smsDefined = false;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private List<LinksObjectDto> links;
  private boolean linksDefined = false;

  public SMSInitiateVerificationResponseDto() {}

  public SMSInitiateVerificationResponseDto id(String id) {
    this.id = id;
    this.idDefined = true;
    return this;
  }

  /**
   * Verification identifier used to query for status.
   *
   * @return id
   */
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  @JsonIgnore
  public boolean getIdDefined() {
    return idDefined;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
    this.idDefined = true;
  }

  public SMSInitiateVerificationResponseDto method(String method) {
    this.method = method;
    this.methodDefined = true;
    return this;
  }

  /**
   * The value of the method used for the Verification. For SMS Verifications, this will always be
   * &#x60;sms&#x60;.
   *
   * @return method
   */
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMethod() {
    return method;
  }

  @JsonIgnore
  public boolean getMethodDefined() {
    return methodDefined;
  }

  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(String method) {
    this.method = method;
    this.methodDefined = true;
  }

  public SMSInitiateVerificationResponseDto sms(SMSInitiateVerificationResponseSmsDto sms) {
    this.sms = sms;
    this.smsDefined = true;
    return this;
  }

  /**
   * Get sms
   *
   * @return sms
   */
  @JsonProperty(JSON_PROPERTY_SMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SMSInitiateVerificationResponseSmsDto getSms() {
    return sms;
  }

  @JsonIgnore
  public boolean getSmsDefined() {
    return smsDefined;
  }

  @JsonProperty(JSON_PROPERTY_SMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSms(SMSInitiateVerificationResponseSmsDto sms) {
    this.sms = sms;
    this.smsDefined = true;
  }

  public SMSInitiateVerificationResponseDto links(List<LinksObjectDto> links) {
    this.links = links;
    this.linksDefined = true;
    return this;
  }

  public SMSInitiateVerificationResponseDto addLinksItem(LinksObjectDto linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.linksDefined = true;
    this.links.add(linksItem);
    return this;
  }

  /**
   * Get links
   *
   * @return links
   */
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<LinksObjectDto> getLinks() {
    return links;
  }

  @JsonIgnore
  public boolean getLinksDefined() {
    return linksDefined;
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(List<LinksObjectDto> links) {
    this.links = links;
    this.linksDefined = true;
  }

  /** Return true if this SMSInitiateVerificationResponse object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SMSInitiateVerificationResponseDto smSInitiateVerificationResponse =
        (SMSInitiateVerificationResponseDto) o;
    return Objects.equals(this.id, smSInitiateVerificationResponse.id)
        && Objects.equals(this.method, smSInitiateVerificationResponse.method)
        && Objects.equals(this.sms, smSInitiateVerificationResponse.sms)
        && Objects.equals(this.links, smSInitiateVerificationResponse.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, method, sms, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SMSInitiateVerificationResponseDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    sms: ").append(toIndentedString(sms)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
